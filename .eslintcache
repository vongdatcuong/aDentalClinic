[{"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\index.js":"1","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\reportWebVitals.js":"2","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\App\\App.js":"3","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\index.js":"4","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\contexts\\loading-context.js":"5","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\themes\\lightTheme.js":"6","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\contexts\\theme-context.js":"7","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\Loading\\index.js":"8","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\routes\\index.js":"9","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\themes\\darkTheme.js":"10","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\types\\Theme.js":"11","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\en-us\\index.js":"12","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\vn\\index.js":"13","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\colors\\index.js":"14","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\vn\\terms.js":"15","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\en-us\\terms.js":"16","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\routes\\path.js":"17","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\index.js":"18","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\PageContainer\\index.js":"19","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\RightSidebar\\index.js":"20","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\TreatmentMenu\\index.js":"21","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\LoginPage\\index.js":"22","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Staffs\\index.js":"23","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Providers\\index.js":"24","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Referral\\index.js":"25","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Procedure\\index.js":"26","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\ToothChartPage\\index.js":"27","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Settings\\index.js":"28","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\PatientProfilePage\\index.js":"29","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\PatientReportPage\\index.js":"30","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\CustomInput\\CustomInput.js":"31","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\LinkList.js":"32","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\jss.js":"33","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\FunctionList.js":"34","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationPopover.js":"35","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\RightSidebar\\jss.js":"36","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\configs\\strings.js":"37","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\LoginPage\\jss.js":"38","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\TreatmentMenu\\jss.js":"39","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\TreatmentMenu\\LinkList.js":"40","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Staffs\\jss.js":"41","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\CustomInput\\customInputStyle.js":"42","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\index.js":"43","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\PatientReportPage\\jss.js":"44","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\CustomAvatar\\index.js":"45","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationFuncPopover.js":"46","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Settings\\Notifications.js":"47","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\general\\index.js":"48","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Settings\\TermPrivacy.js":"49","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\Footer\\index.js":"50","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Settings\\jss.js":"51","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\datetimes\\convertDateTimes.js":"52","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\PatientProfilePage\\jss.js":"53","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\MenuBar\\index.js":"54","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Referral\\jss.js":"55","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\ToothChartPage\\jss.js":"56","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Procedure\\jss.js":"57","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Providers\\jss.js":"58","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\routes\\index.js":"59","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\CustomAvatar\\jss.js":"60","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\Footer\\Copyright.js":"61","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\MenuBar\\jss.js":"62","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\MenuBar\\MenuBarItem\\index.js":"63","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\index.js":"64","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\jss.js":"65","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\index.js":"66","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\configs\\figures.js":"67","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentTooltipHeader.js":"68","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointment.js":"69","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentTooltipContent.js":"70","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentContainer.js":"71","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeTableCell.js":"72","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeScaleLabel.js":"73","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\MakeAppointmentDialog.js":"74","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeScaleTicket.js":"75","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\SchedulerMenuItems.js":"76","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\GroupingPanelCell.js":"77","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomToolbarRow.js":"78","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomDateNavigatorButtons.js":"79","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomDateNavigatorOpenButton.js":"80","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\Empty\\index.js":"81"},{"size":598,"mtime":1614363487865,"results":"82","hashOfConfig":"83"},{"size":362,"mtime":499162500000,"results":"84","hashOfConfig":"83"},{"size":935,"mtime":1614450283226,"results":"85","hashOfConfig":"83"},{"size":560,"mtime":1615137932669,"results":"86","hashOfConfig":"83"},{"size":637,"mtime":1612377082217,"results":"87","hashOfConfig":"83"},{"size":5506,"mtime":1614882236817,"results":"88","hashOfConfig":"83"},{"size":1143,"mtime":1614449857309,"results":"89","hashOfConfig":"83"},{"size":809,"mtime":1613842368346,"results":"90","hashOfConfig":"83"},{"size":4131,"mtime":1615181614886,"results":"91","hashOfConfig":"83"},{"size":5388,"mtime":1614449890436,"results":"92","hashOfConfig":"83"},{"size":47,"mtime":1614448364244,"results":"93","hashOfConfig":"83"},{"size":2049,"mtime":1615180858807,"results":"94","hashOfConfig":"83"},{"size":2227,"mtime":1615180858796,"results":"95","hashOfConfig":"83"},{"size":1200,"mtime":1613843710959,"results":"96","hashOfConfig":"83"},{"size":9256,"mtime":1615139111333,"results":"97","hashOfConfig":"83"},{"size":6610,"mtime":1615138954661,"results":"98","hashOfConfig":"83"},{"size":1281,"mtime":1615180858781,"results":"99","hashOfConfig":"83"},{"size":6877,"mtime":1615054268631,"results":"100","hashOfConfig":"83"},{"size":525,"mtime":1614437403176,"results":"101","hashOfConfig":"83"},{"size":3101,"mtime":1614880404221,"results":"102","hashOfConfig":"83"},{"size":4154,"mtime":1615180858704,"results":"103","hashOfConfig":"83"},{"size":8258,"mtime":1614883556981,"results":"104","hashOfConfig":"83"},{"size":10977,"mtime":1615180858690,"results":"105","hashOfConfig":"83"},{"size":10992,"mtime":1615180858679,"results":"106","hashOfConfig":"83"},{"size":10985,"mtime":1615180858685,"results":"107","hashOfConfig":"83"},{"size":11866,"mtime":1615180858673,"results":"108","hashOfConfig":"83"},{"size":8268,"mtime":1615180858697,"results":"109","hashOfConfig":"83"},{"size":3666,"mtime":1615180777906,"results":"110","hashOfConfig":"83"},{"size":2400,"mtime":1615180858664,"results":"111","hashOfConfig":"83"},{"size":2397,"mtime":1615180858668,"results":"112","hashOfConfig":"83"},{"size":2508,"mtime":1614883556979,"results":"113","hashOfConfig":"83"},{"size":2229,"mtime":1615051869957,"results":"114","hashOfConfig":"83"},{"size":1727,"mtime":1615054686128,"results":"115","hashOfConfig":"83"},{"size":1819,"mtime":1614447333369,"results":"116","hashOfConfig":"83"},{"size":5992,"mtime":1614622759520,"results":"117","hashOfConfig":"83"},{"size":3762,"mtime":1615054727985,"results":"118","hashOfConfig":"83"},{"size":3741,"mtime":1615181682033,"results":"119","hashOfConfig":"83"},{"size":2330,"mtime":1614883556981,"results":"120","hashOfConfig":"83"},{"size":2136,"mtime":1615180858706,"results":"121","hashOfConfig":"83"},{"size":2229,"mtime":1615180858701,"results":"122","hashOfConfig":"83"},{"size":1468,"mtime":1615180858693,"results":"123","hashOfConfig":"83"},{"size":1770,"mtime":1614883556980,"results":"124","hashOfConfig":"83"},{"size":1769,"mtime":1614447370078,"results":"125","hashOfConfig":"83"},{"size":2330,"mtime":1615180858670,"results":"126","hashOfConfig":"83"},{"size":805,"mtime":1614017350660,"results":"127","hashOfConfig":"83"},{"size":1686,"mtime":1614622652992,"results":"128","hashOfConfig":"83"},{"size":2155,"mtime":1615141828991,"results":"129","hashOfConfig":"83"},{"size":128,"mtime":1614101974522,"results":"130","hashOfConfig":"83"},{"size":598,"mtime":1615141460817,"results":"131","hashOfConfig":"83"},{"size":1026,"mtime":1614883556984,"results":"132","hashOfConfig":"83"},{"size":1030,"mtime":1615140056516,"results":"133","hashOfConfig":"83"},{"size":625,"mtime":1614190966988,"results":"134","hashOfConfig":"83"},{"size":2330,"mtime":1615180858666,"results":"135","hashOfConfig":"83"},{"size":10014,"mtime":1615180858658,"results":"136","hashOfConfig":"83"},{"size":1288,"mtime":1615180858687,"results":"137","hashOfConfig":"83"},{"size":2330,"mtime":1615180858698,"results":"138","hashOfConfig":"83"},{"size":1534,"mtime":1615180858676,"results":"139","hashOfConfig":"83"},{"size":1290,"mtime":1615180858682,"results":"140","hashOfConfig":"83"},{"size":254,"mtime":1614017613173,"results":"141","hashOfConfig":"83"},{"size":643,"mtime":1614447439156,"results":"142","hashOfConfig":"83"},{"size":861,"mtime":1614883556983,"results":"143","hashOfConfig":"83"},{"size":1054,"mtime":1615180858661,"results":"144","hashOfConfig":"83"},{"size":356,"mtime":1615180858654,"results":"145","hashOfConfig":"83"},{"size":525,"mtime":1614621378651,"results":"146","hashOfConfig":"83"},{"size":400,"mtime":1614881831364,"results":"147","hashOfConfig":"83"},{"size":8892,"mtime":1614882116578,"results":"148","hashOfConfig":"83"},{"size":228,"mtime":1614623577541,"results":"149","hashOfConfig":"83"},{"size":980,"mtime":1614621123400,"results":"150","hashOfConfig":"83"},{"size":613,"mtime":1614621131026,"results":"151","hashOfConfig":"83"},{"size":575,"mtime":1614621123311,"results":"152","hashOfConfig":"83"},{"size":677,"mtime":1614621123231,"results":"153","hashOfConfig":"83"},{"size":2356,"mtime":1614963442515,"results":"154","hashOfConfig":"83"},{"size":1670,"mtime":1614963410896,"results":"155","hashOfConfig":"83"},{"size":1444,"mtime":1614621183962,"results":"156","hashOfConfig":"83"},{"size":743,"mtime":1614621313617,"results":"157","hashOfConfig":"83"},{"size":1464,"mtime":1614880956958,"results":"158","hashOfConfig":"83"},{"size":1119,"mtime":1614621313851,"results":"159","hashOfConfig":"83"},{"size":785,"mtime":1614621192932,"results":"160","hashOfConfig":"83"},{"size":700,"mtime":1614621169923,"results":"161","hashOfConfig":"83"},{"size":752,"mtime":1614621170005,"results":"162","hashOfConfig":"83"},{"size":138,"mtime":1614537675095,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"z7i8mm",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"166"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"166"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"166"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"166"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"166"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"166"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"166"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"166"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"166"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"166"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"166"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"166"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"166"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"166"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"166"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"166"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"166"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"166"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"166"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"166"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"166"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"166"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"166"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"166"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"166"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"166"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"166"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"166"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"166"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"166"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"166"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"166"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"166"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"166"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"166"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"166"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"166"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"166"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"166"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"166"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\index.js",[],["367","368"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\reportWebVitals.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\App\\App.js",["369","370","371","372","373"],"import React, {\n  useContext,\n} from \"react\";\nimport logo from '../../assets/images/logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport Routes from '../../routes';\nimport lightTheme from \"../../themes/lightTheme\";\n\n// Material UI Core\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n// Context\nimport { LoadingStateProvider } from '../../contexts/loading-context';\nimport { ThemeStateProvider } from '../../contexts/theme-context';\n\n// Components\nimport Loading from '../Loading';\n\nconst App = () => {\n  \n  return (\n    <ThemeStateProvider> {/* ==> Theme Context Provider */}\n        <LoadingStateProvider>\n          <CssBaseline />\n          <Loading />\n          <Router>\n            <Routes/>\n          </Router>\n        </LoadingStateProvider>\n    </ThemeStateProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\index.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\contexts\\loading-context.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\themes\\lightTheme.js",["374"],"/* Default theme properties \r\n    (Not Allowed Names) \r\n*/\r\n// breakpoints\r\n// direction\r\n// mixins\r\n// overrides\r\n// palette\r\n// props\r\n// shadows\r\n// typography\r\n// spacing\r\n// transitions\r\n// zIndex\r\n\r\nimport {hexToRgb} from '../utils/colors';\r\n  \r\n  // Width\r\n  const drawerLeftWidth = 120;\r\n  const drawerRightWidth = 240;\r\n  const drawerRightCloseWidth = 50;\r\n  const notificationPopoverWidth = 420;\r\n  const notificationPopoverMinHeight = 300;\r\n  const notificationPopoverMaxHeight = 600;\r\n\r\n  // Z-index\r\n  const miniLeftSidebarZIndex = 999;\r\n\r\n  const transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n  };\r\n  \r\n  const fontColor = \"#ffffff\";\r\n  const primaryColor = [\"#4042E2\", \"#5658e5\", \"#6c6ee9\", \"#8284ec\"];\r\n  const secondaryColor = [\"#dc004e\", \"#f50057\", \"#ff1065\", \"#ff2975\"];\r\n  const warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\n  const dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\n  const successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\n  const infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\n  const roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\n  const grayColor = [\r\n    \"#999\",\r\n    \"#777\",\r\n    \"#3C4858\",\r\n    \"#AAAAAA\",\r\n    \"#D2D2D2\",\r\n    \"#DDD\",\r\n    \"#b4b4b4\",\r\n    \"#555555\",\r\n    \"#333\",\r\n    \"#a9afbb\",\r\n    \"#eee\",\r\n    \"#e7e7e7\"\r\n  ];\r\n  const hoverBrightColor = [\"#1991a7\", \"#1ca0b8\", \"#1eaec9\", \"#21bdda\"];\r\n  const hoverDarkColor = [\"#551796\", \"#5e19a7\", \"#681cb8\", \"#711ec9\"];\r\n  const blackColor = \"#000000\";\r\n  const whiteColor = \"#ffffff\";\r\n  \r\n  const boxShadow = {\r\n    boxShadow:\r\n      \"0 10px 30px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 4px 25px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\"\r\n  };\r\n  \r\n  const primaryBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const infoBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const successBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const warningBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const dangerBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const roseBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  \r\n  const warningCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n    ...warningBoxShadow\r\n  };\r\n  const successCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n    ...successBoxShadow\r\n  };\r\n  const dangerCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n    ...dangerBoxShadow\r\n  };\r\n  const infoCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n    ...infoBoxShadow\r\n  };\r\n  const primaryCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n    ...primaryBoxShadow\r\n  };\r\n  const roseCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n    ...roseBoxShadow\r\n  };\r\n  \r\n  const defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n      \"0 10px 20px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 3px 20px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n  };\r\n\r\n  const title = {\r\n    color: grayColor[2],\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  };\r\n  \r\nexport default {\r\n  hexToRgb,\r\n  // Width\r\n  drawerLeftWidth,\r\n  drawerRightWidth,\r\n  drawerRightCloseWidth,\r\n  notificationPopoverWidth,\r\n  notificationPopoverMinHeight,\r\n  notificationPopoverMaxHeight,\r\n  // Z-index\r\n  miniLeftSidebarZIndex,\r\n  transition,\r\n  boxShadow,\r\n  fontColor,\r\n  primaryColor,\r\n  secondaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  hoverBrightColor,\r\n  hoverDarkColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n};  ","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\contexts\\theme-context.js",["375","376"],"import React, { createContext, useReducer } from \"react\";\r\nimport lightTheme from \"../themes/lightTheme\";\r\nimport darkTheme from \"../themes/darkTheme\";\r\n\r\n// Utils\r\nimport ThemeType from '../utils/types/Theme';\r\n\r\n// @material-ui/core\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst initState = {\r\n  theme: lightTheme\r\n};\r\nconst themeStore = createContext(initState);\r\nconst { Provider } = themeStore;\r\n\r\nconst ThemeStateProvider = ({ children }) => {\r\n  const [themeState, dispatchTheme] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"Set-Theme\":\r\n        switch(action.theme){\r\n          case ThemeType.LIGHT:\r\n            return {theme: lightTheme};\r\n          case ThemeType.DARK:\r\n            return {theme: darkTheme}\r\n        }\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initState);\r\n  return <Provider value={{ themeState, dispatchTheme }}>\r\n          <ThemeProvider theme={createMuiTheme(themeState? themeState.theme : lightTheme)}>\r\n            {children}\r\n          </ThemeProvider>\r\n        </Provider>;\r\n};\r\n\r\nexport { themeStore, ThemeStateProvider };","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\Loading\\index.js",["377"],"import React, {useContext} from \"react\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport { loadingStore } from \"../../contexts/loading-context\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = {\r\n    display: 'block',\r\n    left: '40%',\r\n    top: '30%',\r\n    zIndex: '99999'\r\n};\r\n\r\n const Loading = (props) => {\r\n    const { loadingState, dispatchLoading } = useContext(loadingStore);\r\n    return (\r\n        <div className=\"sweet-loading\" style={{'display': (loadingState.isLoading)? 'block' : 'none'}}>\r\n            <BounceLoader\r\n                css={override}\r\n                size={300}\r\n                color={\"#014a0c\"}\r\n                loading={loadingState.isLoading}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\routes\\index.js",["378"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\themes\\darkTheme.js",["379"],"/* Default theme properties \r\n    (Not Allowed Names) \r\n*/\r\n// breakpoints\r\n// direction\r\n// mixins\r\n// overrides\r\n// palette\r\n// props\r\n// shadows\r\n// typography\r\n// spacing\r\n// transitions\r\n// zIndex\r\n\r\nimport {hexToRgb} from '../utils/colors';\r\n  \r\n  const drawerLeftWidth = 120;\r\n  const drawerRightWidth = 240;\r\n  const drawerRightCloseWidth = 50;\r\n  const notificationPopoverWidth = 420;\r\n  const notificationPopoverMinHeight = 300;\r\n  const notificationPopoverMaxHeight = 600;\r\n\r\n  const transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n  };\r\n  \r\n  const fontColor = \"#000000\";\r\n  const primaryColor = [\"#4042E2\", \"#5658e5\", \"#6c6ee9\", \"#8284ec\"];\r\n  const secondaryColor = [\"#dc004e\", \"#f50057\", \"#ff1065\", \"#ff2975\"];\r\n  const warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\n  const dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\n  const successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\n  const infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\n  const roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\n  const grayColor = [\r\n    \"#999\",\r\n    \"#777\",\r\n    \"#3C4858\",\r\n    \"#AAAAAA\",\r\n    \"#D2D2D2\",\r\n    \"#DDD\",\r\n    \"#b4b4b4\",\r\n    \"#555555\",\r\n    \"#333\",\r\n    \"#a9afbb\",\r\n    \"#eee\",\r\n    \"#e7e7e7\"\r\n  ];\r\n  const hoverBrightColor = [\"#1991a7\", \"#1ca0b8\", \"#1eaec9\", \"#21bdda\"];\r\n  const hoverDarkColor = [\"#551796\", \"#5e19a7\", \"#681cb8\", \"#711ec9\"];\r\n  const blackColor = \"#000000\";\r\n  const whiteColor = \"#ffffff\";\r\n  \r\n  const boxShadow = {\r\n    boxShadow:\r\n      \"0 10px 30px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 4px 25px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\"\r\n  };\r\n  \r\n  const primaryBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const infoBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const successBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const warningBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const dangerBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const roseBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  \r\n  const warningCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n    ...warningBoxShadow\r\n  };\r\n  const successCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n    ...successBoxShadow\r\n  };\r\n  const dangerCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n    ...dangerBoxShadow\r\n  };\r\n  const infoCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n    ...infoBoxShadow\r\n  };\r\n  const primaryCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n    ...primaryBoxShadow\r\n  };\r\n  const roseCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n    ...roseBoxShadow\r\n  };\r\n  \r\n  const defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n      \"0 10px 20px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 3px 20px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n  };\r\n\r\n  const title = {\r\n    color: grayColor[2],\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  };\r\n  \r\nexport default {\r\n  hexToRgb,\r\n  drawerLeftWidth,\r\n  drawerRightWidth,\r\n  drawerRightCloseWidth,\r\n  notificationPopoverWidth,\r\n  notificationPopoverMinHeight,\r\n  notificationPopoverMaxHeight,\r\n  transition,\r\n  boxShadow,\r\n  fontColor,\r\n  primaryColor,\r\n  secondaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  hoverBrightColor,\r\n  hoverDarkColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n};  ","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\types\\Theme.js",["380"],"export default {\r\n    LIGHT: 0,\r\n    DARK: 1\r\n}","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\en-us\\index.js",["381"],"import terms from './terms';\r\n\r\nexport default {\r\n    translation: {\r\n        \"Appointment\" : \"Appointment\",\r\n        \"Patient\" : \"Patient\",\r\n        \"Report\" : \"Report\",\r\n        \"Documents\" : \"Documents\",\r\n        \"Settings\" : \"Settings\",\r\n        \"Notifications\": \"Notifications\",\r\n        \"Remove Notification\": \"Remove Notification\",\r\n        \"No notifications to display yet\": \"No notification to display yet\",\r\n        \"Appointment holder\": \"Appointment holder\",\r\n        \"Today's Appoinment\": \"Today's Appoinment\",\r\n        \"Go back\": \"Go back\",\r\n        \"Tooth chart\": \"Tooth chart\",\r\n        \"Patient profile\": \"Patient profile\",\r\n        // Common\r\n        \"Yes\" : \"Yes\",\r\n        \"No\": \"No\",\r\n        \"OK\": \"OK\",\r\n        \"Cancel\": \"Cancel\",\r\n        \"Log in\": \"Log in\",\r\n        \"Log out\": \"Log out\",\r\n        \"Chair\": \"Chair\",\r\n        \"Chairs\": \"Chairs\",\r\n        \"All\": \"All\",\r\n        // Messages\r\n        // Success Messages\r\n        // Error Messages\r\n        // Confirm Messages\r\n        // Login Page\r\n        \"<strong>Login</strong> your account\": \"<strong>Login</strong> your account\",\r\n        \"Username\": \"Username\",\r\n        \"Password\": \"Password\",\r\n        \"Continue\": \"Continue\",\r\n        \"Forgot password?\": \"Forgot password?\",\r\n        \"Don't have an account? Sign Up\": \"Don't have an account? Sign Up\",\r\n        \"Copyright by\": \"Copyright by\",\r\n        // Settings\r\n        \"General\" : \"General\",\r\n        \"Account\": \"Account\",\r\n        \"Term & Policy\": \"Term & Policy\",\r\n        \"Location\": \"Location\",\r\n        \"Language\": \"Language\",\r\n        \"English\": \"English\",\r\n        \"Vietnamese\": \"Vietnamese\",\r\n        \"Theme\": \"Theme\",\r\n        \"Light\": \"Light\",\r\n        \"Dark\": \"Dark\",\r\n        \"Term Policy Full Text\": terms,\r\n        \"Notify when a STAFF sends you a message\": \"Notify when a STAFF sends you a message\",\r\n        \"Notify when a PATIENT sends you a message\": \"Notify when a PATIENT sends you a message\",\r\n        \"Notify when a you're having a MEETING\": \"Notify when a you're having a MEETING\"\r\n    }\r\n}","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\vn\\index.js",["382"],"import terms from './terms';\r\n\r\nexport default {\r\n    translation: {\r\n        \"Appointment\" : \"Cuộc hẹn\",\r\n        \"Patient\" : \"Bệnh nhân\",\r\n        \"Report\" : \"Báo cáo\",\r\n        \"Documents\" : \"Tài liệu\",\r\n        \"Settings\" : \"Cài đặt\",\r\n        \"Notifications\": \"Thông báo\",\r\n        \"Remove Notification\": \"Gỡ thông báo\",\r\n        \"No notifications to display yet\": \"Không có thông báo để hiện thị\",\r\n        \"Appointment holder\": \"Người hẹn\",\r\n        \"Today's Appoinment\": \"Cuộc hẹn hôm nay\",\r\n        \"Go back\": \"Trở về\",\r\n        \"Tooth chart\": \"Biểu đồ nha chu\",\r\n        \"Patient profile\": \"Hồ sơ bệnh nhân\",\r\n        // Common\r\n        \"Yes\" : \"Có\",\r\n        \"No\": \"Không\",\r\n        \"OK\": \"Đồng ý\",\r\n        \"Cancel\": \"Hủy\",\r\n        \"Log in\": \"Đăng nhập\",\r\n        \"Log out\": \"Đăng xuất\",\r\n        \"Chair\": \"Ghế\",\r\n        \"Chairs\": \"Ghế\",\r\n        \"All\": \"Tất cả\",\r\n        // Messages\r\n        // Success Messages\r\n        // Error Messages\r\n        // Confirm Messages\r\n        // Login Page\r\n        \"<strong>Login</strong> your account\": \"<strong>Đăng nhập</strong> tài khoản của bạn\",\r\n        \"Username\": \"Tên đăng nhập\",\r\n        \"Password\": \"Mật khẩu\",\r\n        \"Continue\": \"Tiếp tục\",\r\n        \"Forgot password?\": \"Quên mật khẩu?\",\r\n        \"Don't have an account? Sign Up\": \"Chưa có tài khoản? Đăng ký\",\r\n        \"Copyright by\": \"Bản quyền thuộc về\",\r\n        // Settings\r\n        \"General\" : \"Chung\",\r\n        \"Account\": \"Tài khoản\",\r\n        \"Term & Policy\": \"Chính sách & Điều lệ\",\r\n        \"Location\": \"Vị trí\",\r\n        \"Language\": \"Ngôn ngữ\",\r\n        \"English\": \"Tiếng Anh\",\r\n        \"Vietnamese\": \"Tiếng Việt\",\r\n        \"Theme\": \"Chủ đề\",\r\n        \"Light\": \"Sáng\",\r\n        \"Dark\": \"Tối\",\r\n        \"Term Policy Full Text\": terms,\r\n        \"Notify when a STAFF sends you a message\": \"Thông báo khi có tin nhắn từ NHÂN VIÊN\",\r\n        \"Notify when a PATIENT sends you a message\": \"Thông báo khi có tin nhắn từ KHÁCH HÀNG\",\r\n        \"Notify when a you're having a MEETING\": \"Thông báo khi sắp có CUỘC HẸN\"\r\n    }\r\n}","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\colors\\index.js",["383","384"],"// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n\r\nimport { FormHelperText } from \"@material-ui/core\";\r\n\r\n// #############################\r\nconst hexToRgb = input => {\r\n    input = input + \"\";\r\n    input = input.replace(\"#\", \"\");\r\n    let hexRegex = /[0-9A-Fa-f]/g;\r\n    if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n      throw new Error(\"input is not a valid hex color.\");\r\n    }\r\n    if (input.length === 3) {\r\n      let first = input[0];\r\n      let second = input[1];\r\n      let last = input[2];\r\n      input = first + first + second + second + last + last;\r\n    }\r\n    input = input.toUpperCase();\r\n    let first = input[0] + input[1];\r\n    let second = input[2] + input[3];\r\n    let last = input[4] + input[5];\r\n    return (\r\n      parseInt(first, 16) +\r\n      \", \" +\r\n      parseInt(second, 16) +\r\n      \", \" +\r\n      parseInt(last, 16)\r\n    );\r\n  };\r\n\r\nexport {hexToRgb};\r\nexport default {\r\n    hexToRgb: hexToRgb\r\n}","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\vn\\terms.js",["385"],"const terms = 'Các Điều khoản và Điều kiện này đã được cập nhật và có hiệu lực kể từ ngày 14 tháng 3 năm 2016\\\r\n <br/><br/>VUI LÒNG ĐỌC KỸ THỎA THUẬN NÀY TRƯỚC KHI SỬ DỤNG DỊCH VỤ IDENTALSOFT, BAO GỒM, KHÔNG GIỚI HẠN, TẤT CẢ NỘI DUNG NHƯ VĂN BẢN, THÔNG TIN, HÌNH ẢNH, ỨNG DỤNG, NHÓM, PHẦN MỀM, TÍNH NĂNG, CẬP NHẬT VÀ CÁC THÔNG TIN, DỊCH VỤ VÀ TÀI LIỆU KHÁC ( S)\"). BẰNG VIỆC TRUY CẬP HOẶC SỬ DỤNG TẤT CẢ HOẶC BẤT KỲ PHẦN NÀO CỦA DỊCH VỤ, BẠN XÁC NHẬN SỰ ĐỒNG Ý CỦA MÌNH VỚI CÁC ĐIỀU KHOẢN VÀ ĐIỀU KIỆN SẮC NÀY, NHƯ ĐƯỢC SỬA ĐỔI TỪ THỜI GIAN, (\"THỎA THUẬN\") VÀ TUYÊN BỐ RẰNG BẠN ĐƯỢC PHÉP THUỘC VÀO THỎA THUẬN NÀY VỀ KHÁCH HÀNG. NẾU BẠN KHÔNG ĐỒNG Ý VỚI CÁC ĐIỀU KHOẢN CỦA THỎA THUẬN NÀY, IDENTALSOFT KHÔNG CẤP CHO BẠN QUYỀN SỬ DỤNG DỊCH VỤ VÀ BẠN PHẢI SỬ DỤNG VÀ TRUY CẬP DỊCH VỤ NGAY LẬP TỨC.\\\r\n <br/><br/>Thỏa thuận này là giữa iDentalSoft, Inc, một tập đoàn Delaware có trụ sở kinh doanh chính tại 16 Corning Ave # 140, Milpitas CA 95035 (\"iDS\") và bạn hoặc pháp nhân mà bạn đại diện (\"Bạn\") và điều chỉnh việc bạn sử dụng Dịch vụ.\\\r\n<br/><br/>1. Kế hoạch Dịch vụ\\\r\n<br/><br/>Dịch vụ có sẵn dưới dạng dịch vụ trả phí với một số lượng hạn chế người dùng được cấp phép (\"Người dùng\") như được chỉ định trên biểu mẫu đặt hàng của bạn (\"Mẫu đơn đặt hàng\"). Các dịch vụ bổ sung được bao gồm như một phần của dịch vụ trả phí ngoại trừ trường hợp được chỉ định trên Mẫu đơn đặt hàng.\\\r\n<br/><br/>2. Thanh toán\\\r\n<br/><br/>Xem xét giấy phép được cấp dưới đây, thanh toán cho Dịch vụ sẽ theo giá và theo các điều khoản được nêu trên Biểu mẫu đặt hàng, hoặc theo cách khác được iDS tuyên bố hoặc trích dẫn vào từng thời điểm. Tất cả giá đều chưa bao gồm thuế, có thể thêm hoặc không vào giá, tùy thuộc vào luật hiện hành và nơi cư trú hợp pháp của bạn. Bạn sẽ chịu trách nhiệm về bất kỳ và tất cả các khoản thuế liên quan đến Thỏa thuận này.\\\r\n<br/><br/>Nếu thanh toán bằng thẻ tín dụng của bạn bị từ chối hoặc khoản phí của bạn được trả lại cho iDS vì bất kỳ lý do gì, bao gồm cả khoản bồi hoàn hoặc nếu bạn không thực hiện bất kỳ khoản thanh toán nào cho iDS, iDS có thể, theo quyết định riêng của iDS, tạm dừng hoặc chấm dứt quyền truy cập của bạn đối với Dịch vụ và / hoặc chấm dứt Thỏa thuận này. Quyền sử dụng Dịch vụ của bạn phải tuân theo mọi giới hạn do iDS hoặc tổ chức phát hành thẻ tín dụng của bạn thiết lập. Phí lãi suất 1% mỗi tháng (hoặc lãi suất cao nhất được pháp luật cho phép nếu thấp hơn 1% mỗi tháng) sẽ tích lũy hàng ngày trên bất kỳ số dư chưa thanh toán nào quá hạn trên ba mươi (30) ngày.\\\r\n<br/><br/>3. Quyền sử dụng\\\r\n<br/><br/>Bạn và Người dùng của bạn theo đây được cấp quyền sử dụng Dịch vụ không độc quyền, không thể chuyển nhượng, chỉ cho các mục đích kinh doanh nội bộ của riêng bạn, tuân theo Thỏa thuận này. Tất cả các quyền không được cấp rõ ràng cho Bạn đều được iDS bảo lưu. Quyền sử dụng của bạn luôn có điều kiện là tuân thủ các điều khoản của Thỏa thuận này và việc bạn thanh toán Dịch vụ nhanh chóng và kịp thời. Việc vi phạm bất kỳ điều khoản nào của Thỏa thuận này, không thanh toán hoặc chậm thanh toán sẽ chấm dứt mọi quyền sử dụng được cấp cho Bạn và Người dùng của bạn theo Thỏa thuận này.\\\r\n<br/><br/>Bạn không được: (i) cấp phép, cấp phép lại, bán, bán lại, chuyển nhượng, chuyển nhượng, phân phối hoặc khai thác thương mại hoặc cung cấp Dịch vụ cho bất kỳ bên thứ ba nào theo bất kỳ cách nào; (ii) sửa đổi hoặc tạo ra các sản phẩm phái sinh dựa trên Dịch vụ; (iii) tạo \"liên kết\" Internet đến Dịch vụ hoặc \"khung\" hoặc \"phản chiếu\" bất kỳ nội dung nào trên bất kỳ máy chủ nào khác hoặc thiết bị không dây hoặc dựa trên Internet; hoặc (iv) thiết kế đối chiếu hoặc truy cập Dịch vụ để (a) xây dựng sản phẩm hoặc dịch vụ cạnh tranh, (b) xây dựng sản phẩm bằng cách sử dụng các ý tưởng, tính năng, chức năng hoặc đồ họa tương tự của Dịch vụ, hoặc (c) sao chép bất kỳ ý tưởng nào, các tính năng, chức năng hoặc đồ họa của Dịch vụ. Bạn chỉ có thể sử dụng Dịch vụ cho các mục đích kinh doanh nội bộ của mình và không được: (i) gửi spam hoặc các tin nhắn trùng lặp hoặc không được yêu cầu vi phạm luật hiện hành; (ii) gửi hoặc lưu trữ tài liệu vi phạm, khiêu dâm, đe dọa, bôi nhọ, hoặc bất hợp pháp hoặc quanh co, bao gồm tài liệu có hại cho trẻ em hoặc vi phạm quyền riêng tư của bên thứ ba; (iii) gửi hoặc lưu trữ tài liệu có chứa vi rút phần mềm, sâu, ngựa Trojan hoặc mã máy tính có hại khác, tệp, tập lệnh, tác nhân hoặc chương trình; (iv) can thiệp hoặc phá vỡ tính toàn vẹn, băng thông hoặc hiệu suất của Dịch vụ hoặc dữ liệu có trong đó; (v) cố gắng truy cập trái phép vào Dịch vụ hoặc các hệ thống hoặc mạng liên quan của nó; hoặc (vi) sử dụng Dịch vụ, bao gồm nội dung, sở hữu trí tuệ, công nghệ, nhãn hiệu hoặc nhãn hiệu dịch vụ cho bất kỳ mục đích thương mại nào (tức là chào mời khách hàng, bán lại, v.v.) mà không có sự đồng ý trước bằng văn bản của iDS.\\\r\n<br/><br/>4. Truy cập\\\r\n<br/><br/>Quyền truy cập Dịch vụ khả dụng thông qua một URL duy nhất được cung cấp tại thời điểm đăng ký hoặc qua Phần mềm mà bạn cài đặt trên Máy chủ của riêng mình tại thời điểm cài đặt. Dịch vụ hỗ trợ cả định dạng trang web đầy đủ và di động. iDS sẽ cung cấp cho Bạn và (các) Người dùng của bạn tên người dùng và mật khẩu để truy cập Dịch vụ. Tên người dùng và mật khẩu là cá nhân và được coi là một phần của Thông tin bí mật.\\\r\n<br/><br/>5. Trách nhiệm\\\r\n<br/><br/>Bạn chịu trách nhiệm về tất cả các hoạt động xảy ra trong (các) tài khoản Người dùng của bạn và của bạn và sẽ tuân thủ tất cả các luật, hiệp ước và quy định hiện hành của địa phương, tiểu bang, quốc gia và nước ngoài liên quan đến việc bạn sử dụng Dịch vụ, bao gồm cả những quy định liên quan đến quyền riêng tư dữ liệu, bao gồm nhưng không giới hạn ở Đạo luật về trách nhiệm giải trình và cung cấp bảo hiểm y tế, Đạo luật về công nghệ thông tin y tế cho sức khỏe kinh tế và lâm sàng (được gọi chung ở đây là \"HIPAA\"), Tiêu chuẩn bảo mật dữ liệu ngành thẻ thanh toán (\"PCI DSS\"), truyền thông quốc tế và truyền dữ liệu kỹ thuật hoặc dữ liệu cá nhân. Ngoài ra, Bạn có trách nhiệm tuân thủ bất kỳ và tất cả các chính sách, thủ tục và quy định nội bộ, được yêu cầu bởi chủ lao động của bạn và / hoặc các quản trị viên hiện hành của tài khoản của bạn. Bạn phải: (i) thông báo cho iDS ngay lập tức về bất kỳ hành vi sử dụng trái phép nào đối với bất kỳ mật khẩu hoặc tài khoản nào hoặc bất kỳ hành vi vi phạm bảo mật nào đã biết hoặc bị nghi ngờ; (ii) báo cáo với iDS ngay lập tức và sử dụng các nỗ lực hợp lý để ngăn chặn ngay lập tức mọi hành vi sao chép hoặc phân phối nội dung mà Bạn hoặc những người khác biết hoặc nghi ngờ vi phạm Thỏa thuận này hoặc quyền sở hữu trí tuệ của bên thứ ba; và (iii) không mạo danh người dùng khác hoặc cung cấp thông tin nhận dạng sai lệch để có quyền truy cập hoặc sử dụng Dịch vụ. Bằng cách truy cập Dịch vụ, Bạn tuyên bố và đảm bảo rằng bạn không nhận dạng sai bản thân cũng như không cung cấp bất kỳ thông tin sai lệch nào để có quyền truy cập vào Dịch vụ và thông tin thanh toán của bạn là chính xác.'\r\n\r\nexport default terms;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\i18n\\en-us\\terms.js",["386","387"],"const terms = 'These Terms and Conditions were updated and effective as of 14th of March 2016\\\r\n <br/><br/>PLEASE READ THIS AGREEMENT CAREFULLY BEFORE USING THE IDENTALSOFT SERVICE, INCLUDING, WITHOUT LIMITATION, ALL CONTENT SUCH AS TEXT, INFORMATION, IMAGES, APPLICATIONS, TEMPLATES, SOFTWARE, FEATURES, UPDATES, AND OTHER INFORMATION, SERVICES AND MATERIALS (COLLECTIVELY, THE \"SERVICE(S)\"). BY ACCESSING OR USING ALL OR ANY PORTION OF THE SERVICE, YOU ACKNOWLEDGE YOUR ACCEPTANCE TO THESE IDENTALSOFT TERMS AND CONDITIONS, AS AMENDED FROM TIME TO TIME, (\"AGREEMENT\") AND REPRESENT THAT YOU ARE AUTHORIZED TO ENTER INTO THIS AGREEMENT ON BEHALF OF THE CUSTOMER. IF YOU DO NOT AGREE TO THE TERMS OF THIS AGREEMENT, IDENTALSOFT DOES NOT GRANT YOU THE RIGHT TO USE THE SERVICES, AND YOU MUST CEASE USE OF AND ACCESS TO THE SERVICES IMMEDIATELY.\\\r\n <br/><br/>This Agreement is between iDentalSoft, Inc, a Delaware corporation with its principal place of business at 16 Corning Ave #140, Milpitas CA 95035 (\"iDS\") and you or the entity you represent (\"You\") and governs Your use of the Service.\\\r\n<br/><br/>1. Service Plans\\\r\n<br/><br/>The Service is available as a paid service with a limited number of licensed users (\"Users\") as specified on your order form (\"Order Form\"). Additional services are included as part of the paid service except where specified on the Order Form.\\\r\n<br/><br/>2. Payment\\\r\n<br/><br/>In consideration of the license granted hereunder, payment for Services shall be at prices and under terms stated on the Order Form, or as otherwise stated or quoted by iDS from time to time. All prices are exclusive of taxes, which may or may not be added to the price, depending on applicable law and your legal residence. You shall be responsible for any and all taxes related to this Agreement.\\\r\n<br/><br/>If payment by your credit card is denied, or your charge is returned to iDS for any reason, including charge-back or if you otherwise fails to make any payments owing to iDS, iDS may, at iDSs sole discretion, suspend or terminate your access to the Service and/or terminate this Agreement. Your right to use the Services are subject to any limits established by iDS or by the issuer of your credit card. Interest charges of 1% per month (or the highest rate permitted by law if lower than 1% per month) will accrue daily on any unpaid balance which is more than thirty (30) days overdue.\\\r\n<br/><br/>3. Right of Use\\You and your Users are hereby granted a non-exclusive, nontransferable, right to use the Service, solely for your own internal business purposes, subject to this Agreement. All rights not expressly granted to You are reserved by iDS. Your right of use is at all times conditioned on compliance with the terms of this Agreement and your prompt and timely payment for the Service. Breach of any term of this Agreement, non-payment, or delay in payment shall terminate any right of use granted to the You and your Users under this Agreement.\\\r\n<br/><br/>You shall not: (i) license, sublicense, sell, resell, transfer, assign, distribute or otherwise commercially exploit or make available to any third party the Service in any way; (ii) modify or make derivative works based upon the Service; (iii) create Internet \"links\" to the Service or \"frame\" or \"mirror\" any content on any other server or wireless or Internet-based device; or (iv) reverse engineer or access the Service in order to (a) build a competitive product or service, (b) build a product using similar ideas, features, functions or graphics of the Service, or (c) copy any ideas, features, functions or graphics of the Service. You may use the Service only for your internal business purposes and shall not: (i) send spam or otherwise duplicative or unsolicited messages in violation of applicable laws; (ii) send or store infringing, obscene, threatening, libelous, or otherwise unlawful or tortuous material, including material harmful to children or violative of third party privacy rights; (iii) send or store material containing software viruses, worms, Trojan horses or other harmful computer code, files, scripts, agents or programs; (iv) interfere with or disrupt the integrity, bandwidth or performance of the Service or the data contained therein; (v) attempt to gain unauthorized access to the Service or its related systems or networks; or (vi) use the Service, including the content, intellectual property, technology, trademarks or service marks for any commercial purposes (i.e. soliciting customers, resale, etc.) without iDSs prior written consent.\\\r\n<br/><br/>4. Access\\\r\n<br/><br/>Access to the Service is available via a unique URL given at the time of registration, or via Software that you install on your own Server at the time of installation. The Service supports both full and mobile webpage formats. iDS will provide You and your User(s) with a username and password for accessing the Service. Usernames and passwords are personal, and are to be considered part of Confidential Information.\\\r\n<br/><br/>5. Your Responsibilities\\\r\n<br/><br/>You are responsible for all activity occurring under your and your Users account(s) and shall abide by all applicable local, state, national and foreign laws, treaties and regulations in connection with your use of the Service, including those related to data privacy, including but not limited to the Health Insurance Portability and Accountability Act, the Health Information Technology for Economic and Clinical Health Act (collectively referred to herein as \"HIPAA\"), Payment Card Industry Data Security Standards (\"PCI DSS\"), international communications and the transmission of technical or personal data. In addition, You are responsible for abiding by any and all internal policies, procedures and regulations, which are required, by your employer and/or the applicable administrators of your account. You shall: (i) notify iDS immediately of any unauthorized use of any password or account or any other known or suspected breach of security; (ii) report to iDS immediately and use reasonable efforts to stop immediately any copying or distribution of content that is known or suspected by You or others to violate this Agreement or the intellectual property rights of third parties; and (iii) not impersonate another user or provide false identity information to gain access to or use the Service. By accessing the Service, You represent and warrant that you have not falsely identified yourself nor provided any false information to gain access to the Service and that your billing information is correct.'\r\n\r\nexport default terms;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\routes\\path.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\index.js",["388","389","390","391"],"import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../configs/strings';\r\n// Routes\r\nimport path from \"../../routes/path\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// @material-ui/core Icons\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n  // Links Icons\r\n  import CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\n  import PeopleIcon from '@material-ui/icons/People';\r\n  import AssessmentIcon from '@material-ui/icons/Assessment';\r\n  import InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n  import SettingsIcon from '@material-ui/icons/Settings';\r\n  import ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// Components\r\nimport CustomAvatar from '../../components/common/CustomAvatar';\r\nimport LinkList from './LinkList';\r\nimport FunctionList from './FunctionList';\r\nimport Notification from './Notification';\r\nimport NotificationPopover from './Notification/NotificationPopover';\r\nimport styles from \"./jss\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst LeftSidebar = (props) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    // States\r\n    const [openLeftSidebarGhost, setOpenLeftSidebarGhost] = useState(false);\r\n    const [openNotiPopover, setOpenNotiPopover] = useState(false);\r\n\r\n    const [notiPopAnchorEl, setNotiPopAnchorEl] = useState(null);\r\n    const popOverId = openNotiPopover? \"notification-popover\" : undefined;\r\n\r\n    // Notification\r\n    const [notifications, setNotifications] = useState([\r\n      {\r\n        id: 1,\r\n        user: {},\r\n        content: \"User 1 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: false\r\n      },\r\n      {\r\n        id: 2,\r\n        user: {},\r\n        content: \"User 2 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: false\r\n      },\r\n      {\r\n        id: 3,\r\n        user: {},\r\n        content: \"User 3 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: true\r\n      }\r\n    ]);\r\n\r\n\r\n    const pathList = [\r\n      {\r\n        link: path.dashboardPath,\r\n        text: t(strings.appointment),\r\n        icon: <CalendarTodayIcon/>\r\n      },\r\n      {\r\n        link: path.patientPath,\r\n        text: t(strings.patient),\r\n        icon: <PeopleIcon/>\r\n      },\r\n      {\r\n        link: path.reportPath,\r\n        text: t(strings.report),\r\n        icon: <AssessmentIcon/>\r\n      },\r\n      {\r\n        link: path.documentPath,\r\n        text: t(strings.documents),\r\n        icon: <InsertDriveFileIcon/>\r\n      },\r\n      {\r\n        link: path.settingsPath,\r\n        text: t(strings.settings),\r\n        icon: <SettingsIcon/>\r\n      }\r\n    ]\r\n    const links = <LinkList\r\n      links={pathList}\r\n    />\r\n\r\n    // Notifications Popover\r\n    const handleOpenNotiPopover = (evt) => {\r\n      setNotiPopAnchorEl(evt.currentTarget);\r\n      setOpenNotiPopover(true);\r\n    }\r\n\r\n    const handleCloseNotiPopover = () => {\r\n      setNotiPopAnchorEl(null);\r\n      setOpenNotiPopover(false);\r\n    }\r\n\r\n    const onNotificationClick = (notiId) => {\r\n      const newNotifications = [...notifications];\r\n      newNotifications.forEach((notification) => {\r\n        if (notification.id == notiId){\r\n          notification.isRead = true;\r\n        }\r\n      })\r\n      setNotifications(newNotifications);\r\n    }\r\n\r\n    const handleRemoveNotification = (notiId) => {\r\n      setNotifications(notifications.filter((notification) => notification.id != notiId));\r\n    }\r\n\r\n    const notification = \r\n      <Notification\r\n        onOpen={handleOpenNotiPopover}\r\n        popOverId={popOverId}\r\n        notiCount={notifications.filter((noti) => !noti.isRead).length}\r\n      />\r\n\r\n    const logout = \r\n        <Tooltip title={t(strings.logout)} aria-label={t(strings.logout)}>\r\n          <IconButton className={classes.listItemBtn} size=\"medium\"><ExitToAppIcon/></IconButton>\r\n        </Tooltip>\r\n\r\n    const funcList = <FunctionList\r\n      functions={[notification, logout]}\r\n    />\r\n\r\n    const toggleLeftSidebar = (val) => {      \r\n      setOpenLeftSidebarGhost(val);\r\n    }\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.miniLeftSidebarWrapper}>\r\n          <Hidden mdUp implementation=\"css\">\r\n              <IconButton color=\"default\" aria-label=\"toggle sidebar\" component=\"span\"\r\n                  onClick={() => toggleLeftSidebar(true)}\r\n              >\r\n                  <MenuIcon />\r\n              </IconButton>\r\n              <Drawer\r\n                  variant=\"temporary\"\r\n                  anchor=\"left\"\r\n                  open={openLeftSidebarGhost}\r\n                  onClose={() => toggleLeftSidebar(false)}\r\n                  ModalProps={{\r\n                  keepMounted: true // Better open performance on mobile.\r\n                  }}\r\n                  className={classes.drawer}\r\n              >\r\n                <CustomAvatar\r\n                    link=\"https://www.creative-tim.com?ref=mdr-sidebar\"\r\n                    src=\"https://www.w3schools.com/w3images/avatar2.png\"\r\n                    text=\"Jiwon\"\r\n                  />\r\n                  {/*<Divider className={classes.divider}/>*/}\r\n                  <div className={classes.sidebarWrapper}>\r\n                    {links}\r\n                    {funcList}\r\n                  </div>\r\n              </Drawer>\r\n          </Hidden>\r\n        </div>\r\n        <Hidden smDown implementation=\"css\">\r\n          <div className={classes.leftSidebarWrapper}>\r\n            <Drawer\r\n                  anchor=\"left\"\r\n                  variant=\"permanent\"\r\n                  open\r\n                  className={classes.drawer}\r\n              >\r\n                  <CustomAvatar\r\n                    link=\"https://www.creative-tim.com?ref=mdr-sidebar\"\r\n                    src=\"https://www.w3schools.com/w3images/avatar2.png\"\r\n                    text=\"Jiwon\"\r\n                  />\r\n                  {/*<Divider className={classes.divider}/>*/}\r\n                  <div className={classes.sidebarWrapper}>\r\n                    {links}\r\n                    {funcList}\r\n                  </div>\r\n              </Drawer>\r\n          </div>\r\n        </Hidden>\r\n        <NotificationPopover\r\n          id={popOverId}\r\n          open={openNotiPopover}\r\n          onClose={handleCloseNotiPopover}\r\n          anchorEl={notiPopAnchorEl}\r\n          notifications={notifications}\r\n          onNotificationClick={onNotificationClick}\r\n          onRemoveNotification={handleRemoveNotification}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default LeftSidebar;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\PageContainer\\index.js",["392"],"import React from \"react\";\r\nimport { makeStyles  } from \"@material-ui/core/styles\";\r\n\r\n// Material UI Core\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: 0,\r\n        margin: 0,\r\n        display: 'flex',\r\n    }\r\n}))\r\n\r\nconst PageContainer = ({children}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageContainer;\r\n","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\RightSidebar\\index.js",["393","394","395","396","397","398","399"],"import React, {useState, useContext} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport {moment} from 'moment';\r\nimport strings from '../../configs/strings';\r\n// Routes\r\nimport path from \"../../routes/path\";\r\n// @material-ui/core components\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// @material-ui/core Icons\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n// react-day-picker\r\nimport DayPicker from 'react-day-picker';\r\n\r\n// Components\r\n\r\n// Contexts\r\n\r\n\r\nimport styles from \"./jss\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst RightSidebar = (props) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    // States\r\n    const [rightSidebarOpen, setRightSidebarOpen] = useState(true);\r\n    const [calendarDate, setCalendarDate] = useState(new Date());\r\n\r\n    const toggleDrawer = () => {\r\n      setRightSidebarOpen(!rightSidebarOpen);\r\n    }\r\n\r\n    const handleSelectDate = (date) => {\r\n      alert(date);\r\n    }\r\n\r\n    return (\r\n      <div className={clsx(classes.rightSidebarWrapper, !rightSidebarOpen && classes.rightSidebarCloseWrapper)}>\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"right\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: rightSidebarOpen,\r\n                [classes.drawerClose]: !rightSidebarOpen,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: rightSidebarOpen,\r\n                    [classes.drawerClose]: !rightSidebarOpen,\r\n                }),\r\n            }}\r\n        >\r\n          <IconButton onClick={toggleDrawer} className={classes.toggleBtn}>\r\n              {rightSidebarOpen ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n          <Divider />\r\n          <div className={clsx(classes.sidebarContent, rightSidebarOpen && classes.displayBlock)}>\r\n            <DayPicker \r\n              className={classes.calendar}\r\n              onDayClick={handleSelectDate}\r\n            />\r\n            <Divider />\r\n            <div className={classes.appointmentHolder}>\r\n              <Typography component=\"h6\" variant=\"h6\">{t(strings.appointmentHolder)}</Typography>\r\n              <Box className={classes.appointmentHolderBox}>\r\n                \r\n              </Box>\r\n            </div>\r\n            <Divider />\r\n            <div className={classes.todayAppoinment}>\r\n              <Typography component=\"h6\" variant=\"h6\">{t(strings.todayAppointment)}</Typography>\r\n              <Box className={classes.todayAppoinmentBox}>\r\n                \r\n              </Box>\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default RightSidebar;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\TreatmentMenu\\index.js",["400","401","402","403","404","405","406","407","408"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport strings from \"../../configs/strings\";\r\n// Routes\r\nimport path from \"../../routes/path\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// @material-ui/core Icons\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n// Links Icons\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\";\r\nimport { FaTeeth } from \"react-icons/fa\";\r\n\r\n// Components\r\nimport CustomAvatar from \"../../components/common/CustomAvatar\";\r\nimport LinkList from \"./LinkList\";\r\n// import GoBack from \"./GoBack\";\r\nimport styles from \"./jss\";\r\n\r\n// Utils\r\nimport { disableClick } from \"../../utils/general\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst TreatmentMenu = (props) => {\r\n  const classes = useStyles();\r\n  const { t, i18n } = useTranslation();\r\n\r\n  // States\r\n  const [openLeftSidebarGhost, setOpenLeftSidebarGhost] = useState(false);\r\n\r\n  const pathList = [\r\n    {\r\n      link: path.patientProfilePath,\r\n      text: t(strings.patientProfile),\r\n      icon: <AssignmentInd />,\r\n    },\r\n    {\r\n      link: path.toothChartPath,\r\n      text: t(strings.toothChart),\r\n      icon: <FaTeeth />,\r\n    },\r\n    {\r\n      link: path.patientReportPath,\r\n      text: t(strings.report),\r\n      icon: <InsertDriveFileIcon />,\r\n    },\r\n  ];\r\n  const links = <LinkList links={pathList} />;\r\n\r\n  const goBack = (\r\n    <NavLink to=\"/patient\" className={classes.listItemLink}>\r\n      <Tooltip title={t(strings.goBack)} aria-label={t(strings.goBack)}>\r\n        <IconButton className={classes.goBackBtn} size=\"medium\">\r\n          <ArrowBack />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </NavLink>\r\n  ); // TODO: Edit goBack URL\r\n\r\n  //   const goBackbtn = <GoBack functions={[goBack]} />;\r\n\r\n  const toggleLeftSidebar = (val) => {\r\n    setOpenLeftSidebarGhost(val);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.miniLeftSidebarWrapper}>\r\n        <Hidden mdUp implementation=\"css\">\r\n          <IconButton\r\n            color=\"default\"\r\n            aria-label=\"toggle sidebar\"\r\n            component=\"span\"\r\n            onClick={() => toggleLeftSidebar(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={openLeftSidebarGhost}\r\n            onClose={() => toggleLeftSidebar(false)}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n            className={classes.drawer}\r\n          >\r\n            {/*<Divider className={classes.divider}/>*/}\r\n            <div className={classes.sidebarWrapper}>\r\n              {goBack}\r\n              {links}\r\n            </div>\r\n          </Drawer>\r\n        </Hidden>\r\n      </div>\r\n      <Hidden smDown implementation=\"css\">\r\n        <div className={classes.leftSidebarWrapper}>\r\n          <Drawer\r\n            anchor=\"left\"\r\n            variant=\"permanent\"\r\n            open\r\n            className={classes.drawer}\r\n          >\r\n            {/*<Divider className={classes.divider}/>*/}\r\n            <div className={classes.sidebarWrapper}>\r\n              {goBack}\r\n              <Divider />\r\n              {links}\r\n            </div>\r\n          </Drawer>\r\n        </div>\r\n      </Hidden>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TreatmentMenu;\r\n","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\LoginPage\\index.js",["409","410","411","412","413","414","415","416","417"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\n\r\n// Component\r\nimport Footer from '../../../layouts/Footer';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst LoginPage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container component=\"main\" component={Paper} className={classes.root}>\r\n                <CssBaseline />\r\n                <Grid container className={classes.loginHeader}>\r\n                    <div className={classes.brandContainer}>\r\n                        <img src={logoADC} alt=\"Logo\" className={classes.logo}/>\r\n                        <div className={classes.brandName}>\r\n                            A Dental Clinic\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container className={classes.loginContainer}>\r\n                    <Grid item xs={12} sm={8} md={5} elevation={6} square>\r\n                        <div className={classes.paper}>\r\n                            <Typography component=\"h1\" variant=\"h5\" className={classes.loginTitle}>\r\n                                <Trans i18nKey={strings.loginYourAccount}>\r\n                                </Trans>\r\n                            </Typography>\r\n                            <form className={classes.form} noValidate>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <AccountBox className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"username\"\r\n                                            label={t(strings.username)}\r\n                                            name=\"username\"\r\n                                            autoComplete=\"username\"\r\n                                            autoFocus\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <Lock className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label={t(strings.password)}\r\n                                            type={values.showPassword ? 'text' : 'password'}\r\n                                            value={values.password}\r\n                                            onChange={handleChange('password')}\r\n                                            id=\"password\"\r\n                                            autoComplete=\"current-password\"\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    className={classes.btnToggleVisibility}\r\n                                                >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                            }}\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                                /> */}\r\n                                <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                >\r\n                                {t(strings.continueLogin)}\r\n                                </Button>\r\n                                <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.forgotPassword)}\r\n                                    </Link>\r\n                                </Grid>\r\n                                {/* <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.dontHaveAccount)}\r\n                                    </Link>\r\n                                </Grid> */}\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                </Grid>\r\n                <Footer/>\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Staffs\\index.js",["418","419","420"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../MenuBar\";\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\nconst TablePaginationActions=(props)=> {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\nconst Staffs = () => {\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container} >\r\n            <MenuBar/>\r\n            \r\n            <div style={{background:darkTheme.whiteColor,marginTop:\"30px\"}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography style={{marginLeft:\"30px\"}}variant=\"h4\">\r\n                            {strings.staffs}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className={classes.searchControl} variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={strings.search}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon style={{cursor:\"pointer\"}} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton style={{margin:\"10px\"}} >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton style={{margin:\"10px\"}}>\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.itemIndex} align=\"left\">\r\n                                {strings.index}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemID} align=\"left\">\r\n                                {strings.id}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemFullname} align=\"left\">\r\n                                {strings.fullname}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemBirth} align=\"left\">\r\n                                {strings.birth}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemGender} align=\"left\">\r\n                                {strings.gender}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemAddress} align=\"left\">\r\n                                {strings.address}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell className={classes.itemIndexContent} align=\"left\">\r\n                                    {index+1}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemIDContent} align=\"left\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell className={classes.fullnamContente} align=\"left\">\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemBirthContent} align=\"left\">\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemGenderContent} align=\"left\">\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemAddressContent} align=\"left\">\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    \r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Staffs;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Providers\\index.js",["421","422","423"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../MenuBar\";\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\nconst TablePaginationActions=(props)=> {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\nconst Providers = () => {\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            <MenuBar/>\r\n            \r\n            <div style={{background:darkTheme.whiteColor,marginTop:\"30px\"}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography style={{marginLeft:\"30px\"}}variant=\"h4\">\r\n                            {strings.providers}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl style={{width:\"200px\",height:\"50px\"}}variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={strings.search}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon style={{cursor:\"pointer\"}} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton style={{margin:\"10px\"}} >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton style={{margin:\"10px\"}}>\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.itemIndex} align=\"left\">\r\n                                {strings.index}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemID} align=\"left\">\r\n                                {strings.id}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemFullname} align=\"left\">\r\n                                {strings.fullname}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemBirth} align=\"left\">\r\n                                {strings.birth}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemGender} align=\"left\">\r\n                                {strings.gender}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemAddress} align=\"left\">\r\n                                {strings.address}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell className={classes.itemIndexContent} align=\"left\">\r\n                                    {index+1}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemIDContent} align=\"left\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemFullnameContent} align=\"left\">\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemBirthContent} align=\"left\">\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemGenderContent} align=\"left\">\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemAddressContent} align=\"left\">\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    \r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Providers;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Referral\\index.js",["424","425","426"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../MenuBar\";\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\nconst TablePaginationActions=(props)=> {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\nconst Referral = () => {\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            <MenuBar/>\r\n            \r\n            <div style={{background:darkTheme.whiteColor,marginTop:\"30px\"}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography style={{marginLeft:\"30px\"}}variant=\"h4\">\r\n                            {strings.referral}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl style={{width:\"200px\",height:\"50px\"}}variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={strings.search}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon style={{cursor:\"pointer\"}} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton style={{margin:\"10px\"}} >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton style={{margin:\"10px\"}}>\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.itemIndex} align=\"left\">\r\n                                {strings.index}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemID} align=\"left\">\r\n                                {strings.id}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemFullname} align=\"left\">\r\n                                {strings.fullname}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemBirth} align=\"left\">\r\n                                {strings.birth}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemGender} align=\"left\">\r\n                                {strings.gender}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemAddress} align=\"left\">\r\n                                {strings.address}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell className={classes.itemIndexContent} align=\"left\">\r\n                                    {index+1}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemIDContent} align=\"left\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell className={classes.fullnamContente} align=\"left\">\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemBirthContent} align=\"left\">\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemGenderContent} align=\"left\">\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemAddressContent} align=\"left\">\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    \r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Referral;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Procedure\\index.js",["427","428","429"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../MenuBar\";\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(code,fee,ins,duration,type,abbr,description)=>{\r\n    return {code,fee,ins,duration,type,abbr,description};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"1000\", \"ins\", \"30\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712321', \"2000\", \"ins\", \"40\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712322', \"3000\", \"ins\", \"50\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712323', \"4000\", \"ins\", \"60\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712324', \"5000\", \"ins\", \"70\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712325', \"6000\", \"ins\", \"80\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712326', \"7000\", \"ins\", \"90\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712327', \"8000\", \"ins\", \"11\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712328', \"9000\", \"ins\", \"33\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712329', \"10000\", \"ins\", \"22\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712330', \"11100\", \"ins\", \"1111\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712331', \"12200\", \"ins\", \"99\", \"1\",\"ABBR\",\"Description\"),\r\n\r\n\r\n];\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\nconst TablePaginationActions=(props)=> {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\nconst Procedure = () => {\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            <MenuBar/>\r\n            \r\n            <div style={{background:darkTheme.whiteColor,marginTop:\"30px\"}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography style={{marginLeft:\"30px\"}}variant=\"h4\">\r\n                            {strings.procedure}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl style={{width:\"200px\",height:\"50px\"}}variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={strings.search}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon style={{cursor:\"pointer\"}} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton style={{margin:\"10px\"}} >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton style={{margin:\"10px\"}}>\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.itemIndex} align=\"left\">\r\n                                {strings.index}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemCode} align=\"left\">\r\n                                {strings.code}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemFee} align=\"left\">\r\n                                {strings.fee}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemINS} align=\"left\">\r\n                                {strings.ins}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemDuration} align=\"left\">\r\n                                {strings.duration}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemType} align=\"left\">\r\n                                {strings.type}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemABBR} align=\"left\">\r\n                                {strings.abbr}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemDescription} align=\"left\">\r\n                                {strings.description}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell className={classes.itemIndexContent} align=\"left\">\r\n                                    {index+1}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemCodeContent} align=\"left\">\r\n                                    {row.code}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemFeeContent} align=\"left\">\r\n                                    {row.fee}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemINSContent} align=\"left\">\r\n                                    {row.ins}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemDurationContent} align=\"left\">\r\n                                    {row.duration}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemTypeContent} align=\"left\">\r\n                                    {row.type}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemABBRContent} align=\"left\">\r\n                                    {row.abbr}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemDescriptionContent} align=\"left\">\r\n                                    {row.description}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    \r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Procedure;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\ToothChartPage\\index.js",["430","431","432","433","434","435","436","437","438"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\n\r\n// Component\r\nimport Footer from '../../../layouts/Footer';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst ToothChartPage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container component=\"main\" component={Paper} className={classes.root}>\r\n                <CssBaseline />\r\n                <Grid container className={classes.loginHeader}>\r\n                    <div className={classes.brandContainer}>\r\n                        <img src={logoADC} alt=\"Logo\" className={classes.logo}/>\r\n                        <div className={classes.brandName}>\r\n                            A Dental Clinic\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container className={classes.loginContainer}>\r\n                    <Grid item xs={12} sm={8} md={5} elevation={6} square>\r\n                        <div className={classes.paper}>\r\n                            <Typography component=\"h1\" variant=\"h5\" className={classes.loginTitle}>\r\n                                <Trans i18nKey={strings.loginYourAccount}>\r\n                                </Trans>\r\n                            </Typography>\r\n                            <form className={classes.form} noValidate>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <AccountBox className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"username\"\r\n                                            label={t(strings.username)}\r\n                                            name=\"username\"\r\n                                            autoComplete=\"username\"\r\n                                            autoFocus\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <Lock className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label={t(strings.password)}\r\n                                            type={values.showPassword ? 'text' : 'password'}\r\n                                            value={values.password}\r\n                                            onChange={handleChange('password')}\r\n                                            id=\"password\"\r\n                                            autoComplete=\"current-password\"\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    className={classes.btnToggleVisibility}\r\n                                                >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                            }}\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                                /> */}\r\n                                <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                >\r\n                                {t(strings.continueLogin)}\r\n                                </Button>\r\n                                <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.forgotPassword)}\r\n                                    </Link>\r\n                                </Grid>\r\n                                {/* <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.dontHaveAccount)}\r\n                                    </Link>\r\n                                </Grid> */}\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                </Grid>\r\n                <Footer/>\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ToothChartPage;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Settings\\index.js",["439","440"],"import React, {useState, useEffect} from 'react';\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport routePaths from '../../../routes/path';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Component\r\nimport TermPrivacy from './TermPrivacy';\r\nimport Notifications from './Notifications';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`vertical-tabpanel-${index}`}\r\n        aria-labelledby={`vertical-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box px={4}>\r\n            {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\nconst Settings = () => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n    const history = useHistory();\r\n    const { section } = useParams();\r\n\r\n    useEffect(() => {\r\n      if (!section){\r\n        history.push(routePaths.settingsPath + \"/general\");\r\n      }\r\n    })\r\n\r\n    const sections = [\"general\", \"account\", \"password\", \"termPrivacy\", \"notifications\", \"location\"];\r\n    const curSection = Math.max(0, sections.indexOf(section));\r\n\r\n    // States\r\n    const [tabValue, setTabValue] = useState(curSection);\r\n\r\n    const handleChangeTab = (event, newValue) => {\r\n      //history.push(routePaths.settingsPath + \"/\" + sections[newValue]);\r\n      setTabValue(newValue);\r\n    };\r\n\r\n    const tabs = [t(strings.general), t(strings.account), t(strings.password), t(strings.termPolicy), t(strings.notifications), t(strings.location)];\r\n    const tablePanels = [\r\n      <TermPrivacy/>,\r\n      <TermPrivacy/>,\r\n      <TermPrivacy/>,\r\n      <TermPrivacy/>,\r\n      <Notifications/>,\r\n      <TermPrivacy/>,\r\n    ]\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Typography className={classes.title} variant=\"h5\" component=\"h5\">{t(strings.settings)}</Typography>\r\n            <Grid className={classes.tabsWrapper}>\r\n              <Grid item md={3} sm={4} xs={5}>\r\n                <Tabs\r\n                    orientation=\"vertical\"\r\n                    variant=\"scrollable\"\r\n                    value={tabValue}\r\n                    onChange={handleChangeTab}\r\n                    aria-label=\"Vertical tabs settings\"\r\n                    className={classes.tabs}\r\n                >\r\n                    {(tabs.map((tab, index) => {\r\n                        return <Tab key={index} className={classes.tab} label={tab} {...a11yProps(index)}/>\r\n                    }))}\r\n                </Tabs>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={7}>\r\n                {(tablePanels).map((tPanel, index) => {\r\n                  return <TabPanel key={index} value={tabValue} index={index}>\r\n                            {tPanel}\r\n                        </TabPanel>\r\n                })}\r\n              </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Settings;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\PatientProfilePage\\index.js",["441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\n\r\n// Component\r\nimport Footer from '../../../layouts/Footer';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst PatientProfilePage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container component=\"main\" component={Paper} className={classes.root}>\r\n                Patient Profile Page\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PatientProfilePage;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\PatientReportPage\\index.js",["469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\n\r\n// Component\r\nimport Footer from '../../../layouts/Footer';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst PatientReportPage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container component=\"main\" component={Paper} className={classes.root}>\r\n                Patient Report Page\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PatientReportPage;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\CustomInput\\CustomInput.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\LinkList.js",["497"],"import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// Utils\r\nimport {activeRoute} from '../../utils/routes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n      marginTop: \"0\",\r\n      paddingLeft: \"0\",\r\n      paddingTop: \"0\",\r\n      paddingBottom: \"0\",\r\n      marginBottom: \"0\",\r\n      listStyle: \"none\",\r\n      position: \"unset\"\r\n    },\r\n    listItem: {\r\n      width: '100%',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    listItemLink: {\r\n      margin: '0 auto',\r\n    },\r\n    listItemBtn: {\r\n      width: '60px',\r\n      height: '60px',\r\n      color: theme.whiteColor,\r\n      borderRadius: '5px',\r\n      backgroundColor: theme.primaryColor[2],\r\n      '& .MuiIconButton-label': {\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: '1.2em'\r\n        }\r\n      },\r\n      '&:hover': {\r\n        backgroundColor: theme.hoverBrightColor[0]\r\n      }\r\n    },\r\n    activeRoute: {\r\n        borderLeft: `4px solid ${theme.fontColor}`\r\n    }\r\n}));\r\nconst LinkList = ({links}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.list}>\r\n            {links.map((path, index) => {\r\n                return (\r\n                    <ListItem key={index} className={clsx(classes.listItem, activeRoute(path.link) && classes.activeRoute)}>\r\n                        <NavLink\r\n                            to={path.link}\r\n                            className={classes.listItemLink}\r\n                        >\r\n                            <Tooltip title={path.text} aria-label={path.text}>\r\n                              <IconButton className={classes.listItemBtn} size=\"medium\">{path.icon}</IconButton>\r\n                            </Tooltip>\r\n                        </NavLink>\r\n                    </ListItem>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n  }\r\n\r\nexport default LinkList;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\FunctionList.js",["498"],"import React, {useState} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\n// Utils\r\nimport {disableClick} from '../../utils/general';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n      marginTop: \"0\",\r\n      paddingLeft: \"0\",\r\n      paddingTop: \"0\",\r\n      paddingBottom: \"0\",\r\n      marginBottom: \"0\",\r\n      listStyle: \"none\",\r\n      position: \"unset\"\r\n    },\r\n    listItem: {\r\n      width: '100%',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    listItemLink: {\r\n      margin: '0 auto',\r\n    },\r\n    listItemBtn: {\r\n      width: '60px',\r\n      height: '60px',\r\n      color: theme.whiteColor,\r\n      borderRadius: '5px',\r\n      backgroundColor: theme.primaryColor[2],\r\n      '& .MuiIconButton-label': {\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: '1.2em'\r\n        }\r\n      },\r\n      '&:hover': {\r\n        backgroundColor: theme.hoverBrightColor[0]\r\n      }\r\n    },\r\n}));\r\nconst FunctionList = ({functions}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.list}>\r\n            {functions.map((func, index) => {\r\n              return (\r\n                    <ListItem key={index} className={classes.listItem}>\r\n                        <NavLink\r\n                          to=\"/\"\r\n                          className={classes.listItemLink}\r\n                          onClick={disableClick}\r\n                        >\r\n                          {func}\r\n                        </NavLink>\r\n                    </ListItem>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n  }\r\n\r\nexport default FunctionList;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationPopover.js",["499"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core \r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Components\r\nimport NotificationFuncPopover from './NotificationFuncPopover';\r\n\r\n// @material-ui/core Icons\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\r\n\r\n// Utils\r\nimport ConvertDateTimeUtils from '../../../utils/datetimes/convertDateTimes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: theme.notificationPopoverWidth + 'px',\r\n    minHeight: theme.notificationPopoverMinHeight + 'px',\r\n    maxHeight: theme.notificationPopoverMaxHeight + 'px',\r\n  },\r\n  list: {\r\n    width: '100%'\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  title: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingTop: theme.spacing(2),\r\n    fontWeight: 600\r\n  },\r\n  listItem: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      backgroundColor: theme.grayColor[11]\r\n    },\r\n    '&:hover .MuiSvgIcon-root': {\r\n      visibility: 'visible'\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '1.5em'\r\n    },\r\n  },\r\n  listItemTextNotRead: {\r\n    '& .MuiListItemText-secondary': {\r\n      color: theme.primaryColor[0]\r\n    }\r\n  },\r\n  listItemFunction: {\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '1em',\r\n      visibility: 'hidden',\r\n    },\r\n  },\r\n  noNotiDisplayWrapper: {\r\n    padding: theme.spacing(3),\r\n    fontStyle: 'italic',\r\n    textAlign: 'center',\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '2.5em',\r\n    },\r\n  }\r\n}));\r\n\r\nconst NotificationPopover = ({id, open, onClose, anchorEl, notifications, onNotificationClick, onRemoveNotification}) => {\r\n  const classes = useStyles();\r\n  const {t, i18n } = useTranslation();\r\n\r\n  const [openNotiFuncPopover, setOpenNotiFuncPopover] = useState(false);\r\n  const [notiFuncPopAnchorEl, setNotiFuncopAnchorEl] = useState(null);\r\n  const popOverId = openNotiFuncPopover? \"notification-function-popover\" : undefined;\r\n\r\n  // Notification to display Popover\r\n  const [chosenNotiFunc, setChosenNotiFunc] = useState(-1);\r\n\r\n  // Notifications Function Popover\r\n  const handleOpenNotiFuncPopover = (evt, notiId) => {\r\n    setNotiFuncopAnchorEl(evt.currentTarget);\r\n    setChosenNotiFunc(notiId);\r\n    setOpenNotiFuncPopover(true);\r\n  }\r\n\r\n  const handleCloseNotiFuncPopover = () => {\r\n    setNotiFuncopAnchorEl(null);\r\n    setChosenNotiFunc(-1);\r\n    setOpenNotiFuncPopover(false);\r\n  }\r\n\r\n  const handleRemoveNotification = () => {\r\n    onRemoveNotification(chosenNotiFunc);\r\n    handleCloseNotiFuncPopover();\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n        id={id}\r\n        open={open}\r\n        onClose={onClose}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        className={classes.root}\r\n    >\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h5\"\r\n          className={classes.title}\r\n          >\r\n          {t(strings.notifications)}\r\n        </Typography>\r\n        <List className={classes.list}>\r\n          {(notifications.length > 0)? \r\n            notifications.map((notification, index) => {\r\n              return (\r\n                <React.Fragment  key={index}>\r\n                  <ListItem alignItems=\"flex-start\" className={classes.listItem} onClick={(evt) => onNotificationClick(notification.id)}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <PersonIcon/>\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText \r\n                      className={clsx(!notification.isRead && classes.listItemTextNotRead)}\r\n                      primary={\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {notification.content}\r\n                        </Typography>\r\n                      } \r\n                      secondary={ConvertDateTimeUtils.formatDate(notification.date, \"MMMM DD, YYYY\") || '...'} />\r\n                      <Typography className={classes.listItemFunction} variant=\"div\" component=\"div\">\r\n                        <IconButton onClick={(evt) => handleOpenNotiFuncPopover(evt, notification.id)}>\r\n                          <MoreVertIcon/>\r\n                        </IconButton>\r\n                      </Typography>\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                </React.Fragment>\r\n              )\r\n            })\r\n           : \r\n           <div className={classes.noNotiDisplayWrapper}>\r\n            <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\">\r\n              <AddAlertIcon/> <br/>\r\n              {t(strings.noNotificationToDisplay)} ...\r\n            </Typography>\r\n           </div>\r\n          }\r\n        </List>\r\n        <NotificationFuncPopover\r\n          id={popOverId}\r\n          open={openNotiFuncPopover}\r\n          onClose={handleCloseNotiFuncPopover}\r\n          anchorEl={notiFuncPopAnchorEl}\r\n          onRemoveNotification={handleRemoveNotification}\r\n        />\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default NotificationPopover;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\RightSidebar\\jss.js",["500","501"],"const sidebarStyle = (theme) => ({ \r\n    rightSidebarWrapper: {\r\n      color: theme.fontColor,\r\n      width: theme.drawerRightWidth,\r\n      flexShrink: 0,\r\n      '& .MuiSvgIcon-root': {\r\n          color: theme.fontColor\r\n      },\r\n      '& .MuiDivider-root': {\r\n        backgroundColor: theme.fontColor,\r\n        height: '1px',\r\n        width: '90%',\r\n        margin: '0 auto'\r\n      }\r\n    },\r\n    drawer: {\r\n      '& .MuiDrawer-paper': {\r\n        backgroundColor: theme.primaryColor[0],\r\n        color: theme.fontColor,\r\n        overflow: 'hidden',\r\n      }\r\n    },\r\n    sidebarWrapper: {\r\n      position: \"relative\",\r\n      height: \"calc(100vh - 75px)\",\r\n      overflow: \"auto\",\r\n      width: theme.drawerRightWidth,\r\n      zIndex: \"4\",\r\n      overflowScrolling: \"touch\",\r\n      marginTop: '10px'\r\n    },\r\n    drawerOpen: {\r\n        width: theme.drawerRightWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.drawerRightCloseWidth,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.drawerRightCloseWidth + 10,\r\n        },\r\n    },\r\n    toggleBtn: {\r\n      borderRadius: '0px',\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: '1.7em'\r\n      } \r\n    },\r\n    rightSidebarCloseWrapper: {\r\n      width: theme.drawerRightCloseWidth,\r\n    },\r\n    sidebarContent: {\r\n      width: 0,\r\n      //display: 'none',\r\n      transition: theme.transitions.create('display', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      paddingLeft: theme.drawerRightCloseWidth + 20,\r\n      paddingRight: theme.drawerRightCloseWidth + 20,\r\n      transition: theme.transitions.create('padding', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    displayBlock: {\r\n      width: '100%',\r\n      //display: 'block',\r\n      transition: theme.transitions.create('display', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      transition: theme.transitions.create('padding', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    calendar: {\r\n      fontSize: '0.93em',\r\n      backgroundColor: theme.whiteColor,\r\n      color: theme.blackColor,\r\n    },\r\n    appointmentHolder: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0),\r\n      textAlign: 'center',\r\n    },\r\n    appointmentHolderBox: {\r\n      width: '100%',\r\n      minHeight: '100px',\r\n      backgroundColor: theme.whiteColor,\r\n      borderRadius: '10px',\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    todayAppoinment: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0),\r\n      textAlign: 'center',\r\n    },\r\n    todayAppoinmentBox: {\r\n      width: '100%',\r\n      minHeight: '100px',\r\n      backgroundColor: theme.whiteColor,\r\n      borderRadius: '10px',\r\n      marginTop: theme.spacing(1)\r\n    }\r\n  });\r\n  \r\nexport default sidebarStyle;  ","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\configs\\strings.js",["502","503"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\LoginPage\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\TreatmentMenu\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\TreatmentMenu\\LinkList.js",["504"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Staffs\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\CustomInput\\customInputStyle.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\index.js",["505","506","507","508","509","510"],"import React, {useState, useRef} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\n// @material-ui/core Icons\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\n\r\n// Components\r\n\r\n// Utils\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItemBtn: {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: theme.whiteColor,\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.primaryColor[2],\r\n        '& .MuiIconButton-label': {\r\n          '& .MuiSvgIcon-root': {\r\n            fontSize: '1.2em'\r\n          }\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: theme.hoverBrightColor[0]\r\n        }\r\n    },\r\n}));\r\nconst Notification = ({onOpen, popOverId, notiCount}) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Tooltip title={t(strings.notifications)} aria-label={t(strings.notifications)}>\r\n            <IconButton className={classes.listItemBtn} size=\"medium\" onClick={(evt) => onOpen(evt)} aria-describedby={popOverId}>\r\n              <Badge badgeContent={notiCount} max={999} color=\"secondary\">\r\n                <NotificationsActiveIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default Notification;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\PatientReportPage\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\CustomAvatar\\index.js",["511","512"],"import React, {useState} from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport styles from \"./jss\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst CustomAvatar = ({link, src, text, classes}) => {\r\n    let inClasses = useStyles();\r\n    if (classes){\r\n        inClasses = Object.assign(inClasses, classes);\r\n    }\r\n\r\n    return (\r\n        <div className={inClasses.avatarWrapper}>\r\n            <a\r\n                href={link}\r\n                target=\"_blank\">\r\n                <Avatar alt=\"Jiwon\" src={src} className={inClasses.avatarLarge}></Avatar>\r\n                <div className={inClasses.avatarText}>{text}</div>\r\n            </a>\r\n        </div>\r\n    );\r\n  }\r\n\r\nexport default CustomAvatar;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationFuncPopover.js",["513","514"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core \r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemAvatar';\r\n\r\n// @material-ui/core Icons\r\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiSvgIcon-root': {\r\n        fontSize: '2em'\r\n    }\r\n  }\r\n}));\r\n\r\nconst NotificationFuncPopover = ({id, open, onClose, anchorEl, onRemoveNotification}) => {\r\n  const classes = useStyles();\r\n  const {t, i18n } = useTranslation();\r\n\r\n  return (\r\n    <Popover\r\n        id={id}\r\n        open={open}\r\n        onClose={onClose}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        className={classes.root}\r\n    >\r\n        <List className={classes.list}>\r\n            <ListItem key={0} button onClick={() => onRemoveNotification()}>\r\n                <ListItemIcon>\r\n                    <CancelPresentationIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={t(strings.removeNotification)} />\r\n            </ListItem>\r\n        </List>\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default NotificationFuncPopover;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Settings\\Notifications.js",["515","516","517"],"import React, {useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport strings from '../../../configs/strings';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// Component\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Notifications = () => {\r\n  const classes = useStyles();\r\n  const {t, i18next} = useTranslation();\r\n\r\n  // States\r\n  const [state, setState] = React.useState({\r\n    notifyStaffMessage: true,\r\n    notifyPatientMessage: false,\r\n    notifyHavingMeeting: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">{t(strings.notifications)}</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            className={classes.formControl}\r\n            control={<Switch checked={state.notifyStaffMessage} onChange={handleChange} name=\"notifyStaffMessage\" color=\"primary\"/>}\r\n            label={t(strings.notifyStaffMessage)}\r\n          />\r\n          <FormControlLabel\r\n            className={classes.formControl}\r\n            control={<Switch checked={state.notifyPatientMessage} onChange={handleChange} name=\"notifyPatientMessage\" color=\"primary\"/>}\r\n            label={t(strings.notifyPatientMessage)}\r\n          />\r\n          <FormControlLabel\r\n            className={classes.formControl}\r\n            control={<Switch checked={state.notifyHavingMeeting} onChange={handleChange} name=\"notifyHavingMeeting\" color=\"primary\"/>}\r\n            label={t(strings.notifyHavingMeeting)}\r\n          />\r\n        </FormGroup>\r\n      </FormControl>\r\n    )\r\n}\r\n\r\nexport default Notifications;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\general\\index.js",["518"],"const disableClick = (evt) => {\r\n    evt.preventDefault();\r\n}\r\n\r\nexport {disableClick};\r\n\r\nexport default {\r\n    disableClick\r\n}","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Settings\\TermPrivacy.js",["519","520","521","522"],"import React, {useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport strings from '../../../configs/strings';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n// Html Parser\r\nimport HtmlParser from 'html-react-parser';\r\n\r\n// @material-ui/core Component\r\n\r\n// Component\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n}));\r\n\r\nconst TermPrivacy = () => {\r\n  const {t, i18next} = useTranslation();\r\n    return (\r\n        <p>\r\n          {HtmlParser(t(strings.termPolicyFullText))}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default TermPrivacy;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\Footer\\index.js",["523","524","525","526"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Component\r\nimport Copyright from './Copyright';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        display: \"flex\",\r\n        height: \"20vh\",\r\n    },\r\n    copyrightBox : {\r\n      alignSelf: \"flex-end\",\r\n      marginBottom: \"2rem\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    copyright : {\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"bold\",\r\n    }\r\n  }));\r\n\r\nconst Footer = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.footer}>\r\n            <Box mt={5} className={classes.copyrightBox}>\r\n                <Copyright />\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Settings\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\datetimes\\convertDateTimes.js",["527"],"import moment from 'moment';\r\n\r\nconst parseDate = (dateStr, formatStr, isStrict) => {\r\n    isStrict = isStrict || true;\r\n    const d = moment(dateStr, formatStr, isStrict);\r\n    if (!d._isValid){\r\n        return null;\r\n    };\r\n    return d._d;\r\n}\r\n\r\nconst formatDate = (date, formatStr) => {\r\n    return moment(date).format(formatStr);\r\n}\r\n\r\nconst formatDateStr = (dateStr, dateFormatStr, outFormatStr) => {\r\n    const d = moment(dateStr, dateFormatStr, true);\r\n    if (!d._isValid){\r\n        return \"\";\r\n    };\r\n    return d.format(outFormatStr);\r\n}\r\n\r\nexport default {\r\n    parseDate,\r\n    formatDate,\r\n    formatDateStr\r\n}","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\PatientProfilePage\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\MenuBar\\index.js",["528","529","530","531","532","533","534","535","536","537","538"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,Grid } from '@material-ui/core';\r\n\r\n//import image\r\nimport DentalProvider from \"../../../assets/images/dentalProvider.png\";\r\nimport DentalPractice from \"../../../assets/images/dentalPractice.png\";\r\nimport DentalStaff from \"../../../assets/images/dentalStaff.png\";\r\nimport DentalProcedure from \"../../../assets/images/dentalProcedure.png\";\r\nimport DentalChair from \"../../../assets/images/dentalChair.png\";\r\nimport DentalReferral from \"../../../assets/images/dentalReferral.png\";\r\nimport DentalSchedule from \"../../../assets/images/calendar.png\";\r\nimport Authentication from \"../../../assets/images/authentication.png\";\r\nimport Document from \"../../../assets/images/document.png\";\r\n\r\nimport MenuBarItem from \"./MenuBarItem\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\nimport strings from \"../../../configs/strings\";\r\n\r\nimport styles from \"./jss\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst MenuBar=()=>{\r\n    const classes = useStyles(darkTheme);\r\n    return(\r\n        <div className={classes.container}>\r\n                <Grid container spacing={2}  >\r\n\r\n                    <Grid item  className={classes.menuItemFirst}>\r\n                        \r\n                        <Container className={classes.menuItem} \r\n\r\n                            >\r\n                            <NavLink\r\n                                to=\"/providers\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalProvider}></img>\r\n                                <Typography variant=\"body2\"  >\r\n                                    {strings.providers}\r\n                                </Typography>\r\n                            </NavLink>\r\n                        </Container>  \r\n                        \r\n                                  \r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/practices\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalPractice}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.practices}\r\n                                </Typography>\r\n                            </NavLink>\r\n                        </Container> \r\n                        \r\n                        \r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/staffs\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalStaff}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.staffs}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                        \r\n                               \r\n                                \r\n                        \r\n                    </Grid>\r\n                \r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/procedure\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalProcedure}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.procedure}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                                \r\n                        \r\n                    </Grid>    \r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/chairs\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalChair}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.chairs}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                                \r\n                        \r\n                    </Grid>  \r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/referral\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalReferral}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.referral}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>                        \r\n                                \r\n                        \r\n                    </Grid>    \r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/schedule\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalSchedule}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.schedule}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                                \r\n                        \r\n                    </Grid>  \r\n                    <Grid item >\r\n                    <Container className={classes.menuItemAuthentication} >\r\n                        <NavLink\r\n                            to=\"/authentication\"\r\n                            className={classes.link}\r\n                        >\r\n                            <img className={classes.menuItemImage} src={Authentication}></img>\r\n                            <Typography variant=\"body2\" align=\"left\" >\r\n                                    {strings.authentication}\r\n                            </Typography>\r\n                        </NavLink>\r\n                            \r\n                            \r\n                    </Container>\r\n                    {/* <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/authentication\"\r\n                                // className={classes.linkAuthentication}\r\n                                style={{fontSize:\"10px\"}}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={Authentication}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.authentication}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container> */}\r\n                                \r\n                        \r\n                    </Grid>  \r\n                    {/* <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <img className={classes.menuItemImage} src={Authentication}></img>\r\n                            <Typography variant=\"subtitle2\" style={{fontSize:\"13px\"}} align='center'>\r\n                                        Authentication\r\n                            </Typography>\r\n                            \r\n                        </Container>        \r\n                        \r\n                    </Grid>   */}\r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/document\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={Document}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.document}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                                \r\n                        \r\n                    </Grid>\r\n                         \r\n                </Grid>\r\n                \r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default withRouter(MenuBar);","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Referral\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\ToothChartPage\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Procedure\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Providers\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\utils\\routes\\index.js",["539"]," // verifies if routeName is the one active (in browser input)\r\nconst activeRoute = (routeName) => {\r\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\r\n}\r\n\r\nexport {activeRoute};\r\n\r\nexport default {\r\n    activeRoute: activeRoute\r\n}","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\CustomAvatar\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\layouts\\Footer\\Copyright.js",["540","541","542"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport strings from '../../configs/strings';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    copyright : {\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"bold\",\r\n    }\r\n  }));\r\n\r\nconst Copyright = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.copyright}>\r\n        {t(strings.copyrightBy)} {' '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Hcmus student\r\n        </Link>\r\n      </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright;","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\MenuBar\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\MenuBar\\MenuBarItem\\index.js",["543","544"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst MenuBarItem=()=>{\r\n    return(\r\n        <Container >\r\n                \r\n        \r\n            </Container>\r\n            \r\n    )\r\n}\r\n\r\nexport default MenuBarItem;\r\n","C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\index.js",["545"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\jss.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\index.js",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\configs\\figures.js",["561"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentTooltipHeader.js",["562"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointment.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentTooltipContent.js",["563"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentContainer.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeTableCell.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeScaleLabel.js",["564","565"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\MakeAppointmentDialog.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeScaleTicket.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\SchedulerMenuItems.js",["566","567"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\GroupingPanelCell.js",["568","569"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomToolbarRow.js",["570","571"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomDateNavigatorButtons.js",[],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomDateNavigatorOpenButton.js",["572","573","574"],"C:\\Users\\vdcuo\\OneDrive\\Desktop\\DATN\\aDentalClinic\\src\\components\\common\\Empty\\index.js",[],{"ruleId":"575","replacedBy":"576"},{"ruleId":"577","replacedBy":"578"},{"ruleId":"579","severity":1,"message":"580","line":2,"column":3,"nodeType":"581","messageId":"582","endLine":2,"endColumn":13},{"ruleId":"579","severity":1,"message":"583","line":4,"column":8,"nodeType":"581","messageId":"582","endLine":4,"endColumn":12},{"ruleId":"579","severity":1,"message":"584","line":10,"column":8,"nodeType":"581","messageId":"582","endLine":10,"endColumn":18},{"ruleId":"579","severity":1,"message":"585","line":14,"column":10,"nodeType":"581","messageId":"582","endLine":14,"endColumn":24},{"ruleId":"579","severity":1,"message":"586","line":14,"column":26,"nodeType":"581","messageId":"582","endLine":14,"endColumn":39},{"ruleId":"587","severity":1,"message":"588","line":181,"column":1,"nodeType":"589","endLine":221,"endColumn":3},{"ruleId":"590","severity":1,"message":"591","line":21,"column":9,"nodeType":"592","messageId":"593","endLine":26,"endColumn":10},{"ruleId":"594","severity":1,"message":"595","line":27,"column":7,"nodeType":"596","messageId":"597","endLine":28,"endColumn":27},{"ruleId":"579","severity":1,"message":"598","line":14,"column":27,"nodeType":"581","messageId":"582","endLine":14,"endColumn":42},{"ruleId":"579","severity":1,"message":"599","line":6,"column":8,"nodeType":"581","messageId":"582","endLine":6,"endColumn":19},{"ruleId":"587","severity":1,"message":"588","line":177,"column":1,"nodeType":"589","endLine":214,"endColumn":3},{"ruleId":"587","severity":1,"message":"588","line":1,"column":1,"nodeType":"589","endLine":4,"endColumn":2},{"ruleId":"587","severity":1,"message":"588","line":3,"column":1,"nodeType":"589","endLine":56,"endColumn":2},{"ruleId":"587","severity":1,"message":"588","line":3,"column":1,"nodeType":"589","endLine":56,"endColumn":2},{"ruleId":"579","severity":1,"message":"600","line":7,"column":10,"nodeType":"581","messageId":"582","endLine":7,"endColumn":24},{"ruleId":"587","severity":1,"message":"588","line":37,"column":1,"nodeType":"589","endLine":39,"endColumn":2},{"ruleId":"601","severity":1,"message":"602","line":1,"column":15,"nodeType":"603","messageId":"604","endLine":15,"endColumn":1649},{"ruleId":"601","severity":1,"message":"602","line":1,"column":15,"nodeType":"603","messageId":"604","endLine":14,"endColumn":1527},{"ruleId":"605","severity":1,"message":"606","line":9,"column":26,"nodeType":"603","messageId":"607","endLine":9,"endColumn":27,"suggestions":"608"},{"ruleId":"579","severity":1,"message":"609","line":2,"column":8,"nodeType":"581","messageId":"582","endLine":2,"endColumn":12},{"ruleId":"579","severity":1,"message":"610","line":35,"column":15,"nodeType":"581","messageId":"582","endLine":35,"endColumn":19},{"ruleId":"611","severity":1,"message":"612","line":115,"column":29,"nodeType":"613","messageId":"614","endLine":115,"endColumn":31},{"ruleId":"611","severity":1,"message":"615","line":123,"column":79,"nodeType":"613","messageId":"614","endLine":123,"endColumn":81},{"ruleId":"579","severity":1,"message":"616","line":5,"column":8,"nodeType":"581","messageId":"582","endLine":5,"endColumn":17},{"ruleId":"579","severity":1,"message":"580","line":1,"column":26,"nodeType":"581","messageId":"582","endLine":1,"endColumn":36},{"ruleId":"579","severity":1,"message":"617","line":4,"column":9,"nodeType":"581","messageId":"582","endLine":4,"endColumn":15},{"ruleId":"579","severity":1,"message":"618","line":7,"column":8,"nodeType":"581","messageId":"582","endLine":7,"endColumn":12},{"ruleId":"579","severity":1,"message":"619","line":9,"column":22,"nodeType":"581","messageId":"582","endLine":9,"endColumn":30},{"ruleId":"579","severity":1,"message":"610","line":34,"column":15,"nodeType":"581","messageId":"582","endLine":34,"endColumn":19},{"ruleId":"579","severity":1,"message":"620","line":38,"column":12,"nodeType":"581","messageId":"582","endLine":38,"endColumn":24},{"ruleId":"579","severity":1,"message":"621","line":38,"column":26,"nodeType":"581","messageId":"582","endLine":38,"endColumn":41},{"ruleId":"579","severity":1,"message":"609","line":2,"column":8,"nodeType":"581","messageId":"582","endLine":2,"endColumn":12},{"ruleId":"579","severity":1,"message":"622","line":19,"column":8,"nodeType":"581","messageId":"582","endLine":19,"endColumn":25},{"ruleId":"579","severity":1,"message":"623","line":20,"column":8,"nodeType":"581","messageId":"582","endLine":20,"endColumn":18},{"ruleId":"579","severity":1,"message":"624","line":21,"column":8,"nodeType":"581","messageId":"582","endLine":21,"endColumn":22},{"ruleId":"579","severity":1,"message":"625","line":23,"column":8,"nodeType":"581","messageId":"582","endLine":23,"endColumn":20},{"ruleId":"579","severity":1,"message":"626","line":24,"column":8,"nodeType":"581","messageId":"582","endLine":24,"endColumn":21},{"ruleId":"579","severity":1,"message":"627","line":30,"column":8,"nodeType":"581","messageId":"582","endLine":30,"endColumn":20},{"ruleId":"579","severity":1,"message":"628","line":36,"column":10,"nodeType":"581","messageId":"582","endLine":36,"endColumn":22},{"ruleId":"579","severity":1,"message":"610","line":41,"column":14,"nodeType":"581","messageId":"582","endLine":41,"endColumn":18},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"629","line":14,"column":8,"nodeType":"581","messageId":"582","endLine":14,"endColumn":24},{"ruleId":"579","severity":1,"message":"630","line":15,"column":8,"nodeType":"581","messageId":"582","endLine":15,"endColumn":16},{"ruleId":"579","severity":1,"message":"631","line":18,"column":8,"nodeType":"581","messageId":"582","endLine":18,"endColumn":11},{"ruleId":"579","severity":1,"message":"632","line":20,"column":8,"nodeType":"581","messageId":"582","endLine":20,"endColumn":24},{"ruleId":"579","severity":1,"message":"633","line":23,"column":8,"nodeType":"581","messageId":"582","endLine":23,"endColumn":19},{"ruleId":"579","severity":1,"message":"634","line":24,"column":8,"nodeType":"581","messageId":"582","endLine":24,"endColumn":14},{"ruleId":"579","severity":1,"message":"610","line":37,"column":15,"nodeType":"581","messageId":"582","endLine":37,"endColumn":19},{"ruleId":"635","severity":1,"message":"636","line":57,"column":46,"nodeType":"637","endLine":57,"endColumn":63},{"ruleId":"579","severity":1,"message":"638","line":16,"column":5,"nodeType":"581","messageId":"582","endLine":16,"endColumn":14},{"ruleId":"579","severity":1,"message":"639","line":17,"column":5,"nodeType":"581","messageId":"582","endLine":17,"endColumn":15},{"ruleId":"579","severity":1,"message":"640","line":20,"column":5,"nodeType":"581","messageId":"582","endLine":20,"endColumn":16},{"ruleId":"579","severity":1,"message":"638","line":16,"column":5,"nodeType":"581","messageId":"582","endLine":16,"endColumn":14},{"ruleId":"579","severity":1,"message":"639","line":17,"column":5,"nodeType":"581","messageId":"582","endLine":17,"endColumn":15},{"ruleId":"579","severity":1,"message":"640","line":20,"column":5,"nodeType":"581","messageId":"582","endLine":20,"endColumn":16},{"ruleId":"579","severity":1,"message":"638","line":16,"column":5,"nodeType":"581","messageId":"582","endLine":16,"endColumn":14},{"ruleId":"579","severity":1,"message":"639","line":17,"column":5,"nodeType":"581","messageId":"582","endLine":17,"endColumn":15},{"ruleId":"579","severity":1,"message":"640","line":20,"column":5,"nodeType":"581","messageId":"582","endLine":20,"endColumn":16},{"ruleId":"579","severity":1,"message":"638","line":16,"column":5,"nodeType":"581","messageId":"582","endLine":16,"endColumn":14},{"ruleId":"579","severity":1,"message":"639","line":17,"column":5,"nodeType":"581","messageId":"582","endLine":17,"endColumn":15},{"ruleId":"579","severity":1,"message":"640","line":20,"column":5,"nodeType":"581","messageId":"582","endLine":20,"endColumn":16},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"629","line":14,"column":8,"nodeType":"581","messageId":"582","endLine":14,"endColumn":24},{"ruleId":"579","severity":1,"message":"630","line":15,"column":8,"nodeType":"581","messageId":"582","endLine":15,"endColumn":16},{"ruleId":"579","severity":1,"message":"631","line":18,"column":8,"nodeType":"581","messageId":"582","endLine":18,"endColumn":11},{"ruleId":"579","severity":1,"message":"632","line":20,"column":8,"nodeType":"581","messageId":"582","endLine":20,"endColumn":24},{"ruleId":"579","severity":1,"message":"633","line":23,"column":8,"nodeType":"581","messageId":"582","endLine":23,"endColumn":19},{"ruleId":"579","severity":1,"message":"634","line":24,"column":8,"nodeType":"581","messageId":"582","endLine":24,"endColumn":14},{"ruleId":"579","severity":1,"message":"610","line":37,"column":15,"nodeType":"581","messageId":"582","endLine":37,"endColumn":19},{"ruleId":"635","severity":1,"message":"636","line":57,"column":46,"nodeType":"637","endLine":57,"endColumn":63},{"ruleId":"579","severity":1,"message":"619","line":6,"column":22,"nodeType":"581","messageId":"582","endLine":6,"endColumn":30},{"ruleId":"579","severity":1,"message":"610","line":57,"column":15,"nodeType":"581","messageId":"582","endLine":57,"endColumn":19},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"641","line":7,"column":8,"nodeType":"581","messageId":"582","endLine":7,"endColumn":15},{"ruleId":"579","severity":1,"message":"642","line":8,"column":8,"nodeType":"581","messageId":"582","endLine":8,"endColumn":15},{"ruleId":"579","severity":1,"message":"643","line":10,"column":26,"nodeType":"581","messageId":"582","endLine":10,"endColumn":31},{"ruleId":"579","severity":1,"message":"644","line":11,"column":8,"nodeType":"581","messageId":"582","endLine":11,"endColumn":14},{"ruleId":"579","severity":1,"message":"599","line":12,"column":8,"nodeType":"581","messageId":"582","endLine":12,"endColumn":19},{"ruleId":"579","severity":1,"message":"638","line":13,"column":8,"nodeType":"581","messageId":"582","endLine":13,"endColumn":17},{"ruleId":"579","severity":1,"message":"629","line":14,"column":8,"nodeType":"581","messageId":"582","endLine":14,"endColumn":24},{"ruleId":"579","severity":1,"message":"630","line":15,"column":8,"nodeType":"581","messageId":"582","endLine":15,"endColumn":16},{"ruleId":"579","severity":1,"message":"645","line":16,"column":8,"nodeType":"581","messageId":"582","endLine":16,"endColumn":12},{"ruleId":"579","severity":1,"message":"631","line":18,"column":8,"nodeType":"581","messageId":"582","endLine":18,"endColumn":11},{"ruleId":"579","severity":1,"message":"632","line":20,"column":8,"nodeType":"581","messageId":"582","endLine":20,"endColumn":24},{"ruleId":"579","severity":1,"message":"646","line":21,"column":8,"nodeType":"581","messageId":"582","endLine":21,"endColumn":18},{"ruleId":"579","severity":1,"message":"647","line":22,"column":8,"nodeType":"581","messageId":"582","endLine":22,"endColumn":22},{"ruleId":"579","severity":1,"message":"633","line":23,"column":8,"nodeType":"581","messageId":"582","endLine":23,"endColumn":19},{"ruleId":"579","severity":1,"message":"634","line":24,"column":8,"nodeType":"581","messageId":"582","endLine":24,"endColumn":14},{"ruleId":"579","severity":1,"message":"648","line":25,"column":8,"nodeType":"581","messageId":"582","endLine":25,"endColumn":18},{"ruleId":"579","severity":1,"message":"649","line":26,"column":8,"nodeType":"581","messageId":"582","endLine":26,"endColumn":18},{"ruleId":"579","severity":1,"message":"650","line":27,"column":8,"nodeType":"581","messageId":"582","endLine":27,"endColumn":21},{"ruleId":"579","severity":1,"message":"651","line":28,"column":8,"nodeType":"581","messageId":"582","endLine":28,"endColumn":18},{"ruleId":"579","severity":1,"message":"652","line":29,"column":8,"nodeType":"581","messageId":"582","endLine":29,"endColumn":12},{"ruleId":"579","severity":1,"message":"653","line":32,"column":8,"nodeType":"581","messageId":"582","endLine":32,"endColumn":14},{"ruleId":"579","severity":1,"message":"654","line":37,"column":12,"nodeType":"581","messageId":"582","endLine":37,"endColumn":13},{"ruleId":"579","severity":1,"message":"610","line":37,"column":15,"nodeType":"581","messageId":"582","endLine":37,"endColumn":19},{"ruleId":"579","severity":1,"message":"655","line":43,"column":11,"nodeType":"581","messageId":"582","endLine":43,"endColumn":23},{"ruleId":"579","severity":1,"message":"656","line":47,"column":11,"nodeType":"581","messageId":"582","endLine":47,"endColumn":34},{"ruleId":"579","severity":1,"message":"657","line":51,"column":11,"nodeType":"581","messageId":"582","endLine":51,"endColumn":34},{"ruleId":"635","severity":1,"message":"636","line":57,"column":46,"nodeType":"637","endLine":57,"endColumn":63},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"641","line":7,"column":8,"nodeType":"581","messageId":"582","endLine":7,"endColumn":15},{"ruleId":"579","severity":1,"message":"642","line":8,"column":8,"nodeType":"581","messageId":"582","endLine":8,"endColumn":15},{"ruleId":"579","severity":1,"message":"643","line":10,"column":26,"nodeType":"581","messageId":"582","endLine":10,"endColumn":31},{"ruleId":"579","severity":1,"message":"644","line":11,"column":8,"nodeType":"581","messageId":"582","endLine":11,"endColumn":14},{"ruleId":"579","severity":1,"message":"599","line":12,"column":8,"nodeType":"581","messageId":"582","endLine":12,"endColumn":19},{"ruleId":"579","severity":1,"message":"638","line":13,"column":8,"nodeType":"581","messageId":"582","endLine":13,"endColumn":17},{"ruleId":"579","severity":1,"message":"629","line":14,"column":8,"nodeType":"581","messageId":"582","endLine":14,"endColumn":24},{"ruleId":"579","severity":1,"message":"630","line":15,"column":8,"nodeType":"581","messageId":"582","endLine":15,"endColumn":16},{"ruleId":"579","severity":1,"message":"645","line":16,"column":8,"nodeType":"581","messageId":"582","endLine":16,"endColumn":12},{"ruleId":"579","severity":1,"message":"631","line":18,"column":8,"nodeType":"581","messageId":"582","endLine":18,"endColumn":11},{"ruleId":"579","severity":1,"message":"632","line":20,"column":8,"nodeType":"581","messageId":"582","endLine":20,"endColumn":24},{"ruleId":"579","severity":1,"message":"646","line":21,"column":8,"nodeType":"581","messageId":"582","endLine":21,"endColumn":18},{"ruleId":"579","severity":1,"message":"647","line":22,"column":8,"nodeType":"581","messageId":"582","endLine":22,"endColumn":22},{"ruleId":"579","severity":1,"message":"633","line":23,"column":8,"nodeType":"581","messageId":"582","endLine":23,"endColumn":19},{"ruleId":"579","severity":1,"message":"634","line":24,"column":8,"nodeType":"581","messageId":"582","endLine":24,"endColumn":14},{"ruleId":"579","severity":1,"message":"648","line":25,"column":8,"nodeType":"581","messageId":"582","endLine":25,"endColumn":18},{"ruleId":"579","severity":1,"message":"649","line":26,"column":8,"nodeType":"581","messageId":"582","endLine":26,"endColumn":18},{"ruleId":"579","severity":1,"message":"650","line":27,"column":8,"nodeType":"581","messageId":"582","endLine":27,"endColumn":21},{"ruleId":"579","severity":1,"message":"651","line":28,"column":8,"nodeType":"581","messageId":"582","endLine":28,"endColumn":18},{"ruleId":"579","severity":1,"message":"652","line":29,"column":8,"nodeType":"581","messageId":"582","endLine":29,"endColumn":12},{"ruleId":"579","severity":1,"message":"653","line":32,"column":8,"nodeType":"581","messageId":"582","endLine":32,"endColumn":14},{"ruleId":"579","severity":1,"message":"654","line":37,"column":12,"nodeType":"581","messageId":"582","endLine":37,"endColumn":13},{"ruleId":"579","severity":1,"message":"610","line":37,"column":15,"nodeType":"581","messageId":"582","endLine":37,"endColumn":19},{"ruleId":"579","severity":1,"message":"655","line":43,"column":11,"nodeType":"581","messageId":"582","endLine":43,"endColumn":23},{"ruleId":"579","severity":1,"message":"656","line":47,"column":11,"nodeType":"581","messageId":"582","endLine":47,"endColumn":34},{"ruleId":"579","severity":1,"message":"657","line":51,"column":11,"nodeType":"581","messageId":"582","endLine":51,"endColumn":34},{"ruleId":"635","severity":1,"message":"636","line":57,"column":46,"nodeType":"637","endLine":57,"endColumn":63},{"ruleId":"579","severity":1,"message":"658","line":1,"column":16,"nodeType":"581","messageId":"582","endLine":1,"endColumn":24},{"ruleId":"579","severity":1,"message":"658","line":1,"column":16,"nodeType":"581","messageId":"582","endLine":1,"endColumn":24},{"ruleId":"579","severity":1,"message":"610","line":80,"column":13,"nodeType":"581","messageId":"582","endLine":80,"endColumn":17},{"ruleId":"659","severity":1,"message":"660","line":70,"column":7,"nodeType":"661","messageId":"614","endLine":70,"endColumn":17},{"ruleId":"659","severity":1,"message":"660","line":84,"column":7,"nodeType":"661","messageId":"614","endLine":84,"endColumn":17},{"ruleId":"587","severity":1,"message":"588","line":92,"column":1,"nodeType":"589","endLine":171,"endColumn":3},{"ruleId":"659","severity":1,"message":"662","line":106,"column":5,"nodeType":"661","messageId":"614","endLine":106,"endColumn":11},{"ruleId":"579","severity":1,"message":"658","line":1,"column":16,"nodeType":"581","messageId":"582","endLine":1,"endColumn":24},{"ruleId":"579","severity":1,"message":"658","line":1,"column":16,"nodeType":"581","messageId":"582","endLine":1,"endColumn":24},{"ruleId":"579","severity":1,"message":"663","line":1,"column":26,"nodeType":"581","messageId":"582","endLine":1,"endColumn":32},{"ruleId":"579","severity":1,"message":"609","line":2,"column":8,"nodeType":"581","messageId":"582","endLine":2,"endColumn":12},{"ruleId":"579","severity":1,"message":"664","line":8,"column":8,"nodeType":"581","messageId":"582","endLine":8,"endColumn":12},{"ruleId":"579","severity":1,"message":"665","line":9,"column":8,"nodeType":"581","messageId":"582","endLine":9,"endColumn":16},{"ruleId":"579","severity":1,"message":"610","line":39,"column":15,"nodeType":"581","messageId":"582","endLine":39,"endColumn":19},{"ruleId":"579","severity":1,"message":"658","line":1,"column":16,"nodeType":"581","messageId":"582","endLine":1,"endColumn":24},{"ruleId":"666","severity":1,"message":"667","line":18,"column":13,"nodeType":"668","endLine":20,"endColumn":33},{"ruleId":"579","severity":1,"message":"609","line":3,"column":8,"nodeType":"581","messageId":"582","endLine":3,"endColumn":12},{"ruleId":"579","severity":1,"message":"610","line":26,"column":13,"nodeType":"581","messageId":"582","endLine":26,"endColumn":17},{"ruleId":"579","severity":1,"message":"658","line":1,"column":16,"nodeType":"581","messageId":"582","endLine":1,"endColumn":24},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"669","line":26,"column":13,"nodeType":"581","messageId":"582","endLine":26,"endColumn":20},{"ruleId":"587","severity":1,"message":"588","line":7,"column":1,"nodeType":"589","endLine":9,"endColumn":2},{"ruleId":"579","severity":1,"message":"658","line":1,"column":16,"nodeType":"581","messageId":"582","endLine":1,"endColumn":24},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"670","line":14,"column":7,"nodeType":"581","messageId":"582","endLine":14,"endColumn":16},{"ruleId":"579","severity":1,"message":"669","line":19,"column":13,"nodeType":"581","messageId":"582","endLine":19,"endColumn":20},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"643","line":4,"column":26,"nodeType":"581","messageId":"582","endLine":4,"endColumn":31},{"ruleId":"579","severity":1,"message":"654","line":31,"column":12,"nodeType":"581","messageId":"582","endLine":31,"endColumn":13},{"ruleId":"579","severity":1,"message":"610","line":31,"column":15,"nodeType":"581","messageId":"582","endLine":31,"endColumn":19},{"ruleId":"587","severity":1,"message":"588","line":24,"column":1,"nodeType":"589","endLine":28,"endColumn":2},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"671","line":20,"column":8,"nodeType":"581","messageId":"582","endLine":20,"endColumn":19},{"ruleId":"672","severity":1,"message":"673","line":44,"column":33,"nodeType":"668","endLine":44,"endColumn":93},{"ruleId":"672","severity":1,"message":"673","line":61,"column":33,"nodeType":"668","endLine":61,"endColumn":93},{"ruleId":"672","severity":1,"message":"673","line":78,"column":33,"nodeType":"668","endLine":78,"endColumn":90},{"ruleId":"672","severity":1,"message":"673","line":98,"column":33,"nodeType":"668","endLine":98,"endColumn":94},{"ruleId":"672","severity":1,"message":"673","line":115,"column":33,"nodeType":"668","endLine":115,"endColumn":90},{"ruleId":"672","severity":1,"message":"673","line":132,"column":33,"nodeType":"668","endLine":132,"endColumn":93},{"ruleId":"672","severity":1,"message":"673","line":149,"column":33,"nodeType":"668","endLine":149,"endColumn":93},{"ruleId":"672","severity":1,"message":"673","line":164,"column":29,"nodeType":"668","endLine":164,"endColumn":89},{"ruleId":"672","severity":1,"message":"673","line":207,"column":33,"nodeType":"668","endLine":207,"endColumn":87},{"ruleId":"587","severity":1,"message":"588","line":8,"column":1,"nodeType":"589","endLine":10,"endColumn":2},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"643","line":3,"column":26,"nodeType":"581","messageId":"582","endLine":3,"endColumn":31},{"ruleId":"579","severity":1,"message":"610","line":17,"column":15,"nodeType":"581","messageId":"582","endLine":17,"endColumn":19},{"ruleId":"579","severity":1,"message":"674","line":2,"column":10,"nodeType":"581","messageId":"582","endLine":2,"endColumn":20},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"619","line":2,"column":22,"nodeType":"581","messageId":"582","endLine":2,"endColumn":30},{"ruleId":"579","severity":1,"message":"675","line":11,"column":49,"nodeType":"581","messageId":"582","endLine":11,"endColumn":66},{"ruleId":"579","severity":1,"message":"676","line":11,"column":68,"nodeType":"581","messageId":"582","endLine":11,"endColumn":80},{"ruleId":"579","severity":1,"message":"677","line":21,"column":3,"nodeType":"581","messageId":"582","endLine":21,"endColumn":11},{"ruleId":"579","severity":1,"message":"678","line":22,"column":3,"nodeType":"581","messageId":"582","endLine":22,"endColumn":19},{"ruleId":"579","severity":1,"message":"679","line":26,"column":3,"nodeType":"581","messageId":"582","endLine":26,"endColumn":15},{"ruleId":"579","severity":1,"message":"680","line":29,"column":3,"nodeType":"581","messageId":"582","endLine":29,"endColumn":7},{"ruleId":"579","severity":1,"message":"681","line":29,"column":9,"nodeType":"581","messageId":"582","endLine":29,"endColumn":15},{"ruleId":"579","severity":1,"message":"682","line":72,"column":9,"nodeType":"581","messageId":"582","endLine":72,"endColumn":21},{"ruleId":"579","severity":1,"message":"610","line":84,"column":13,"nodeType":"581","messageId":"582","endLine":84,"endColumn":17},{"ruleId":"579","severity":1,"message":"683","line":121,"column":24,"nodeType":"581","messageId":"582","endLine":121,"endColumn":39},{"ruleId":"579","severity":1,"message":"684","line":122,"column":24,"nodeType":"581","messageId":"582","endLine":122,"endColumn":39},{"ruleId":"579","severity":1,"message":"685","line":123,"column":22,"nodeType":"581","messageId":"582","endLine":123,"endColumn":35},{"ruleId":"579","severity":1,"message":"686","line":124,"column":21,"nodeType":"581","messageId":"582","endLine":124,"endColumn":33},{"ruleId":"579","severity":1,"message":"687","line":125,"column":31,"nodeType":"581","messageId":"582","endLine":125,"endColumn":53},{"ruleId":"579","severity":1,"message":"688","line":180,"column":11,"nodeType":"581","messageId":"582","endLine":180,"endColumn":19},{"ruleId":"587","severity":1,"message":"588","line":6,"column":1,"nodeType":"589","endLine":11,"endColumn":2},{"ruleId":"579","severity":1,"message":"689","line":17,"column":9,"nodeType":"581","messageId":"582","endLine":17,"endColumn":16},{"ruleId":"579","severity":1,"message":"689","line":17,"column":9,"nodeType":"581","messageId":"582","endLine":17,"endColumn":16},{"ruleId":"611","severity":1,"message":"612","line":34,"column":20,"nodeType":"613","messageId":"614","endLine":34,"endColumn":22},{"ruleId":"611","severity":1,"message":"612","line":34,"column":39,"nodeType":"613","messageId":"614","endLine":34,"endColumn":41},{"ruleId":"579","severity":1,"message":"690","line":2,"column":16,"nodeType":"581","messageId":"582","endLine":2,"endColumn":20},{"ruleId":"579","severity":1,"message":"610","line":34,"column":13,"nodeType":"581","messageId":"582","endLine":34,"endColumn":17},{"ruleId":"579","severity":1,"message":"691","line":5,"column":3,"nodeType":"581","messageId":"582","endLine":5,"endColumn":11},{"ruleId":"579","severity":1,"message":"646","line":6,"column":3,"nodeType":"581","messageId":"582","endLine":6,"endColumn":13},{"ruleId":"579","severity":1,"message":"691","line":5,"column":3,"nodeType":"581","messageId":"582","endLine":5,"endColumn":11},{"ruleId":"579","severity":1,"message":"646","line":6,"column":3,"nodeType":"581","messageId":"582","endLine":6,"endColumn":13},{"ruleId":"579","severity":1,"message":"691","line":5,"column":3,"nodeType":"581","messageId":"582","endLine":5,"endColumn":11},{"ruleId":"579","severity":1,"message":"646","line":6,"column":3,"nodeType":"581","messageId":"582","endLine":6,"endColumn":13},{"ruleId":"579","severity":1,"message":"692","line":12,"column":8,"nodeType":"581","messageId":"582","endLine":12,"endColumn":21},"no-native-reassign",["693"],"no-negated-in-lhs",["694"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'lightTheme' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'dispatchLoading' is assigned a value but never used.","'CssBaseline' is defined but never used.","'FormHelperText' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","no-useless-escape","Unnecessary escape character: \\Y.","unnecessaryEscape",["695","696"],"'clsx' is defined but never used.","'i18n' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Container' is defined but never used.","'moment' is defined but never used.","'path' is defined but never used.","'useTheme' is defined but never used.","'calendarDate' is assigned a value but never used.","'setCalendarDate' is assigned a value but never used.","'CalendarTodayIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'CustomAvatar' is defined but never used.","'disableClick' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'CustomInput' is defined but never used.","'People' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TextField' is defined but never used.","'InputLabel' is defined but never used.","'FilledInput' is defined but never used.","'strings' is defined but never used.","'logoADC' is defined but never used.","'Trans' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'AccountBox' is defined but never used.","'Lock' is defined but never used.","'Footer' is defined but never used.","'t' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleClickShowPassword' is assigned a value but never used.","'handleMouseDownPassword' is assigned a value but never used.","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","Duplicate key 'report'.","'useRef' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'i18next' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'MenuBarItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'makeStyles' is defined but never used.","'IntegratedEditing' is defined but never used.","'EditingState' is defined but never used.","'WeekView' is defined but never used.","'DragDropProvider' is defined but never used.","'ViewSwitcher' is defined but never used.","'teal' is defined but never used.","'indigo' is defined but never used.","'numOfPeriods' is assigned a value but never used.","'setCellDuration' is assigned a value but never used.","'setStartDayHour' is assigned a value but never used.","'setEndDayHour' is assigned a value but never used.","'setTimeTable' is assigned a value but never used.","'setTimeTableCellHeight' is assigned a value but never used.","'stateArr' is assigned a value but never used.","'classes' is assigned a value but never used.","'memo' is defined but never used.","'TableRow' is defined but never used.","'EventSeatIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"697","fix":"698","desc":"699"},{"messageId":"700","fix":"701","desc":"702"},"removeEscape",{"range":"703","text":"704"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"705","text":"706"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2438,2439],"",[2438,2438],"\\"]