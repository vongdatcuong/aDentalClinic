[{"F:\\react\\aDentalClinic\\src\\index.js":"1","F:\\react\\aDentalClinic\\src\\reportWebVitals.js":"2","F:\\react\\aDentalClinic\\src\\layouts\\App\\App.js":"3","F:\\react\\aDentalClinic\\src\\i18n\\index.js":"4","F:\\react\\aDentalClinic\\src\\contexts\\loading-context.js":"5","F:\\react\\aDentalClinic\\src\\routes\\index.js":"6","F:\\react\\aDentalClinic\\src\\layouts\\Loading\\index.js":"7","F:\\react\\aDentalClinic\\src\\i18n\\en-us\\index.js":"8","F:\\react\\aDentalClinic\\src\\i18n\\vn\\index.js":"9","F:\\react\\aDentalClinic\\src\\routes\\path.js":"10","F:\\react\\aDentalClinic\\src\\layouts\\PageContainer\\index.js":"11","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\index.js":"12","F:\\react\\aDentalClinic\\src\\layouts\\RightSidebar\\index.js":"13","F:\\react\\aDentalClinic\\src\\components\\feature\\DashBoard\\index.js":"14","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\LinkList.js":"15","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\jss.js":"16","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\FunctionList.js":"17","F:\\react\\aDentalClinic\\src\\layouts\\RightSidebar\\jss.js":"18","F:\\react\\aDentalClinic\\src\\configs\\strings.js":"19","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\Popover.js":"20","F:\\react\\aDentalClinic\\src\\components\\feature\\DashBoard\\jss.js":"21","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\index.js":"22","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationFuncPopover.js":"23","F:\\react\\aDentalClinic\\src\\components\\common\\CustomAvatar\\index.js":"24","F:\\react\\aDentalClinic\\src\\utils\\datetimes\\convertDateTimes.js":"25","F:\\react\\aDentalClinic\\src\\utils\\general\\index.js":"26","F:\\react\\aDentalClinic\\src\\utils\\routes\\index.js":"27","F:\\react\\aDentalClinic\\src\\components\\common\\CustomAvatar\\jss.js":"28","F:\\react\\aDentalClinic\\src\\utils\\colors\\index.js":"29","F:\\react\\aDentalClinic\\src\\themes\\lightTheme.js":"30","F:\\react\\aDentalClinic\\src\\contexts\\theme-context.js":"31","F:\\react\\aDentalClinic\\src\\themes\\darkTheme.js":"32","F:\\react\\aDentalClinic\\src\\utils\\types\\Theme.js":"33","F:\\react\\aDentalClinic\\src\\components\\feature\\LoginPage\\index.js":"34","F:\\react\\aDentalClinic\\src\\components\\common\\CustomInput\\CustomInput.js":"35","F:\\react\\aDentalClinic\\src\\components\\common\\CustomInput\\customInputStyle.js":"36","F:\\react\\aDentalClinic\\src\\layouts\\Footer\\index.js":"37","F:\\react\\aDentalClinic\\src\\layouts\\Footer\\Copyright.js":"38","F:\\react\\aDentalClinic\\src\\components\\feature\\LoginPage\\jss.js":"39","F:\\react\\aDentalClinic\\src\\components\\feature\\Providers\\index.js":"40","F:\\react\\aDentalClinic\\src\\components\\feature\\Providers\\jss.js":"41","F:\\react\\aDentalClinic\\src\\components\\feature\\MenuBar\\index.js":"42","F:\\react\\aDentalClinic\\src\\components\\feature\\MenuBar\\MenuBarItem\\index.js":"43","F:\\react\\aDentalClinic\\src\\components\\feature\\MenuBar\\jss.js":"44","F:\\react\\aDentalClinic\\src\\components\\feature\\Staffs\\index.js":"45","F:\\react\\aDentalClinic\\src\\components\\feature\\Staffs\\jss.js":"46","F:\\react\\aDentalClinic\\src\\components\\feature\\Procedure\\index.js":"47","F:\\react\\aDentalClinic\\src\\components\\feature\\Procedure\\jss.js":"48","F:\\react\\aDentalClinic\\src\\components\\feature\\Referral\\index.js":"49","F:\\react\\aDentalClinic\\src\\components\\feature\\Referral\\jss.js":"50"},{"size":619,"mtime":1614436774155,"results":"51","hashOfConfig":"52"},{"size":375,"mtime":1614436774167,"results":"53","hashOfConfig":"52"},{"size":973,"mtime":1614868542303,"results":"54","hashOfConfig":"52"},{"size":560,"mtime":1614436774151,"results":"55","hashOfConfig":"52"},{"size":637,"mtime":1614436774146,"results":"56","hashOfConfig":"52"},{"size":2932,"mtime":1614954662355,"results":"57","hashOfConfig":"52"},{"size":809,"mtime":1614436774164,"results":"58","hashOfConfig":"52"},{"size":1154,"mtime":1614868542256,"results":"59","hashOfConfig":"52"},{"size":1257,"mtime":1614868542272,"results":"60","hashOfConfig":"52"},{"size":881,"mtime":1614948046758,"results":"61","hashOfConfig":"52"},{"size":525,"mtime":1614868542350,"results":"62","hashOfConfig":"52"},{"size":6863,"mtime":1614436774162,"results":"63","hashOfConfig":"52"},{"size":3101,"mtime":1614868542417,"results":"64","hashOfConfig":"52"},{"size":471,"mtime":1614436774141,"results":"65","hashOfConfig":"52"},{"size":2229,"mtime":1614868542318,"results":"66","hashOfConfig":"52"},{"size":1685,"mtime":1614868542350,"results":"67","hashOfConfig":"52"},{"size":1819,"mtime":1614868542318,"results":"68","hashOfConfig":"52"},{"size":3763,"mtime":1614868542421,"results":"69","hashOfConfig":"52"},{"size":2569,"mtime":1614946408958,"results":"70","hashOfConfig":"52"},{"size":5993,"mtime":1614868542334,"results":"71","hashOfConfig":"52"},{"size":129,"mtime":1614868542162,"results":"72","hashOfConfig":"52"},{"size":1769,"mtime":1614868542350,"results":"73","hashOfConfig":"52"},{"size":1670,"mtime":1614868542334,"results":"74","hashOfConfig":"52"},{"size":805,"mtime":1614436774138,"results":"75","hashOfConfig":"52"},{"size":625,"mtime":1614436774172,"results":"76","hashOfConfig":"52"},{"size":128,"mtime":1614436774174,"results":"77","hashOfConfig":"52"},{"size":254,"mtime":1614436774177,"results":"78","hashOfConfig":"52"},{"size":643,"mtime":1614868542116,"results":"79","hashOfConfig":"52"},{"size":1200,"mtime":1614436774172,"results":"80","hashOfConfig":"52"},{"size":5388,"mtime":1614868542576,"results":"81","hashOfConfig":"52"},{"size":1143,"mtime":1614868542240,"results":"82","hashOfConfig":"52"},{"size":5388,"mtime":1614868542468,"results":"83","hashOfConfig":"52"},{"size":47,"mtime":1614868542576,"results":"84","hashOfConfig":"52"},{"size":8258,"mtime":1614868542210,"results":"85","hashOfConfig":"52"},{"size":2508,"mtime":1614868542147,"results":"86","hashOfConfig":"52"},{"size":1770,"mtime":1614868542147,"results":"87","hashOfConfig":"52"},{"size":1026,"mtime":1614868542303,"results":"88","hashOfConfig":"52"},{"size":861,"mtime":1614868542303,"results":"89","hashOfConfig":"52"},{"size":2330,"mtime":1614868542225,"results":"90","hashOfConfig":"52"},{"size":10992,"mtime":1614954579141,"results":"91","hashOfConfig":"52"},{"size":1290,"mtime":1614954511921,"results":"92","hashOfConfig":"52"},{"size":10014,"mtime":1614955314431,"results":"93","hashOfConfig":"52"},{"size":356,"mtime":1614932123729,"results":"94","hashOfConfig":"52"},{"size":1054,"mtime":1614955270383,"results":"95","hashOfConfig":"52"},{"size":10977,"mtime":1615002183223,"results":"96","hashOfConfig":"52"},{"size":1468,"mtime":1615002484277,"results":"97","hashOfConfig":"52"},{"size":11866,"mtime":1614954746522,"results":"98","hashOfConfig":"52"},{"size":1534,"mtime":1614954726938,"results":"99","hashOfConfig":"52"},{"size":10985,"mtime":1614954806498,"results":"100","hashOfConfig":"52"},{"size":1288,"mtime":1614954782033,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1u2aae3",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"104"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"104"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"104"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"F:\\react\\aDentalClinic\\src\\index.js",[],["236","237"],"F:\\react\\aDentalClinic\\src\\reportWebVitals.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\App\\App.js",["238","239","240","241","242"],"import React, {\r\n  useContext,\r\n} from \"react\";\r\nimport logo from '../../assets/images/logo.svg';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport Routes from '../../routes';\r\nimport lightTheme from \"../../themes/lightTheme\";\r\n\r\n// Material UI Core\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\n// Context\r\nimport { LoadingStateProvider } from '../../contexts/loading-context';\r\nimport { ThemeStateProvider } from '../../contexts/theme-context';\r\n\r\n// Components\r\nimport Loading from '../Loading';\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <ThemeStateProvider> {/* ==> Theme Context Provider */}\r\n        <LoadingStateProvider>\r\n          <CssBaseline />\r\n          <Loading />\r\n          <Router>\r\n            <Routes/>\r\n          </Router>\r\n        </LoadingStateProvider>\r\n    </ThemeStateProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\react\\aDentalClinic\\src\\i18n\\index.js",[],"F:\\react\\aDentalClinic\\src\\contexts\\loading-context.js",[],"F:\\react\\aDentalClinic\\src\\routes\\index.js",["243"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport path from './path';\r\n\r\n// @material-ui/core Component\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n// Components\r\nimport PageContainer from '../layouts/PageContainer';\r\nimport LeftSidebar from '../layouts/LeftSidebar';\r\nimport RightSidebar from '../layouts/RightSidebar';\r\nimport DashBoard from '../components/feature/DashBoard';\r\nimport LoginPage from '../components/feature/LoginPage';\r\nimport Providers from \"../components/feature/Providers\";\r\nimport Staffs from \"../components/feature/Staffs\";\r\nimport Procedure from \"../components/feature/Procedure\";\r\nimport Referral from \"../components/feature/Referral\";\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n        <Route path={path.dashboardPath}>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <DashBoard/>\r\n            <RightSidebar/>\r\n          </PageContainer>\r\n        </Route>\r\n\r\n        \r\n        <Route path={path.providersPath}>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Providers />\r\n          </PageContainer>\r\n            \r\n            \r\n        </Route>\r\n        {/* <Route path={path.practicesPath}>\r\n            <div>\r\n              Practices\r\n            </div>\r\n            \r\n            \r\n        </Route> */}\r\n        <Route path={path.staffsPath}>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Staffs/>\r\n          </PageContainer>\r\n\r\n            \r\n        </Route>\r\n        <Route path={path.procedurePath}>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Procedure/>\r\n          </PageContainer>\r\n            \r\n        </Route>\r\n        <Route path={path.referralPath}>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Referral/>\r\n          </PageContainer>\r\n            \r\n        </Route>\r\n        {/* <Route path={path.chairPath}>\r\n            <div>\r\n              Chair\r\n            </div>\r\n            \r\n            \r\n        </Route> */}\r\n        {/* <Route path={path.schedulePath}>\r\n            <div>\r\n              Schedule\r\n            </div>\r\n            \r\n            \r\n        </Route> */}\r\n        {/* <Route path={path.authenticationPath}>\r\n            <div>\r\n              Authentication\r\n            </div>\r\n            \r\n            \r\n        </Route> */}\r\n        {/* <Route path={path.documentPath}>\r\n            <div>\r\n              Document\r\n            </div>\r\n            \r\n            \r\n        </Route> */}\r\n        \r\n        \r\n\r\n        <Route path={path.loginPath}>\r\n          <PageContainer>\r\n            <LoginPage/>\r\n          </PageContainer>\r\n        </Route>\r\n        <Route path={path.defaultPath} exact>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <DashBoard/>\r\n            <RightSidebar/>\r\n          </PageContainer>\r\n        </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;","F:\\react\\aDentalClinic\\src\\layouts\\Loading\\index.js",["244"],"import React, {useContext} from \"react\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport { loadingStore } from \"../../contexts/loading-context\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = {\r\n    display: 'block',\r\n    left: '40%',\r\n    top: '30%',\r\n    zIndex: '99999'\r\n};\r\n\r\n const Loading = (props) => {\r\n    const { loadingState, dispatchLoading } = useContext(loadingStore);\r\n    return (\r\n        <div className=\"sweet-loading\" style={{'display': (loadingState.isLoading)? 'block' : 'none'}}>\r\n            <BounceLoader\r\n                css={override}\r\n                size={300}\r\n                color={\"#014a0c\"}\r\n                loading={loadingState.isLoading}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","F:\\react\\aDentalClinic\\src\\i18n\\en-us\\index.js",["245"],"export default {\r\n    translation: {\r\n        \"Appointment\" : \"Appointment\",\r\n        \"Patient\" : \"Patient\",\r\n        \"Report\" : \"Report\",\r\n        \"Documents\" : \"Documents\",\r\n        \"Setting\" : \"Setting\",\r\n        \"Notifications\": \"Notifications\",\r\n        \"Remove Notification\": \"Remove Notification\",\r\n        \"No notifications to display yet\": \"No notification to display yet\",\r\n        \"Appointment holder\": \"Appointment holder\",\r\n        \"Today's Appoinment\": \"Today's Appoinment\",\r\n        // Common\r\n        \"Yes\" : \"Yes\",\r\n        \"No\": \"No\",\r\n        \"OK\": \"OK\",\r\n        \"Cancel\": \"Cancel\",\r\n        \"Log in\": \"Log in\",\r\n        \"Log out\": \"Log out\",\r\n        // Messages\r\n        // Success Messages\r\n        // Error Messages\r\n        // Confirm Messages\r\n        // Login Page\r\n        \"<strong>Login</strong> your account\": \"<strong>Login</strong> your account\",\r\n        \"Username\": \"Username\",\r\n        \"Password\": \"Password\",\r\n        \"Continue\": \"Continue\",\r\n        \"Forgot password?\": \"Forgot password?\",\r\n        \"Don't have an account? Sign Up\": \"Don't have an account? Sign Up\",\r\n        \"Copyright by\": \"Copyright by\",\r\n    }\r\n}","F:\\react\\aDentalClinic\\src\\i18n\\vn\\index.js",["246"],"export default {\r\n    translation: {\r\n        \"Appointment\" : \"Cuộc hẹn\",\r\n        \"Patient\" : \"Bệnh nhân\",\r\n        \"Report\" : \"Báo cáo\",\r\n        \"Documents\" : \"Tài liệu\",\r\n        \"Setting\" : \"Cài đặt\",\r\n        \"Notifications\": \"Thông báo\",\r\n        \"Remove Notification\": \"Gỡ thông báo\",\r\n        \"No notifications to display yet\": \"Không có thông báo để hiện thị\",\r\n        \"Appointment holder\": \"Người hẹn\",\r\n        \"Today's Appoinment\": \"Cuộc hẹn hôm nay\",\r\n        // Common\r\n        \"Yes\" : \"Có\",\r\n        \"No\": \"Không\",\r\n        \"OK\": \"Đồng ý\",\r\n        \"Cancel\": \"Hủy\",\r\n        \"Log in\": \"Đăng nhập\",\r\n        \"Log out\": \"Đăng xuất\",\r\n        // Messages\r\n        // Success Messages\r\n        // Error Messages\r\n        // Confirm Messages\r\n        // Login Page\r\n        \"<strong>Login</strong> your account\": \"<strong>Đăng nhập</strong> tài khoản của bạn\",\r\n        \"Username\": \"Tên đăng nhập\",\r\n        \"Password\": \"Mật khẩu\",\r\n        \"Continue\": \"Tiếp tục\",\r\n        \"Forgot password?\": \"Quên mật khẩu?\",\r\n        \"Don't have an account? Sign Up\": \"Chưa có tài khoản? Đăng ký\",\r\n        \"Copyright by\": \"Bản quyền thuộc về\",\r\n    }\r\n}","F:\\react\\aDentalClinic\\src\\routes\\path.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\PageContainer\\index.js",["247"],"import React from \"react\";\r\nimport { makeStyles  } from \"@material-ui/core/styles\";\r\n\r\n// Material UI Core\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: 0,\r\n        margin: 0,\r\n        display: 'flex',\r\n    }\r\n}))\r\n\r\nconst PageContainer = ({children}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageContainer;\r\n","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\index.js",["248","249","250","251"],"import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../configs/strings';\r\n// Routes\r\nimport path from \"../../routes/path\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// @material-ui/core Icons\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n  // Links Icons\r\n  import CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\n  import PeopleIcon from '@material-ui/icons/People';\r\n  import AssessmentIcon from '@material-ui/icons/Assessment';\r\n  import InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n  import SettingsIcon from '@material-ui/icons/Settings';\r\n  import ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// Components\r\nimport CustomAvatar from '../../components/common/CustomAvatar';\r\nimport LinkList from './LinkList';\r\nimport FunctionList from './FunctionList';\r\nimport Notification from './Notification';\r\nimport NotificationPopover from './Notification/Popover';\r\nimport styles from \"./jss\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst LeftSidebar = (props) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    // States\r\n    const [openLeftSidebarGhost, setOpenLeftSidebarGhost] = useState(false);\r\n    const [openNotiPopover, setOpenNotiPopover] = useState(false);\r\n\r\n    const [notiPopAnchorEl, setNotiPopAnchorEl] = useState(null);\r\n    const popOverId = openNotiPopover? \"notification-popover\" : undefined;\r\n\r\n    // Notification\r\n    const [notifications, setNotifications] = useState([\r\n      {\r\n        id: 1,\r\n        user: {},\r\n        content: \"User 1 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: false\r\n      },\r\n      {\r\n        id: 2,\r\n        user: {},\r\n        content: \"User 2 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: false\r\n      },\r\n      {\r\n        id: 3,\r\n        user: {},\r\n        content: \"User 3 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: true\r\n      }\r\n    ]);\r\n\r\n\r\n    const pathList = [\r\n      {\r\n        link: path.dashboardPath,\r\n        text: t(strings.appointment),\r\n        icon: <CalendarTodayIcon/>\r\n      },\r\n      {\r\n        link: path.patientPath,\r\n        text: t(strings.patient),\r\n        icon: <PeopleIcon/>\r\n      },\r\n      {\r\n        link: path.reportPath,\r\n        text: t(strings.report),\r\n        icon: <AssessmentIcon/>\r\n      },\r\n      {\r\n        link: path.documentPath,\r\n        text: t(strings.documents),\r\n        icon: <InsertDriveFileIcon/>\r\n      },\r\n      {\r\n        link: path.settingPath,\r\n        text: t(strings.setting),\r\n        icon: <SettingsIcon/>\r\n      }\r\n    ]\r\n    const links = <LinkList\r\n      links={pathList}\r\n    />\r\n\r\n    // Notifications Popover\r\n    const handleOpenNotiPopover = (evt) => {\r\n      setNotiPopAnchorEl(evt.currentTarget);\r\n      setOpenNotiPopover(true);\r\n    }\r\n\r\n    const handleCloseNotiPopover = () => {\r\n      setNotiPopAnchorEl(null);\r\n      setOpenNotiPopover(false);\r\n    }\r\n\r\n    const onNotificationClick = (notiId) => {\r\n      const newNotifications = [...notifications];\r\n      newNotifications.forEach((notification) => {\r\n        if (notification.id == notiId){\r\n          notification.isRead = true;\r\n        }\r\n      })\r\n      setNotifications(newNotifications);\r\n    }\r\n\r\n    const handleRemoveNotification = (notiId) => {\r\n      setNotifications(notifications.filter((notification) => notification.id != notiId));\r\n    }\r\n\r\n    const notification = \r\n      <Notification\r\n        onOpen={handleOpenNotiPopover}\r\n        popOverId={popOverId}\r\n        notiCount={notifications.filter((noti) => !noti.isRead).length}\r\n      />\r\n\r\n    const logout = \r\n        <Tooltip title={t(strings.logout)} aria-label={t(strings.logout)}>\r\n          <IconButton className={classes.listItemBtn} size=\"medium\"><ExitToAppIcon/></IconButton>\r\n        </Tooltip>\r\n\r\n    const funcList = <FunctionList\r\n      functions={[notification, logout]}\r\n    />\r\n\r\n    const toggleLeftSidebar = (val) => {      \r\n      setOpenLeftSidebarGhost(val);\r\n    }\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.miniLeftSidebarWrapper}>\r\n          <Hidden mdUp implementation=\"css\">\r\n              <IconButton color=\"default\" aria-label=\"toggle sidebar\" component=\"span\"\r\n                  onClick={() => toggleLeftSidebar(true)}\r\n              >\r\n                  <MenuIcon />\r\n              </IconButton>\r\n              <Drawer\r\n                  variant=\"temporary\"\r\n                  anchor=\"left\"\r\n                  open={openLeftSidebarGhost}\r\n                  onClose={() => toggleLeftSidebar(false)}\r\n                  ModalProps={{\r\n                  keepMounted: true // Better open performance on mobile.\r\n                  }}\r\n                  className={classes.drawer}\r\n              >\r\n                <CustomAvatar\r\n                    link=\"https://www.creative-tim.com?ref=mdr-sidebar\"\r\n                    src=\"https://www.w3schools.com/w3images/avatar2.png\"\r\n                    text=\"Jiwon\"\r\n                  />\r\n                  {/*<Divider className={classes.divider}/>*/}\r\n                  <div className={classes.sidebarWrapper}>\r\n                    {links}\r\n                    {funcList}\r\n                  </div>\r\n              </Drawer>\r\n          </Hidden>\r\n        </div>\r\n        <Hidden smDown implementation=\"css\">\r\n          <div className={classes.leftSidebarWrapper}>\r\n            <Drawer\r\n                  anchor=\"left\"\r\n                  variant=\"permanent\"\r\n                  open\r\n                  className={classes.drawer}\r\n              >\r\n                  <CustomAvatar\r\n                    link=\"https://www.creative-tim.com?ref=mdr-sidebar\"\r\n                    src=\"https://www.w3schools.com/w3images/avatar2.png\"\r\n                    text=\"Jiwon\"\r\n                  />\r\n                  {/*<Divider className={classes.divider}/>*/}\r\n                  <div className={classes.sidebarWrapper}>\r\n                    {links}\r\n                    {funcList}\r\n                  </div>\r\n              </Drawer>\r\n          </div>\r\n        </Hidden>\r\n        <NotificationPopover\r\n          id={popOverId}\r\n          open={openNotiPopover}\r\n          onClose={handleCloseNotiPopover}\r\n          anchorEl={notiPopAnchorEl}\r\n          notifications={notifications}\r\n          onNotificationClick={onNotificationClick}\r\n          onRemoveNotification={handleRemoveNotification}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default LeftSidebar;","F:\\react\\aDentalClinic\\src\\layouts\\RightSidebar\\index.js",["252","253","254","255","256","257","258"],"import React, {useState, useContext} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport {moment} from 'moment';\r\nimport strings from '../../configs/strings';\r\n// Routes\r\nimport path from \"../../routes/path\";\r\n// @material-ui/core components\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// @material-ui/core Icons\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n// react-day-picker\r\nimport DayPicker from 'react-day-picker';\r\n\r\n// Components\r\n\r\n// Contexts\r\n\r\n\r\nimport styles from \"./jss\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst RightSidebar = (props) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    // States\r\n    const [rightSidebarOpen, setRightSidebarOpen] = useState(true);\r\n    const [calendarDate, setCalendarDate] = useState(new Date());\r\n\r\n    const toggleDrawer = () => {\r\n      setRightSidebarOpen(!rightSidebarOpen);\r\n    }\r\n\r\n    const handleSelectDate = (date) => {\r\n      alert(date);\r\n    }\r\n\r\n    return (\r\n      <div className={clsx(classes.rightSidebarWrapper, !rightSidebarOpen && classes.rightSidebarCloseWrapper)}>\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"right\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: rightSidebarOpen,\r\n                [classes.drawerClose]: !rightSidebarOpen,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: rightSidebarOpen,\r\n                    [classes.drawerClose]: !rightSidebarOpen,\r\n                }),\r\n            }}\r\n        >\r\n          <IconButton onClick={toggleDrawer} className={classes.toggleBtn}>\r\n              {rightSidebarOpen ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n          <Divider />\r\n          <div className={clsx(classes.sidebarContent, rightSidebarOpen && classes.displayBlock)}>\r\n            <DayPicker \r\n              className={classes.calendar}\r\n              onDayClick={handleSelectDate}\r\n            />\r\n            <Divider />\r\n            <div className={classes.appointmentHolder}>\r\n              <Typography component=\"h6\" variant=\"h6\">{t(strings.appointmentHolder)}</Typography>\r\n              <Box className={classes.appointmentHolderBox}>\r\n                \r\n              </Box>\r\n            </div>\r\n            <Divider />\r\n            <div className={classes.todayAppoinment}>\r\n              <Typography component=\"h6\" variant=\"h6\">{t(strings.todayAppointment)}</Typography>\r\n              <Box className={classes.todayAppoinmentBox}>\r\n                \r\n              </Box>\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default RightSidebar;","F:\\react\\aDentalClinic\\src\\components\\feature\\DashBoard\\index.js",["259"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst DashBoard = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            wqeqweqweqweqwe\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DashBoard;","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\LinkList.js",["260"],"import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// Utils\r\nimport {activeRoute} from '../../utils/routes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n      marginTop: \"0\",\r\n      paddingLeft: \"0\",\r\n      paddingTop: \"0\",\r\n      paddingBottom: \"0\",\r\n      marginBottom: \"0\",\r\n      listStyle: \"none\",\r\n      position: \"unset\"\r\n    },\r\n    listItem: {\r\n      width: '100%',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    listItemLink: {\r\n      margin: '0 auto',\r\n    },\r\n    listItemBtn: {\r\n      width: '60px',\r\n      height: '60px',\r\n      color: theme.whiteColor,\r\n      borderRadius: '5px',\r\n      backgroundColor: theme.primaryColor[2],\r\n      '& .MuiIconButton-label': {\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: '1.2em'\r\n        }\r\n      },\r\n      '&:hover': {\r\n        backgroundColor: theme.hoverBrightColor[0]\r\n      }\r\n    },\r\n    activeRoute: {\r\n        borderLeft: `4px solid ${theme.fontColor}`\r\n    }\r\n}));\r\nconst LinkList = ({links}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.list}>\r\n            {links.map((path, index) => {\r\n                return (\r\n                    <ListItem key={index} className={clsx(classes.listItem, activeRoute(path.link) && classes.activeRoute)}>\r\n                        <NavLink\r\n                            to={path.link}\r\n                            className={classes.listItemLink}\r\n                        >\r\n                            <Tooltip title={path.text} aria-label={path.text}>\r\n                              <IconButton className={classes.listItemBtn} size=\"medium\">{path.icon}</IconButton>\r\n                            </Tooltip>\r\n                        </NavLink>\r\n                    </ListItem>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n  }\r\n\r\nexport default LinkList;","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\FunctionList.js",["261"],"import React, {useState} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\n// Utils\r\nimport {disableClick} from '../../utils/general';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n      marginTop: \"0\",\r\n      paddingLeft: \"0\",\r\n      paddingTop: \"0\",\r\n      paddingBottom: \"0\",\r\n      marginBottom: \"0\",\r\n      listStyle: \"none\",\r\n      position: \"unset\"\r\n    },\r\n    listItem: {\r\n      width: '100%',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    listItemLink: {\r\n      margin: '0 auto',\r\n    },\r\n    listItemBtn: {\r\n      width: '60px',\r\n      height: '60px',\r\n      color: theme.whiteColor,\r\n      borderRadius: '5px',\r\n      backgroundColor: theme.primaryColor[2],\r\n      '& .MuiIconButton-label': {\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: '1.2em'\r\n        }\r\n      },\r\n      '&:hover': {\r\n        backgroundColor: theme.hoverBrightColor[0]\r\n      }\r\n    },\r\n}));\r\nconst FunctionList = ({functions}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.list}>\r\n            {functions.map((func, index) => {\r\n              return (\r\n                    <ListItem key={index} className={classes.listItem}>\r\n                        <NavLink\r\n                          to=\"/\"\r\n                          className={classes.listItemLink}\r\n                          onClick={disableClick}\r\n                        >\r\n                          {func}\r\n                        </NavLink>\r\n                    </ListItem>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n  }\r\n\r\nexport default FunctionList;","F:\\react\\aDentalClinic\\src\\layouts\\RightSidebar\\jss.js",["262","263"],"const sidebarStyle = (theme) => ({ \r\n    rightSidebarWrapper: {\r\n      color: theme.fontColor,\r\n      width: theme.drawerRightWidth,\r\n      flexShrink: 0,\r\n      '& .MuiSvgIcon-root': {\r\n          color: theme.fontColor\r\n      },\r\n      '& .MuiDivider-root': {\r\n        backgroundColor: theme.whiteColor,\r\n        height: '1px',\r\n        width: '90%',\r\n        margin: '0 auto'\r\n      }\r\n    },\r\n    drawer: {\r\n      '& .MuiDrawer-paper': {\r\n        backgroundColor: theme.primaryColor[0],\r\n        color: theme.fontColor,\r\n        overflow: 'hidden',\r\n      }\r\n    },\r\n    sidebarWrapper: {\r\n      position: \"relative\",\r\n      height: \"calc(100vh - 75px)\",\r\n      overflow: \"auto\",\r\n      width: theme.drawerRightWidth,\r\n      zIndex: \"4\",\r\n      overflowScrolling: \"touch\",\r\n      marginTop: '10px'\r\n    },\r\n    drawerOpen: {\r\n        width: theme.drawerRightWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.drawerRightCloseWidth,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.drawerRightCloseWidth + 10,\r\n        },\r\n    },\r\n    toggleBtn: {\r\n      borderRadius: '0px',\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: '1.7em'\r\n      } \r\n    },\r\n    rightSidebarCloseWrapper: {\r\n      width: theme.drawerRightCloseWidth,\r\n    },\r\n    sidebarContent: {\r\n      width: 0,\r\n      //display: 'none',\r\n      transition: theme.transitions.create('display', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      paddingLeft: theme.drawerRightCloseWidth + 20,\r\n      paddingRight: theme.drawerRightCloseWidth + 20,\r\n      transition: theme.transitions.create('padding', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    displayBlock: {\r\n      width: '100%',\r\n      //display: 'block',\r\n      transition: theme.transitions.create('display', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      transition: theme.transitions.create('padding', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    calendar: {\r\n      fontSize: '0.93em',\r\n      backgroundColor: theme.whiteColor,\r\n      color: theme.blackColor,\r\n    },\r\n    appointmentHolder: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0),\r\n      textAlign: 'center',\r\n    },\r\n    appointmentHolderBox: {\r\n      width: '100%',\r\n      minHeight: '100px',\r\n      backgroundColor: theme.whiteColor,\r\n      borderRadius: '10px',\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    todayAppoinment: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0),\r\n      textAlign: 'center',\r\n    },\r\n    todayAppoinmentBox: {\r\n      width: '100%',\r\n      minHeight: '100px',\r\n      backgroundColor: theme.whiteColor,\r\n      borderRadius: '10px',\r\n      marginTop: theme.spacing(1)\r\n    }\r\n  });\r\n  \r\nexport default sidebarStyle;  ","F:\\react\\aDentalClinic\\src\\configs\\strings.js",["264"],"\r\nconst appointment = \"Appointment\";\r\nconst patient = \"Patient\";\r\nconst report = \"Report\";\r\nconst documents = \"Documents\";\r\nconst setting = \"Setting\";\r\nconst notifications = \"Notifications\";\r\nconst removeNotification = \"Remove Notification\";\r\nconst noNotificationToDisplay = \"No notifications to display yet\";\r\nconst appointmentHolder = \"Appointment holder\";\r\nconst todayAppointment = \"Today's Appoinment\";\r\n\r\nconst search=\"Search\";\r\n//menu bar\r\nconst providers=\"Providers\";\r\nconst practices=\"Practices\";\r\nconst staffs=\"Staffs\";\r\nconst procedure=\"Procedure\";\r\nconst chairs=\"Chairs\";\r\nconst referral=\"Referral\";\r\nconst schedule=\"Schedule\";\r\nconst authentication=\"Authentication\";\r\nconst document=\"Document\";\r\n\r\n//provider\r\nconst index=\"#\";\r\nconst id=\"ID\";\r\nconst fullname=\"Fullname\";\r\nconst birth=\"Birth\";\r\nconst gender=\"Gender\";\r\nconst address=\"Address\";\r\n//procedure\r\nconst code=\"Code\";\r\nconst fee=\"Fee\";\r\nconst ins=\"INS\";\r\nconst duration=\"Duration\";\r\nconst type=\"Type\";\r\nconst abbr=\"ABBR\";\r\nconst description=\"Description\";\r\n// Common\r\nconst yes = \"Yes\";\r\nconst no = \"No\";\r\nconst ok = \"OK\";\r\nconst cancel = \"Cancel\";\r\nconst logout = \"Log out\";\r\nconst login = \"Log in\";\r\n\r\n// Messages\r\n\r\n    // Success Messages\r\n\r\n    // Error Messages\r\n\r\n    // Confirm Messages\r\n\r\n// Context Actions\r\nconst setTheme = \"Set-Theme\";\r\n\r\n// Login page\r\nconst loginYourAccount = \"<strong>Login</strong> your account\";\r\nconst username = \"Username\";\r\nconst password = \"Password\";\r\nconst continueLogin = \"Continue\"; // \"continue\" in not valid name\r\nconst forgotPassword = \"Forgot password?\";\r\nconst dontHaveAccount = \"Don't have an account? Sign Up\"\r\nconst copyrightBy = \"Copyright by\";\r\n\r\nexport default {\r\n    appointment,\r\n    patient,\r\n    report,\r\n    documents,\r\n    setting,\r\n    notifications,\r\n    removeNotification,\r\n    noNotificationToDisplay,\r\n    appointmentHolder,\r\n    todayAppointment,\r\n    // Common\r\n    yes,\r\n    no,\r\n    ok,\r\n    cancel,\r\n    login,\r\n    logout,\r\n    // Messages\r\n    // Success Messages\r\n    // Error Messages\r\n    // Confirm Messages\r\n    // Context Actions\r\n    setTheme,\r\n    // Login page\r\n    loginYourAccount,\r\n    username,\r\n    password,\r\n    continueLogin,\r\n    forgotPassword,\r\n    dontHaveAccount,\r\n    copyrightBy,\r\n    providers,\r\n    staffs,\r\n    practices,\r\n    document,\r\n    authentication,\r\n    referral,\r\n    procedure,\r\n    chairs,\r\n    schedule,\r\n    index,\r\n    fullname,\r\n    id,\r\n    birth,\r\n    gender,\r\n    address,\r\n    search,\r\n    code,\r\n    fee,\r\n    ins,\r\n    duration,\r\n    type,\r\n    abbr,\r\n    description,\r\n    \r\n};","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\Popover.js",["265"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core \r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Components\r\nimport NotificationFuncPopover from './NotificationFuncPopover';\r\n\r\n// @material-ui/core Icons\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\r\n\r\n// Utils\r\nimport ConvertDateTimeUtils from '../../../utils/datetimes/convertDateTimes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: theme.notificationPopoverWidth + 'px',\r\n    minHeight: theme.notificationPopoverMinHeight + 'px',\r\n    maxHeight: theme.notificationPopoverMaxHeight + 'px',\r\n  },\r\n  list: {\r\n    width: '100%'\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  title: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingTop: theme.spacing(2),\r\n    fontWeight: 600\r\n  },\r\n  listItem: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      backgroundColor: theme.grayColor[11]\r\n    },\r\n    '&:hover .MuiSvgIcon-root': {\r\n      visibility: 'visible'\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '1.5em'\r\n    },\r\n  },\r\n  listItemTextNotRead: {\r\n    '& .MuiListItemText-secondary': {\r\n      color: theme.primaryColor[0]\r\n    }\r\n  },\r\n  listItemFunction: {\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '1em',\r\n      visibility: 'hidden',\r\n    },\r\n  },\r\n  noNotiDisplayWrapper: {\r\n    padding: theme.spacing(3),\r\n    fontStyle: 'italic',\r\n    textAlign: 'center',\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '2.5em',\r\n    },\r\n  }\r\n}));\r\n\r\nconst NotificationPopover = ({id, open, onClose, anchorEl, notifications, onNotificationClick, onRemoveNotification}) => {\r\n  const classes = useStyles();\r\n  const {t, i18n } = useTranslation();\r\n\r\n  const [openNotiFuncPopover, setOpenNotiFuncPopover] = useState(false);\r\n  const [notiFuncPopAnchorEl, setNotiFuncopAnchorEl] = useState(null);\r\n  const popOverId = openNotiFuncPopover? \"notification-function-popover\" : undefined;\r\n\r\n  // Notification to display Popover\r\n  const [chosenNotiFunc, setChosenNotiFunc] = useState(-1);\r\n\r\n  // Notifications Function Popover\r\n  const handleOpenNotiFuncPopover = (evt, notiId) => {\r\n    setNotiFuncopAnchorEl(evt.currentTarget);\r\n    setChosenNotiFunc(notiId);\r\n    setOpenNotiFuncPopover(true);\r\n  }\r\n\r\n  const handleCloseNotiFuncPopover = () => {\r\n    setNotiFuncopAnchorEl(null);\r\n    setChosenNotiFunc(-1);\r\n    setOpenNotiFuncPopover(false);\r\n  }\r\n\r\n  const handleRemoveNotification = () => {\r\n    onRemoveNotification(chosenNotiFunc);\r\n    handleCloseNotiFuncPopover();\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n        id={id}\r\n        open={open}\r\n        onClose={onClose}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        className={classes.root}\r\n    >\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h5\"\r\n          className={classes.title}\r\n          >\r\n          {t(strings.notifications)}\r\n        </Typography>\r\n        <List className={classes.list}>\r\n          {(notifications.length > 0)? \r\n\r\n          \r\n            notifications.map((notification, index) => {\r\n              return (\r\n                <React.Fragment>\r\n                  <ListItem alignItems=\"flex-start\" className={classes.listItem} onClick={(evt) => onNotificationClick(notification.id)}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <PersonIcon/>\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText \r\n                      className={clsx(!notification.isRead && classes.listItemTextNotRead)}\r\n                      primary={\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {notification.content}\r\n                        </Typography>\r\n                      } \r\n                      secondary={ConvertDateTimeUtils.formatDate(notification.date, \"MMMM DD, YYYY\") || '...'} />\r\n                      <Typography className={classes.listItemFunction} variant=\"div\" component=\"div\">\r\n                        <IconButton onClick={(evt) => handleOpenNotiFuncPopover(evt, notification.id)}>\r\n                          <MoreVertIcon/>\r\n                        </IconButton>\r\n                      </Typography>\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                </React.Fragment>\r\n              )\r\n            })\r\n           : \r\n           <div className={classes.noNotiDisplayWrapper}>\r\n            <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\">\r\n              <AddAlertIcon/> <br/>\r\n              {t(strings.noNotificationToDisplay)} ...\r\n            </Typography>\r\n           </div>\r\n          }\r\n        </List>\r\n        <NotificationFuncPopover\r\n          id={popOverId}\r\n          open={openNotiFuncPopover}\r\n          onClose={handleCloseNotiFuncPopover}\r\n          anchorEl={notiFuncPopAnchorEl}\r\n          onRemoveNotification={handleRemoveNotification}\r\n        />\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default NotificationPopover;","F:\\react\\aDentalClinic\\src\\components\\feature\\DashBoard\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\index.js",["266","267","268","269","270","271"],"import React, {useState, useRef} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\n// @material-ui/core Icons\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\n\r\n// Components\r\n\r\n// Utils\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItemBtn: {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: theme.whiteColor,\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.primaryColor[2],\r\n        '& .MuiIconButton-label': {\r\n          '& .MuiSvgIcon-root': {\r\n            fontSize: '1.2em'\r\n          }\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: theme.hoverBrightColor[0]\r\n        }\r\n    },\r\n}));\r\nconst Notification = ({onOpen, popOverId, notiCount}) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Tooltip title={t(strings.notifications)} aria-label={t(strings.notifications)}>\r\n            <IconButton className={classes.listItemBtn} size=\"medium\" onClick={(evt) => onOpen(evt)} aria-describedby={popOverId}>\r\n              <Badge badgeContent={notiCount} max={999} color=\"secondary\">\r\n                <NotificationsActiveIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default Notification;","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationFuncPopover.js",["272","273"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core \r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemAvatar';\r\n\r\n// @material-ui/core Icons\r\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiSvgIcon-root': {\r\n        fontSize: '2em'\r\n    }\r\n  }\r\n}));\r\n\r\nconst NotificationPopover = ({id, open, onClose, anchorEl, onRemoveNotification}) => {\r\n  const classes = useStyles();\r\n  const {t, i18n } = useTranslation();\r\n\r\n  return (\r\n    <Popover\r\n        id={id}\r\n        open={open}\r\n        onClose={onClose}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        className={classes.root}\r\n    >\r\n        <List className={classes.list}>\r\n            <ListItem button onClick={() => onRemoveNotification()}>\r\n                <ListItemIcon>\r\n                    <CancelPresentationIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={t(strings.removeNotification)} />\r\n            </ListItem>\r\n        </List>\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default NotificationPopover;","F:\\react\\aDentalClinic\\src\\components\\common\\CustomAvatar\\index.js",["274","275"],"import React, {useState} from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport styles from \"./jss\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst CustomAvatar = ({link, src, text, classes}) => {\r\n    let inClasses = useStyles();\r\n    if (classes){\r\n        inClasses = Object.assign(inClasses, classes);\r\n    }\r\n\r\n    return (\r\n        <div className={inClasses.avatarWrapper}>\r\n            <a\r\n                href={link}\r\n                target=\"_blank\">\r\n                <Avatar alt=\"Jiwon\" src={src} className={inClasses.avatarLarge}></Avatar>\r\n                <div className={inClasses.avatarText}>{text}</div>\r\n            </a>\r\n        </div>\r\n    );\r\n  }\r\n\r\nexport default CustomAvatar;","F:\\react\\aDentalClinic\\src\\utils\\datetimes\\convertDateTimes.js",["276"],"import moment from 'moment';\r\n\r\nconst parseDate = (dateStr, formatStr, isStrict) => {\r\n    isStrict = isStrict || true;\r\n    const d = moment(dateStr, formatStr, isStrict);\r\n    if (!d._isValid){\r\n        return null;\r\n    };\r\n    return d._d;\r\n}\r\n\r\nconst formatDate = (date, formatStr) => {\r\n    return moment(date).format(formatStr);\r\n}\r\n\r\nconst formatDateStr = (dateStr, dateFormatStr, outFormatStr) => {\r\n    const d = moment(dateStr, dateFormatStr, true);\r\n    if (!d._isValid){\r\n        return \"\";\r\n    };\r\n    return d.format(outFormatStr);\r\n}\r\n\r\nexport default {\r\n    parseDate,\r\n    formatDate,\r\n    formatDateStr\r\n}","F:\\react\\aDentalClinic\\src\\utils\\general\\index.js",["277"],"const disableClick = (evt) => {\r\n    evt.preventDefault();\r\n}\r\n\r\nexport {disableClick};\r\n\r\nexport default {\r\n    disableClick\r\n}","F:\\react\\aDentalClinic\\src\\utils\\routes\\index.js",["278"]," // verifies if routeName is the one active (in browser input)\r\nconst activeRoute = (routeName) => {\r\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\r\n}\r\n\r\nexport {activeRoute};\r\n\r\nexport default {\r\n    activeRoute: activeRoute\r\n}","F:\\react\\aDentalClinic\\src\\components\\common\\CustomAvatar\\jss.js",[],"F:\\react\\aDentalClinic\\src\\utils\\colors\\index.js",["279","280"],"// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n\r\nimport { FormHelperText } from \"@material-ui/core\";\r\n\r\n// #############################\r\nconst hexToRgb = input => {\r\n    input = input + \"\";\r\n    input = input.replace(\"#\", \"\");\r\n    let hexRegex = /[0-9A-Fa-f]/g;\r\n    if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n      throw new Error(\"input is not a valid hex color.\");\r\n    }\r\n    if (input.length === 3) {\r\n      let first = input[0];\r\n      let second = input[1];\r\n      let last = input[2];\r\n      input = first + first + second + second + last + last;\r\n    }\r\n    input = input.toUpperCase();\r\n    let first = input[0] + input[1];\r\n    let second = input[2] + input[3];\r\n    let last = input[4] + input[5];\r\n    return (\r\n      parseInt(first, 16) +\r\n      \", \" +\r\n      parseInt(second, 16) +\r\n      \", \" +\r\n      parseInt(last, 16)\r\n    );\r\n  };\r\n\r\nexport {hexToRgb};\r\nexport default {\r\n    hexToRgb: hexToRgb\r\n}","F:\\react\\aDentalClinic\\src\\themes\\lightTheme.js",["281"],"/* Default theme properties \r\n    (Not Allowed Names) \r\n*/\r\n// breakpoints\r\n// direction\r\n// mixins\r\n// overrides\r\n// palette\r\n// props\r\n// shadows\r\n// typography\r\n// spacing\r\n// transitions\r\n// zIndex\r\n\r\nimport {hexToRgb} from '../utils/colors';\r\n  \r\n  const drawerLeftWidth = 120;\r\n  const drawerRightWidth = 240;\r\n  const drawerRightCloseWidth = 50;\r\n  const notificationPopoverWidth = 420;\r\n  const notificationPopoverMinHeight = 300;\r\n  const notificationPopoverMaxHeight = 600;\r\n\r\n  const transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n  };\r\n  \r\n  const fontColor = \"#ffffff\";\r\n  const primaryColor = [\"#4042E2\", \"#5658e5\", \"#6c6ee9\", \"#8284ec\"];\r\n  const secondaryColor = [\"#dc004e\", \"#f50057\", \"#ff1065\", \"#ff2975\"];\r\n  const warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\n  const dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\n  const successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\n  const infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\n  const roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\n  const grayColor = [\r\n    \"#999\",\r\n    \"#777\",\r\n    \"#3C4858\",\r\n    \"#AAAAAA\",\r\n    \"#D2D2D2\",\r\n    \"#DDD\",\r\n    \"#b4b4b4\",\r\n    \"#555555\",\r\n    \"#333\",\r\n    \"#a9afbb\",\r\n    \"#eee\",\r\n    \"#e7e7e7\"\r\n  ];\r\n  const hoverBrightColor = [\"#1991a7\", \"#1ca0b8\", \"#1eaec9\", \"#21bdda\"];\r\n  const hoverDarkColor = [\"#551796\", \"#5e19a7\", \"#681cb8\", \"#711ec9\"];\r\n  const blackColor = \"#000000\";\r\n  const whiteColor = \"#ffffff\";\r\n  \r\n  const boxShadow = {\r\n    boxShadow:\r\n      \"0 10px 30px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 4px 25px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\"\r\n  };\r\n  \r\n  const primaryBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const infoBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const successBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const warningBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const dangerBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const roseBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  \r\n  const warningCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n    ...warningBoxShadow\r\n  };\r\n  const successCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n    ...successBoxShadow\r\n  };\r\n  const dangerCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n    ...dangerBoxShadow\r\n  };\r\n  const infoCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n    ...infoBoxShadow\r\n  };\r\n  const primaryCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n    ...primaryBoxShadow\r\n  };\r\n  const roseCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n    ...roseBoxShadow\r\n  };\r\n  \r\n  const defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n      \"0 10px 20px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 3px 20px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n  };\r\n\r\n  const title = {\r\n    color: grayColor[2],\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  };\r\n  \r\nexport default {\r\n  hexToRgb,\r\n  drawerLeftWidth,\r\n  drawerRightWidth,\r\n  drawerRightCloseWidth,\r\n  notificationPopoverWidth,\r\n  notificationPopoverMinHeight,\r\n  notificationPopoverMaxHeight,\r\n  transition,\r\n  boxShadow,\r\n  fontColor,\r\n  primaryColor,\r\n  secondaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  hoverBrightColor,\r\n  hoverDarkColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n};  ","F:\\react\\aDentalClinic\\src\\contexts\\theme-context.js",["282","283"],"import React, { createContext, useReducer } from \"react\";\r\nimport lightTheme from \"../themes/lightTheme\";\r\nimport darkTheme from \"../themes/darkTheme\";\r\n\r\n// Utils\r\nimport ThemeType from '../utils/types/Theme';\r\n\r\n// @material-ui/core\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst initState = {\r\n  theme: lightTheme\r\n};\r\nconst themeStore = createContext(initState);\r\nconst { Provider } = themeStore;\r\n\r\nconst ThemeStateProvider = ({ children }) => {\r\n  const [themeState, dispatchTheme] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"Set-Theme\":\r\n        switch(action.theme){\r\n          case ThemeType.LIGHT:\r\n            return {theme: lightTheme};\r\n          case ThemeType.DARK:\r\n            return {theme: darkTheme}\r\n        }\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initState);\r\n  return <Provider value={{ themeState, dispatchTheme }}>\r\n          <ThemeProvider theme={createMuiTheme(themeState? themeState.theme : lightTheme)}>\r\n            {children}\r\n          </ThemeProvider>\r\n        </Provider>;\r\n};\r\n\r\nexport { themeStore, ThemeStateProvider };","F:\\react\\aDentalClinic\\src\\themes\\darkTheme.js",["284"],"/* Default theme properties \r\n    (Not Allowed Names) \r\n*/\r\n// breakpoints\r\n// direction\r\n// mixins\r\n// overrides\r\n// palette\r\n// props\r\n// shadows\r\n// typography\r\n// spacing\r\n// transitions\r\n// zIndex\r\n\r\nimport {hexToRgb} from '../utils/colors';\r\n  \r\n  const drawerLeftWidth = 120;\r\n  const drawerRightWidth = 240;\r\n  const drawerRightCloseWidth = 50;\r\n  const notificationPopoverWidth = 420;\r\n  const notificationPopoverMinHeight = 300;\r\n  const notificationPopoverMaxHeight = 600;\r\n\r\n  const transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n  };\r\n  \r\n  const fontColor = \"#000000\";\r\n  const primaryColor = [\"#4042E2\", \"#5658e5\", \"#6c6ee9\", \"#8284ec\"];\r\n  const secondaryColor = [\"#dc004e\", \"#f50057\", \"#ff1065\", \"#ff2975\"];\r\n  const warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\n  const dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\n  const successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\n  const infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\n  const roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\n  const grayColor = [\r\n    \"#999\",\r\n    \"#777\",\r\n    \"#3C4858\",\r\n    \"#AAAAAA\",\r\n    \"#D2D2D2\",\r\n    \"#DDD\",\r\n    \"#b4b4b4\",\r\n    \"#555555\",\r\n    \"#333\",\r\n    \"#a9afbb\",\r\n    \"#eee\",\r\n    \"#e7e7e7\"\r\n  ];\r\n  const hoverBrightColor = [\"#1991a7\", \"#1ca0b8\", \"#1eaec9\", \"#21bdda\"];\r\n  const hoverDarkColor = [\"#551796\", \"#5e19a7\", \"#681cb8\", \"#711ec9\"];\r\n  const blackColor = \"#000000\";\r\n  const whiteColor = \"#ffffff\";\r\n  \r\n  const boxShadow = {\r\n    boxShadow:\r\n      \"0 10px 30px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 4px 25px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\"\r\n  };\r\n  \r\n  const primaryBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const infoBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const successBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const warningBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const dangerBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const roseBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  \r\n  const warningCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n    ...warningBoxShadow\r\n  };\r\n  const successCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n    ...successBoxShadow\r\n  };\r\n  const dangerCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n    ...dangerBoxShadow\r\n  };\r\n  const infoCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n    ...infoBoxShadow\r\n  };\r\n  const primaryCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n    ...primaryBoxShadow\r\n  };\r\n  const roseCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n    ...roseBoxShadow\r\n  };\r\n  \r\n  const defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n      \"0 10px 20px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 3px 20px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n  };\r\n\r\n  const title = {\r\n    color: grayColor[2],\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  };\r\n  \r\nexport default {\r\n  hexToRgb,\r\n  drawerLeftWidth,\r\n  drawerRightWidth,\r\n  drawerRightCloseWidth,\r\n  notificationPopoverWidth,\r\n  notificationPopoverMinHeight,\r\n  notificationPopoverMaxHeight,\r\n  transition,\r\n  boxShadow,\r\n  fontColor,\r\n  primaryColor,\r\n  secondaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  hoverBrightColor,\r\n  hoverDarkColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n};  ","F:\\react\\aDentalClinic\\src\\utils\\types\\Theme.js",["285"],"export default {\r\n    LIGHT: 0,\r\n    DARK: 1\r\n}","F:\\react\\aDentalClinic\\src\\components\\feature\\LoginPage\\index.js",["286","287","288","289","290","291","292","293","294"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\n\r\n// Component\r\nimport Footer from '../../../layouts/Footer';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst LoginPage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container component=\"main\" component={Paper} className={classes.root}>\r\n                <CssBaseline />\r\n                <Grid container className={classes.loginHeader}>\r\n                    <div className={classes.brandContainer}>\r\n                        <img src={logoADC} alt=\"Logo\" className={classes.logo}/>\r\n                        <div className={classes.brandName}>\r\n                            A Dental Clinic\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container className={classes.loginContainer}>\r\n                    <Grid item xs={12} sm={8} md={5} elevation={6} square>\r\n                        <div className={classes.paper}>\r\n                            <Typography component=\"h1\" variant=\"h5\" className={classes.loginTitle}>\r\n                                <Trans i18nKey={strings.loginYourAccount}>\r\n                                </Trans>\r\n                            </Typography>\r\n                            <form className={classes.form} noValidate>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <AccountBox className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"username\"\r\n                                            label={t(strings.username)}\r\n                                            name=\"username\"\r\n                                            autoComplete=\"username\"\r\n                                            autoFocus\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <Lock className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label={t(strings.password)}\r\n                                            type={values.showPassword ? 'text' : 'password'}\r\n                                            value={values.password}\r\n                                            onChange={handleChange('password')}\r\n                                            id=\"password\"\r\n                                            autoComplete=\"current-password\"\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    className={classes.btnToggleVisibility}\r\n                                                >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                            }}\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                                /> */}\r\n                                <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                >\r\n                                {t(strings.continueLogin)}\r\n                                </Button>\r\n                                <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.forgotPassword)}\r\n                                    </Link>\r\n                                </Grid>\r\n                                {/* <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.dontHaveAccount)}\r\n                                    </Link>\r\n                                </Grid> */}\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                </Grid>\r\n                <Footer/>\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","F:\\react\\aDentalClinic\\src\\components\\common\\CustomInput\\CustomInput.js",[],"F:\\react\\aDentalClinic\\src\\components\\common\\CustomInput\\customInputStyle.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\Footer\\index.js",["295","296","297","298"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Component\r\nimport Copyright from './Copyright';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        display: \"flex\",\r\n        height: \"20vh\",\r\n    },\r\n    copyrightBox : {\r\n      alignSelf: \"flex-end\",\r\n      marginBottom: \"2rem\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    copyright : {\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"bold\",\r\n    }\r\n  }));\r\n\r\nconst Footer = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.footer}>\r\n            <Box mt={5} className={classes.copyrightBox}>\r\n                <Copyright />\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Footer;","F:\\react\\aDentalClinic\\src\\layouts\\Footer\\Copyright.js",["299","300","301"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport strings from '../../configs/strings';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    copyright : {\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"bold\",\r\n    }\r\n  }));\r\n\r\nconst Copyright = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.copyright}>\r\n        {t(strings.copyrightBy)} {' '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Hcmus student\r\n        </Link>\r\n      </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright;","F:\\react\\aDentalClinic\\src\\components\\feature\\LoginPage\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Providers\\index.js",["302","303","304"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../MenuBar\";\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\nconst TablePaginationActions=(props)=> {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\nconst Providers = () => {\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            <MenuBar/>\r\n            \r\n            <div style={{background:darkTheme.whiteColor,marginTop:\"30px\"}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography style={{marginLeft:\"30px\"}}variant=\"h4\">\r\n                            {strings.providers}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl style={{width:\"200px\",height:\"50px\"}}variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={strings.search}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon style={{cursor:\"pointer\"}} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton style={{margin:\"10px\"}} >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton style={{margin:\"10px\"}}>\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.itemIndex} align=\"left\">\r\n                                {strings.index}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemID} align=\"left\">\r\n                                {strings.id}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemFullname} align=\"left\">\r\n                                {strings.fullname}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemBirth} align=\"left\">\r\n                                {strings.birth}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemGender} align=\"left\">\r\n                                {strings.gender}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemAddress} align=\"left\">\r\n                                {strings.address}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell className={classes.itemIndexContent} align=\"left\">\r\n                                    {index+1}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemIDContent} align=\"left\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemFullnameContent} align=\"left\">\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemBirthContent} align=\"left\">\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemGenderContent} align=\"left\">\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemAddressContent} align=\"left\">\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    \r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Providers;","F:\\react\\aDentalClinic\\src\\components\\feature\\Providers\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\MenuBar\\index.js",["305","306","307","308","309","310","311","312","313","314","315"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,Grid } from '@material-ui/core';\r\n\r\n//import image\r\nimport DentalProvider from \"../../../assets/images/dentalProvider.png\";\r\nimport DentalPractice from \"../../../assets/images/dentalPractice.png\";\r\nimport DentalStaff from \"../../../assets/images/dentalStaff.png\";\r\nimport DentalProcedure from \"../../../assets/images/dentalProcedure.png\";\r\nimport DentalChair from \"../../../assets/images/dentalChair.png\";\r\nimport DentalReferral from \"../../../assets/images/dentalReferral.png\";\r\nimport DentalSchedule from \"../../../assets/images/calendar.png\";\r\nimport Authentication from \"../../../assets/images/authentication.png\";\r\nimport Document from \"../../../assets/images/document.png\";\r\n\r\nimport MenuBarItem from \"./MenuBarItem\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\nimport strings from \"../../../configs/strings\";\r\n\r\nimport styles from \"./jss\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst MenuBar=()=>{\r\n    const classes = useStyles(darkTheme);\r\n    return(\r\n        <div className={classes.container}>\r\n                <Grid container spacing={2}  >\r\n\r\n                    <Grid item  className={classes.menuItemFirst}>\r\n                        \r\n                        <Container className={classes.menuItem} \r\n\r\n                            >\r\n                            <NavLink\r\n                                to=\"/providers\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalProvider}></img>\r\n                                <Typography variant=\"body2\"  >\r\n                                    {strings.providers}\r\n                                </Typography>\r\n                            </NavLink>\r\n                        </Container>  \r\n                        \r\n                                  \r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/practices\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalPractice}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.practices}\r\n                                </Typography>\r\n                            </NavLink>\r\n                        </Container> \r\n                        \r\n                        \r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/staffs\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalStaff}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.staffs}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                        \r\n                               \r\n                                \r\n                        \r\n                    </Grid>\r\n                \r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/procedure\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalProcedure}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.procedure}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                                \r\n                        \r\n                    </Grid>    \r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/chairs\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalChair}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.chairs}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                                \r\n                        \r\n                    </Grid>  \r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/referral\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalReferral}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.referral}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>                        \r\n                                \r\n                        \r\n                    </Grid>    \r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/schedule\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={DentalSchedule}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.schedule}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                                \r\n                        \r\n                    </Grid>  \r\n                    <Grid item >\r\n                    <Container className={classes.menuItemAuthentication} >\r\n                        <NavLink\r\n                            to=\"/authentication\"\r\n                            className={classes.link}\r\n                        >\r\n                            <img className={classes.menuItemImage} src={Authentication}></img>\r\n                            <Typography variant=\"body2\" align=\"left\" >\r\n                                    {strings.authentication}\r\n                            </Typography>\r\n                        </NavLink>\r\n                            \r\n                            \r\n                    </Container>\r\n                    {/* <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/authentication\"\r\n                                // className={classes.linkAuthentication}\r\n                                style={{fontSize:\"10px\"}}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={Authentication}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.authentication}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container> */}\r\n                                \r\n                        \r\n                    </Grid>  \r\n                    {/* <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <img className={classes.menuItemImage} src={Authentication}></img>\r\n                            <Typography variant=\"subtitle2\" style={{fontSize:\"13px\"}} align='center'>\r\n                                        Authentication\r\n                            </Typography>\r\n                            \r\n                        </Container>        \r\n                        \r\n                    </Grid>   */}\r\n                    <Grid item >\r\n                        <Container className={classes.menuItem} >\r\n                            <NavLink\r\n                                to=\"/document\"\r\n                                className={classes.link}\r\n                                activeClassName={classes.activeLink}\r\n\r\n                            >\r\n                                <img className={classes.menuItemImage} src={Document}></img>\r\n                                <Typography variant=\"subtitle2\" >\r\n                                    {strings.document}\r\n                                </Typography> \r\n                            </NavLink>\r\n                        </Container>\r\n                                \r\n                        \r\n                    </Grid>\r\n                         \r\n                </Grid>\r\n                \r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default withRouter(MenuBar);","F:\\react\\aDentalClinic\\src\\components\\feature\\MenuBar\\MenuBarItem\\index.js",["316","317"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst MenuBarItem=()=>{\r\n    return(\r\n        <Container >\r\n                \r\n        \r\n            </Container>\r\n            \r\n    )\r\n}\r\n\r\nexport default MenuBarItem;\r\n","F:\\react\\aDentalClinic\\src\\components\\feature\\MenuBar\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Staffs\\index.js",["318","319","320"],"F:\\react\\aDentalClinic\\src\\components\\feature\\Staffs\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Procedure\\index.js",["321","322","323"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../MenuBar\";\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(code,fee,ins,duration,type,abbr,description)=>{\r\n    return {code,fee,ins,duration,type,abbr,description};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"1000\", \"ins\", \"30\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712321', \"2000\", \"ins\", \"40\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712322', \"3000\", \"ins\", \"50\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712323', \"4000\", \"ins\", \"60\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712324', \"5000\", \"ins\", \"70\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712325', \"6000\", \"ins\", \"80\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712326', \"7000\", \"ins\", \"90\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712327', \"8000\", \"ins\", \"11\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712328', \"9000\", \"ins\", \"33\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712329', \"10000\", \"ins\", \"22\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712330', \"11100\", \"ins\", \"1111\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712331', \"12200\", \"ins\", \"99\", \"1\",\"ABBR\",\"Description\"),\r\n\r\n\r\n];\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\nconst TablePaginationActions=(props)=> {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\nconst Procedure = () => {\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            <MenuBar/>\r\n            \r\n            <div style={{background:darkTheme.whiteColor,marginTop:\"30px\"}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography style={{marginLeft:\"30px\"}}variant=\"h4\">\r\n                            {strings.procedure}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl style={{width:\"200px\",height:\"50px\"}}variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={strings.search}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon style={{cursor:\"pointer\"}} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton style={{margin:\"10px\"}} >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton style={{margin:\"10px\"}}>\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.itemIndex} align=\"left\">\r\n                                {strings.index}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemCode} align=\"left\">\r\n                                {strings.code}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemFee} align=\"left\">\r\n                                {strings.fee}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemINS} align=\"left\">\r\n                                {strings.ins}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemDuration} align=\"left\">\r\n                                {strings.duration}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemType} align=\"left\">\r\n                                {strings.type}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemABBR} align=\"left\">\r\n                                {strings.abbr}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemDescription} align=\"left\">\r\n                                {strings.description}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell className={classes.itemIndexContent} align=\"left\">\r\n                                    {index+1}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemCodeContent} align=\"left\">\r\n                                    {row.code}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemFeeContent} align=\"left\">\r\n                                    {row.fee}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemINSContent} align=\"left\">\r\n                                    {row.ins}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemDurationContent} align=\"left\">\r\n                                    {row.duration}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemTypeContent} align=\"left\">\r\n                                    {row.type}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemABBRContent} align=\"left\">\r\n                                    {row.abbr}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemDescriptionContent} align=\"left\">\r\n                                    {row.description}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    \r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Procedure;","F:\\react\\aDentalClinic\\src\\components\\feature\\Procedure\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Referral\\index.js",["324","325","326"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../MenuBar\";\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\nconst TablePaginationActions=(props)=> {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  };\r\nconst Referral = () => {\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            <MenuBar/>\r\n            \r\n            <div style={{background:darkTheme.whiteColor,marginTop:\"30px\"}}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography style={{marginLeft:\"30px\"}}variant=\"h4\">\r\n                            {strings.referral}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl style={{width:\"200px\",height:\"50px\"}}variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={strings.search}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon style={{cursor:\"pointer\"}} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton style={{margin:\"10px\"}} >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton style={{margin:\"10px\"}}>\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.itemIndex} align=\"left\">\r\n                                {strings.index}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemID} align=\"left\">\r\n                                {strings.id}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemFullname} align=\"left\">\r\n                                {strings.fullname}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemBirth} align=\"left\">\r\n                                {strings.birth}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemGender} align=\"left\">\r\n                                {strings.gender}\r\n                            </TableCell>\r\n                            <TableCell className={classes.itemAddress} align=\"left\">\r\n                                {strings.address}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell className={classes.itemIndexContent} align=\"left\">\r\n                                    {index+1}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemIDContent} align=\"left\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell className={classes.fullnamContente} align=\"left\">\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemBirthContent} align=\"left\">\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemGenderContent} align=\"left\">\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemAddressContent} align=\"left\">\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    \r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Referral;","F:\\react\\aDentalClinic\\src\\components\\feature\\Referral\\jss.js",[],{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","severity":1,"message":"332","line":2,"column":3,"nodeType":"333","messageId":"334","endLine":2,"endColumn":13},{"ruleId":"331","severity":1,"message":"335","line":4,"column":8,"nodeType":"333","messageId":"334","endLine":4,"endColumn":12},{"ruleId":"331","severity":1,"message":"336","line":10,"column":8,"nodeType":"333","messageId":"334","endLine":10,"endColumn":18},{"ruleId":"331","severity":1,"message":"337","line":14,"column":10,"nodeType":"333","messageId":"334","endLine":14,"endColumn":24},{"ruleId":"331","severity":1,"message":"338","line":14,"column":26,"nodeType":"333","messageId":"334","endLine":14,"endColumn":39},{"ruleId":"331","severity":1,"message":"339","line":6,"column":8,"nodeType":"333","messageId":"334","endLine":6,"endColumn":19},{"ruleId":"331","severity":1,"message":"340","line":14,"column":27,"nodeType":"333","messageId":"334","endLine":14,"endColumn":42},{"ruleId":"341","severity":1,"message":"342","line":1,"column":1,"nodeType":"343","endLine":33,"endColumn":2},{"ruleId":"341","severity":1,"message":"342","line":1,"column":1,"nodeType":"343","endLine":33,"endColumn":2},{"ruleId":"331","severity":1,"message":"344","line":5,"column":8,"nodeType":"333","messageId":"334","endLine":5,"endColumn":17},{"ruleId":"331","severity":1,"message":"345","line":2,"column":8,"nodeType":"333","messageId":"334","endLine":2,"endColumn":12},{"ruleId":"331","severity":1,"message":"346","line":35,"column":15,"nodeType":"333","messageId":"334","endLine":35,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":115,"column":29,"nodeType":"349","messageId":"350","endLine":115,"endColumn":31},{"ruleId":"347","severity":1,"message":"351","line":123,"column":79,"nodeType":"349","messageId":"350","endLine":123,"endColumn":81},{"ruleId":"331","severity":1,"message":"332","line":1,"column":26,"nodeType":"333","messageId":"334","endLine":1,"endColumn":36},{"ruleId":"331","severity":1,"message":"352","line":4,"column":9,"nodeType":"333","messageId":"334","endLine":4,"endColumn":15},{"ruleId":"331","severity":1,"message":"353","line":7,"column":8,"nodeType":"333","messageId":"334","endLine":7,"endColumn":12},{"ruleId":"331","severity":1,"message":"354","line":9,"column":22,"nodeType":"333","messageId":"334","endLine":9,"endColumn":30},{"ruleId":"331","severity":1,"message":"346","line":34,"column":15,"nodeType":"333","messageId":"334","endLine":34,"endColumn":19},{"ruleId":"331","severity":1,"message":"355","line":38,"column":12,"nodeType":"333","messageId":"334","endLine":38,"endColumn":24},{"ruleId":"331","severity":1,"message":"356","line":38,"column":26,"nodeType":"333","messageId":"334","endLine":38,"endColumn":41},{"ruleId":"331","severity":1,"message":"354","line":2,"column":22,"nodeType":"333","messageId":"334","endLine":2,"endColumn":30},{"ruleId":"331","severity":1,"message":"357","line":1,"column":16,"nodeType":"333","messageId":"334","endLine":1,"endColumn":24},{"ruleId":"331","severity":1,"message":"357","line":1,"column":16,"nodeType":"333","messageId":"334","endLine":1,"endColumn":24},{"ruleId":"358","severity":1,"message":"359","line":70,"column":7,"nodeType":"360","messageId":"350","endLine":70,"endColumn":17},{"ruleId":"358","severity":1,"message":"359","line":84,"column":7,"nodeType":"360","messageId":"350","endLine":84,"endColumn":17},{"ruleId":"341","severity":1,"message":"342","line":68,"column":1,"nodeType":"343","endLine":124,"endColumn":3},{"ruleId":"331","severity":1,"message":"346","line":80,"column":13,"nodeType":"333","messageId":"334","endLine":80,"endColumn":17},{"ruleId":"331","severity":1,"message":"357","line":1,"column":16,"nodeType":"333","messageId":"334","endLine":1,"endColumn":24},{"ruleId":"331","severity":1,"message":"361","line":1,"column":26,"nodeType":"333","messageId":"334","endLine":1,"endColumn":32},{"ruleId":"331","severity":1,"message":"345","line":2,"column":8,"nodeType":"333","messageId":"334","endLine":2,"endColumn":12},{"ruleId":"331","severity":1,"message":"362","line":8,"column":8,"nodeType":"333","messageId":"334","endLine":8,"endColumn":12},{"ruleId":"331","severity":1,"message":"363","line":9,"column":8,"nodeType":"333","messageId":"334","endLine":9,"endColumn":16},{"ruleId":"331","severity":1,"message":"346","line":39,"column":15,"nodeType":"333","messageId":"334","endLine":39,"endColumn":19},{"ruleId":"331","severity":1,"message":"345","line":3,"column":8,"nodeType":"333","messageId":"334","endLine":3,"endColumn":12},{"ruleId":"331","severity":1,"message":"346","line":26,"column":13,"nodeType":"333","messageId":"334","endLine":26,"endColumn":17},{"ruleId":"331","severity":1,"message":"357","line":1,"column":16,"nodeType":"333","messageId":"334","endLine":1,"endColumn":24},{"ruleId":"364","severity":1,"message":"365","line":18,"column":13,"nodeType":"366","endLine":20,"endColumn":33},{"ruleId":"341","severity":1,"message":"342","line":24,"column":1,"nodeType":"343","endLine":28,"endColumn":2},{"ruleId":"341","severity":1,"message":"342","line":7,"column":1,"nodeType":"343","endLine":9,"endColumn":2},{"ruleId":"341","severity":1,"message":"342","line":8,"column":1,"nodeType":"343","endLine":10,"endColumn":2},{"ruleId":"331","severity":1,"message":"367","line":7,"column":10,"nodeType":"333","messageId":"334","endLine":7,"endColumn":24},{"ruleId":"341","severity":1,"message":"342","line":37,"column":1,"nodeType":"343","endLine":39,"endColumn":2},{"ruleId":"341","severity":1,"message":"342","line":177,"column":1,"nodeType":"343","endLine":214,"endColumn":3},{"ruleId":"368","severity":1,"message":"369","line":21,"column":9,"nodeType":"370","messageId":"371","endLine":26,"endColumn":10},{"ruleId":"372","severity":1,"message":"373","line":27,"column":7,"nodeType":"374","messageId":"375","endLine":28,"endColumn":27},{"ruleId":"341","severity":1,"message":"342","line":177,"column":1,"nodeType":"343","endLine":214,"endColumn":3},{"ruleId":"341","severity":1,"message":"342","line":1,"column":1,"nodeType":"343","endLine":4,"endColumn":2},{"ruleId":"331","severity":1,"message":"354","line":2,"column":22,"nodeType":"333","messageId":"334","endLine":2,"endColumn":30},{"ruleId":"331","severity":1,"message":"376","line":14,"column":8,"nodeType":"333","messageId":"334","endLine":14,"endColumn":24},{"ruleId":"331","severity":1,"message":"377","line":15,"column":8,"nodeType":"333","messageId":"334","endLine":15,"endColumn":16},{"ruleId":"331","severity":1,"message":"378","line":18,"column":8,"nodeType":"333","messageId":"334","endLine":18,"endColumn":11},{"ruleId":"331","severity":1,"message":"379","line":20,"column":8,"nodeType":"333","messageId":"334","endLine":20,"endColumn":24},{"ruleId":"331","severity":1,"message":"380","line":23,"column":8,"nodeType":"333","messageId":"334","endLine":23,"endColumn":19},{"ruleId":"331","severity":1,"message":"381","line":24,"column":8,"nodeType":"333","messageId":"334","endLine":24,"endColumn":14},{"ruleId":"331","severity":1,"message":"346","line":37,"column":15,"nodeType":"333","messageId":"334","endLine":37,"endColumn":19},{"ruleId":"382","severity":1,"message":"383","line":57,"column":46,"nodeType":"384","endLine":57,"endColumn":63},{"ruleId":"331","severity":1,"message":"354","line":2,"column":22,"nodeType":"333","messageId":"334","endLine":2,"endColumn":30},{"ruleId":"331","severity":1,"message":"385","line":4,"column":26,"nodeType":"333","messageId":"334","endLine":4,"endColumn":31},{"ruleId":"331","severity":1,"message":"386","line":31,"column":12,"nodeType":"333","messageId":"334","endLine":31,"endColumn":13},{"ruleId":"331","severity":1,"message":"346","line":31,"column":15,"nodeType":"333","messageId":"334","endLine":31,"endColumn":19},{"ruleId":"331","severity":1,"message":"354","line":2,"column":22,"nodeType":"333","messageId":"334","endLine":2,"endColumn":30},{"ruleId":"331","severity":1,"message":"385","line":3,"column":26,"nodeType":"333","messageId":"334","endLine":3,"endColumn":31},{"ruleId":"331","severity":1,"message":"346","line":17,"column":15,"nodeType":"333","messageId":"334","endLine":17,"endColumn":19},{"ruleId":"331","severity":1,"message":"387","line":16,"column":5,"nodeType":"333","messageId":"334","endLine":16,"endColumn":14},{"ruleId":"331","severity":1,"message":"388","line":17,"column":5,"nodeType":"333","messageId":"334","endLine":17,"endColumn":15},{"ruleId":"331","severity":1,"message":"389","line":20,"column":5,"nodeType":"333","messageId":"334","endLine":20,"endColumn":16},{"ruleId":"331","severity":1,"message":"354","line":2,"column":22,"nodeType":"333","messageId":"334","endLine":2,"endColumn":30},{"ruleId":"331","severity":1,"message":"390","line":20,"column":8,"nodeType":"333","messageId":"334","endLine":20,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":44,"column":33,"nodeType":"366","endLine":44,"endColumn":93},{"ruleId":"391","severity":1,"message":"392","line":61,"column":33,"nodeType":"366","endLine":61,"endColumn":93},{"ruleId":"391","severity":1,"message":"392","line":78,"column":33,"nodeType":"366","endLine":78,"endColumn":90},{"ruleId":"391","severity":1,"message":"392","line":98,"column":33,"nodeType":"366","endLine":98,"endColumn":94},{"ruleId":"391","severity":1,"message":"392","line":115,"column":33,"nodeType":"366","endLine":115,"endColumn":90},{"ruleId":"391","severity":1,"message":"392","line":132,"column":33,"nodeType":"366","endLine":132,"endColumn":93},{"ruleId":"391","severity":1,"message":"392","line":149,"column":33,"nodeType":"366","endLine":149,"endColumn":93},{"ruleId":"391","severity":1,"message":"392","line":164,"column":29,"nodeType":"366","endLine":164,"endColumn":89},{"ruleId":"391","severity":1,"message":"392","line":207,"column":33,"nodeType":"366","endLine":207,"endColumn":87},{"ruleId":"331","severity":1,"message":"393","line":2,"column":10,"nodeType":"333","messageId":"334","endLine":2,"endColumn":20},{"ruleId":"331","severity":1,"message":"354","line":2,"column":22,"nodeType":"333","messageId":"334","endLine":2,"endColumn":30},{"ruleId":"331","severity":1,"message":"387","line":16,"column":5,"nodeType":"333","messageId":"334","endLine":16,"endColumn":14},{"ruleId":"331","severity":1,"message":"388","line":17,"column":5,"nodeType":"333","messageId":"334","endLine":17,"endColumn":15},{"ruleId":"331","severity":1,"message":"389","line":20,"column":5,"nodeType":"333","messageId":"334","endLine":20,"endColumn":16},{"ruleId":"331","severity":1,"message":"387","line":16,"column":5,"nodeType":"333","messageId":"334","endLine":16,"endColumn":14},{"ruleId":"331","severity":1,"message":"388","line":17,"column":5,"nodeType":"333","messageId":"334","endLine":17,"endColumn":15},{"ruleId":"331","severity":1,"message":"389","line":20,"column":5,"nodeType":"333","messageId":"334","endLine":20,"endColumn":16},{"ruleId":"331","severity":1,"message":"387","line":16,"column":5,"nodeType":"333","messageId":"334","endLine":16,"endColumn":14},{"ruleId":"331","severity":1,"message":"388","line":17,"column":5,"nodeType":"333","messageId":"334","endLine":17,"endColumn":15},{"ruleId":"331","severity":1,"message":"389","line":20,"column":5,"nodeType":"333","messageId":"334","endLine":20,"endColumn":16},"no-native-reassign",["394"],"no-negated-in-lhs",["395"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'lightTheme' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'CssBaseline' is defined but never used.","'dispatchLoading' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Container' is defined but never used.","'clsx' is defined but never used.","'i18n' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'moment' is defined but never used.","'path' is defined but never used.","'useTheme' is defined but never used.","'calendarDate' is assigned a value but never used.","'setCalendarDate' is assigned a value but never used.","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","'useRef' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'FormHelperText' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'CustomInput' is defined but never used.","'People' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Trans' is defined but never used.","'t' is assigned a value but never used.","'TextField' is defined but never used.","'InputLabel' is defined but never used.","'FilledInput' is defined but never used.","'MenuBarItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]