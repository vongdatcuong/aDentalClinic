[{"F:\\react\\aDentalClinic\\src\\index.js":"1","F:\\react\\aDentalClinic\\src\\reportWebVitals.js":"2","F:\\react\\aDentalClinic\\src\\layouts\\App\\App.js":"3","F:\\react\\aDentalClinic\\src\\i18n\\index.js":"4","F:\\react\\aDentalClinic\\src\\contexts\\loading-context.js":"5","F:\\react\\aDentalClinic\\src\\contexts\\theme-context.js":"6","F:\\react\\aDentalClinic\\src\\configs\\figures.js":"7","F:\\react\\aDentalClinic\\src\\routes\\index.js":"8","F:\\react\\aDentalClinic\\src\\layouts\\Loading\\index.js":"9","F:\\react\\aDentalClinic\\src\\i18n\\vn\\index.js":"10","F:\\react\\aDentalClinic\\src\\i18n\\en-us\\index.js":"11","F:\\react\\aDentalClinic\\src\\utils\\types\\Theme.js":"12","F:\\react\\aDentalClinic\\src\\themes\\lightTheme.js":"13","F:\\react\\aDentalClinic\\src\\themes\\darkTheme.js":"14","F:\\react\\aDentalClinic\\src\\routes\\path.js":"15","F:\\react\\aDentalClinic\\src\\i18n\\vn\\terms.js":"16","F:\\react\\aDentalClinic\\src\\i18n\\en-us\\terms.js":"17","F:\\react\\aDentalClinic\\src\\layouts\\RightSidebar\\index.js":"18","F:\\react\\aDentalClinic\\src\\layouts\\PageContainer\\index.js":"19","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\index.js":"20","F:\\react\\aDentalClinic\\src\\components\\feature\\Providers\\index.js":"21","F:\\react\\aDentalClinic\\src\\components\\feature\\Referral\\index.js":"22","F:\\react\\aDentalClinic\\src\\components\\feature\\Procedure\\index.js":"23","F:\\react\\aDentalClinic\\src\\components\\feature\\Staffs\\index.js":"24","F:\\react\\aDentalClinic\\src\\components\\feature\\LoginPage\\index.js":"25","F:\\react\\aDentalClinic\\src\\layouts\\TreatmentMenu\\index.js":"26","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\index.js":"27","F:\\react\\aDentalClinic\\src\\components\\feature\\PatientReportPage\\index.js":"28","F:\\react\\aDentalClinic\\src\\components\\feature\\PatientProfilePage\\index.js":"29","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\index.js":"30","F:\\react\\aDentalClinic\\src\\components\\feature\\ToothChartPage\\index.js":"31","F:\\react\\aDentalClinic\\src\\utils\\colors\\index.js":"32","F:\\react\\aDentalClinic\\src\\configs\\strings.js":"33","F:\\react\\aDentalClinic\\src\\layouts\\RightSidebar\\jss.js":"34","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\FunctionList.js":"35","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\LinkList.js":"36","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\jss.js":"37","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationPopover.js":"38","F:\\react\\aDentalClinic\\src\\components\\common\\CustomInput\\CustomInput.js":"39","F:\\react\\aDentalClinic\\src\\layouts\\TreatmentMenu\\jss.js":"40","F:\\react\\aDentalClinic\\src\\layouts\\TreatmentMenu\\LinkList.js":"41","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\jss.js":"42","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\Location.js":"43","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\Notifications.js":"44","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\TermPrivacy.js":"45","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\Account.js":"46","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\General.js":"47","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\Password.js":"48","F:\\react\\aDentalClinic\\src\\components\\common\\CustomInput\\customInputStyle.js":"49","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\index.js":"50","F:\\react\\aDentalClinic\\src\\components\\common\\CustomAvatar\\index.js":"51","F:\\react\\aDentalClinic\\src\\utils\\general\\index.js":"52","F:\\react\\aDentalClinic\\src\\components\\feature\\ToothChartPage\\jss.js":"53","F:\\react\\aDentalClinic\\src\\layouts\\Footer\\index.js":"54","F:\\react\\aDentalClinic\\src\\components\\common\\TabPanel\\index.js":"55","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\index.js":"56","F:\\react\\aDentalClinic\\src\\utils\\datetimes\\convertDateTimes.js":"57","F:\\react\\aDentalClinic\\src\\components\\common\\Messenger\\PopupChat\\index.js":"58","F:\\react\\aDentalClinic\\src\\utils\\validators\\index.js":"59","F:\\react\\aDentalClinic\\src\\components\\common\\CustomAvatar\\jss.js":"60","F:\\react\\aDentalClinic\\src\\utils\\routes\\index.js":"61","F:\\react\\aDentalClinic\\src\\components\\common\\SimpleComboBox\\index.js":"62","F:\\react\\aDentalClinic\\src\\components\\common\\Messenger\\PopupChat\\jss.js":"63","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\MakeAppointmentDialog.js":"64","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomDateNavigatorButtons.js":"65","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomDateNavigatorOpenButton.js":"66","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\SchedulerMenuItems.js":"67","F:\\react\\aDentalClinic\\src\\components\\common\\Empty\\index.js":"68","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomToolbarRow.js":"69","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeScaleLabel.js":"70","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeScaleTicket.js":"71","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeTableCell.js":"72","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\GroupingPanelCell.js":"73","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentTooltipContent.js":"74","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentTooltipHeader.js":"75","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointment.js":"76","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentContainer.js":"77","F:\\react\\aDentalClinic\\src\\layouts\\Footer\\Copyright.js":"78","F:\\react\\aDentalClinic\\src\\configs\\lists.js":"79","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationFuncPopover.js":"80","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\jss.js":"81","F:\\react\\aDentalClinic\\src\\components\\feature\\PatientReportPage\\jss.js":"82","F:\\react\\aDentalClinic\\src\\components\\feature\\LoginPage\\jss.js":"83","F:\\react\\aDentalClinic\\src\\components\\feature\\PatientProfilePage\\jss.js":"84","F:\\react\\aDentalClinic\\src\\components\\feature\\Staffs\\jss.js":"85","F:\\react\\aDentalClinic\\src\\components\\feature\\Procedure\\jss.js":"86","F:\\react\\aDentalClinic\\src\\components\\feature\\Referral\\jss.js":"87","F:\\react\\aDentalClinic\\src\\components\\feature\\Providers\\jss.js":"88","F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\index.js":"89","F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\MenuBarItem\\index.js":"90","F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\jss.js":"91","F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\MenuBarItem\\jss.js":"92","F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\Arrow\\index.js":"93","F:\\react\\aDentalClinic\\src\\components\\feature\\Authentication\\index.js":"94","F:\\react\\aDentalClinic\\src\\components\\feature\\Authentication\\jss.js":"95","F:\\react\\aDentalClinic\\src\\components\\feature\\Chair\\index.js":"96","F:\\react\\aDentalClinic\\src\\components\\feature\\Chair\\jss.js":"97","F:\\react\\aDentalClinic\\src\\components\\feature\\Schedule\\index.js":"98","F:\\react\\aDentalClinic\\src\\components\\feature\\Schedule\\jss.js":"99","F:\\react\\aDentalClinic\\src\\components\\feature\\Drug\\index.js":"100","F:\\react\\aDentalClinic\\src\\components\\feature\\Drug\\jss.js":"101","F:\\react\\aDentalClinic\\src\\components\\feature\\Portal\\index.js":"102","F:\\react\\aDentalClinic\\src\\components\\feature\\Portal\\jss.js":"103","F:\\react\\aDentalClinic\\src\\components\\feature\\Practice\\index.js":"104","F:\\react\\aDentalClinic\\src\\components\\feature\\Practice\\jss.js":"105","F:\\react\\aDentalClinic\\src\\layouts\\TablePaginationActions\\index.js":"106","F:\\react\\aDentalClinic\\src\\layouts\\TablePaginationActions\\jss.js":"107","F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\TabPanel\\index.js":"108","F:\\react\\aDentalClinic\\src\\components\\feature\\Template\\index.js":"109","F:\\react\\aDentalClinic\\src\\components\\feature\\Management\\index.js":"110","F:\\react\\aDentalClinic\\src\\layouts\\TabPanel\\index.js":"111","F:\\react\\aDentalClinic\\src\\components\\feature\\Management\\jss.js":"112","F:\\react\\aDentalClinic\\src\\layouts\\TabPanel\\jss.js":"113"},{"size":619,"mtime":1614436774155,"results":"114","hashOfConfig":"115"},{"size":375,"mtime":1614436774167,"results":"116","hashOfConfig":"115"},{"size":1347,"mtime":1615543797549,"results":"117","hashOfConfig":"115"},{"size":582,"mtime":1615543797541,"results":"118","hashOfConfig":"115"},{"size":637,"mtime":1614436774146,"results":"119","hashOfConfig":"115"},{"size":1250,"mtime":1615543797533,"results":"120","hashOfConfig":"115"},{"size":343,"mtime":1615543797501,"results":"121","hashOfConfig":"115"},{"size":3457,"mtime":1615994601080,"results":"122","hashOfConfig":"115"},{"size":1139,"mtime":1615543797549,"results":"123","hashOfConfig":"115"},{"size":6867,"mtime":1615992625379,"results":"124","hashOfConfig":"115"},{"size":6168,"mtime":1615962229926,"results":"125","hashOfConfig":"115"},{"size":47,"mtime":1614868542576,"results":"126","hashOfConfig":"115"},{"size":5687,"mtime":1615543797613,"results":"127","hashOfConfig":"115"},{"size":5388,"mtime":1614868542468,"results":"128","hashOfConfig":"115"},{"size":1539,"mtime":1615969823091,"results":"129","hashOfConfig":"115"},{"size":9256,"mtime":1615543797541,"results":"130","hashOfConfig":"115"},{"size":6610,"mtime":1615543797541,"results":"131","hashOfConfig":"115"},{"size":3101,"mtime":1614868542417,"results":"132","hashOfConfig":"115"},{"size":525,"mtime":1614868542350,"results":"133","hashOfConfig":"115"},{"size":6877,"mtime":1615962132527,"results":"134","hashOfConfig":"115"},{"size":9001,"mtime":1615991463676,"results":"135","hashOfConfig":"115"},{"size":8913,"mtime":1615991473459,"results":"136","hashOfConfig":"115"},{"size":9720,"mtime":1615991454630,"results":"137","hashOfConfig":"115"},{"size":8977,"mtime":1615991566325,"results":"138","hashOfConfig":"115"},{"size":8258,"mtime":1614868542210,"results":"139","hashOfConfig":"115"},{"size":4154,"mtime":1615543797609,"results":"140","hashOfConfig":"115"},{"size":525,"mtime":1615543797469,"results":"141","hashOfConfig":"115"},{"size":2026,"mtime":1615543797477,"results":"142","hashOfConfig":"115"},{"size":4816,"mtime":1615543797469,"results":"143","hashOfConfig":"115"},{"size":3917,"mtime":1615969957955,"results":"144","hashOfConfig":"115"},{"size":8364,"mtime":1615543797501,"results":"145","hashOfConfig":"115"},{"size":1200,"mtime":1614436774172,"results":"146","hashOfConfig":"115"},{"size":6914,"mtime":1615962134659,"results":"147","hashOfConfig":"115"},{"size":3762,"mtime":1615543797549,"results":"148","hashOfConfig":"115"},{"size":1819,"mtime":1614868542318,"results":"149","hashOfConfig":"115"},{"size":2229,"mtime":1614868542318,"results":"150","hashOfConfig":"115"},{"size":1727,"mtime":1615543797549,"results":"151","hashOfConfig":"115"},{"size":5992,"mtime":1615012130672,"results":"152","hashOfConfig":"115"},{"size":2508,"mtime":1614868542147,"results":"153","hashOfConfig":"115"},{"size":2136,"mtime":1615543797611,"results":"154","hashOfConfig":"115"},{"size":2229,"mtime":1615543797608,"results":"155","hashOfConfig":"115"},{"size":400,"mtime":1615543797469,"results":"156","hashOfConfig":"115"},{"size":1201,"mtime":1615543797477,"results":"157","hashOfConfig":"115"},{"size":2155,"mtime":1615543797477,"results":"158","hashOfConfig":"115"},{"size":598,"mtime":1615543797477,"results":"159","hashOfConfig":"115"},{"size":7497,"mtime":1615543797477,"results":"160","hashOfConfig":"115"},{"size":6083,"mtime":1615543797477,"results":"161","hashOfConfig":"115"},{"size":6768,"mtime":1615543797477,"results":"162","hashOfConfig":"115"},{"size":1770,"mtime":1614868542147,"results":"163","hashOfConfig":"115"},{"size":1769,"mtime":1614868542350,"results":"164","hashOfConfig":"115"},{"size":805,"mtime":1614436774138,"results":"165","hashOfConfig":"115"},{"size":128,"mtime":1614436774174,"results":"166","hashOfConfig":"115"},{"size":2330,"mtime":1615543797501,"results":"167","hashOfConfig":"115"},{"size":1026,"mtime":1614868542303,"results":"168","hashOfConfig":"115"},{"size":905,"mtime":1615543797429,"results":"169","hashOfConfig":"115"},{"size":8892,"mtime":1615543797469,"results":"170","hashOfConfig":"115"},{"size":625,"mtime":1614436774172,"results":"171","hashOfConfig":"115"},{"size":1191,"mtime":1615543797421,"results":"172","hashOfConfig":"115"},{"size":1475,"mtime":1615543797614,"results":"173","hashOfConfig":"115"},{"size":643,"mtime":1614868542116,"results":"174","hashOfConfig":"115"},{"size":254,"mtime":1614436774177,"results":"175","hashOfConfig":"115"},{"size":2085,"mtime":1615543797429,"results":"176","hashOfConfig":"115"},{"size":683,"mtime":1615543797421,"results":"177","hashOfConfig":"115"},{"size":1444,"mtime":1615543797461,"results":"178","hashOfConfig":"115"},{"size":700,"mtime":1615543797469,"results":"179","hashOfConfig":"115"},{"size":752,"mtime":1615543797469,"results":"180","hashOfConfig":"115"},{"size":1464,"mtime":1615543797469,"results":"181","hashOfConfig":"115"},{"size":138,"mtime":1615012130295,"results":"182","hashOfConfig":"115"},{"size":785,"mtime":1615543797469,"results":"183","hashOfConfig":"115"},{"size":1670,"mtime":1615543797461,"results":"184","hashOfConfig":"115"},{"size":743,"mtime":1615543797461,"results":"185","hashOfConfig":"115"},{"size":2356,"mtime":1615543797461,"results":"186","hashOfConfig":"115"},{"size":1119,"mtime":1615543797461,"results":"187","hashOfConfig":"115"},{"size":575,"mtime":1615543797429,"results":"188","hashOfConfig":"115"},{"size":980,"mtime":1615543797429,"results":"189","hashOfConfig":"115"},{"size":613,"mtime":1615543797429,"results":"190","hashOfConfig":"115"},{"size":677,"mtime":1615543797429,"results":"191","hashOfConfig":"115"},{"size":861,"mtime":1614868542303,"results":"192","hashOfConfig":"115"},{"size":343,"mtime":1615543797501,"results":"193","hashOfConfig":"115"},{"size":1686,"mtime":1615012130369,"results":"194","hashOfConfig":"115"},{"size":1029,"mtime":1615543797477,"results":"195","hashOfConfig":"115"},{"size":2330,"mtime":1615543797477,"results":"196","hashOfConfig":"115"},{"size":2330,"mtime":1614868542225,"results":"197","hashOfConfig":"115"},{"size":495,"mtime":1615543797469,"results":"198","hashOfConfig":"115"},{"size":1823,"mtime":1615962133941,"results":"199","hashOfConfig":"115"},{"size":2085,"mtime":1615724504540,"results":"200","hashOfConfig":"115"},{"size":1841,"mtime":1615962133790,"results":"201","hashOfConfig":"115"},{"size":1841,"mtime":1615724504619,"results":"202","hashOfConfig":"115"},{"size":6542,"mtime":1615980778984,"results":"203","hashOfConfig":"115"},{"size":1222,"mtime":1615965235368,"results":"204","hashOfConfig":"115"},{"size":2130,"mtime":1615980862135,"results":"205","hashOfConfig":"115"},{"size":1696,"mtime":1615962133997,"results":"206","hashOfConfig":"115"},{"size":155,"mtime":1615724504769,"results":"207","hashOfConfig":"115"},{"size":9070,"mtime":1615991404294,"results":"208","hashOfConfig":"115"},{"size":1890,"mtime":1615991209346,"results":"209","hashOfConfig":"115"},{"size":8864,"mtime":1615991421114,"results":"210","hashOfConfig":"115"},{"size":1845,"mtime":1615724504433,"results":"211","hashOfConfig":"115"},{"size":8969,"mtime":1615991553824,"results":"212","hashOfConfig":"115"},{"size":1851,"mtime":1615962133856,"results":"213","hashOfConfig":"115"},{"size":8935,"mtime":1615991430044,"results":"214","hashOfConfig":"115"},{"size":1843,"mtime":1615724504433,"results":"215","hashOfConfig":"115"},{"size":8992,"mtime":1615991441100,"results":"216","hashOfConfig":"115"},{"size":1847,"mtime":1615724504480,"results":"217","hashOfConfig":"115"},{"size":7927,"mtime":1615982051433,"results":"218","hashOfConfig":"115"},{"size":3476,"mtime":1615724504482,"results":"219","hashOfConfig":"115"},{"size":2493,"mtime":1615962134067,"results":"220","hashOfConfig":"115"},{"size":192,"mtime":1615962134096,"results":"221","hashOfConfig":"115"},{"size":731,"mtime":1615963577780,"results":"222","hashOfConfig":"115"},{"size":172,"mtime":1615969158020,"results":"223","hashOfConfig":"115"},{"size":5591,"mtime":1616052346210,"results":"224","hashOfConfig":"115"},{"size":995,"mtime":1615992076261,"results":"225","hashOfConfig":"115"},{"size":1122,"mtime":1615992658347,"results":"226","hashOfConfig":"115"},{"size":123,"mtime":1615993513100,"results":"227","hashOfConfig":"115"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"1u2aae3",{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"230"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"230"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"230"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"230"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"230"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"230"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"230"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"230"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"230"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"230"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"230"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"230"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"230"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"230"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"230"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"230"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"230"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"230"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"230"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"230"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"230"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"230"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"230"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"230"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"230"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"230"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"230"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"230"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"230"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"230"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"230"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"230"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"230"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"230"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"230"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"230"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"230"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"230"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"230"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"230"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"230"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"230"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"230"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"230"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"230"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"230"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"230"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"230"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"230"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"230"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"230"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"230"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"230"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"230"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"230"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"230"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"230"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"230"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"230"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"230"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"230"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"230"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"230"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"230"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"230"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"230"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"230"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"230"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"230"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"230"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"230"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"230"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"F:\\react\\aDentalClinic\\src\\index.js",[],["527","528"],"F:\\react\\aDentalClinic\\src\\reportWebVitals.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\App\\App.js",["529","530","531","532"],"import React, {\r\n  useContext,\r\n} from \"react\";\r\nimport logo from '../../assets/images/logo.svg';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport Routes from '../../routes';\r\n\r\n// Configs\r\nimport figures from '../../configs/figures';\r\n\r\n// Toast\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Material UI Core\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\n// Context\r\nimport { LoadingStateProvider } from '../../contexts/loading-context';\r\nimport { ThemeStateProvider } from '../../contexts/theme-context';\r\n\r\n// Components\r\nimport Loading from '../Loading';\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <ThemeStateProvider> {/* ==> Theme Context Provider */}\r\n        <LoadingStateProvider>\r\n          <CssBaseline />\r\n          <Loading />\r\n          <ToastContainer\r\n            autoClose={figures.toastTimeout}\r\n            hideProgressBar={true}\r\n            newestOnTop={true}\r\n            limit={figures.toastLimit}\r\n            position={toast.POSITION.BOTTOM_RIGHT}\r\n          />\r\n          <Router>\r\n            <Routes/>\r\n          </Router>\r\n        </LoadingStateProvider>\r\n    </ThemeStateProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\react\\aDentalClinic\\src\\i18n\\index.js",[],"F:\\react\\aDentalClinic\\src\\contexts\\loading-context.js",[],"F:\\react\\aDentalClinic\\src\\contexts\\theme-context.js",["533","534"],"import React, { createContext, useReducer } from \"react\";\r\nimport lightTheme from \"../themes/lightTheme\";\r\nimport darkTheme from \"../themes/darkTheme\";\r\n\r\n// Utils\r\nimport ThemeType from '../utils/types/Theme';\r\n\r\n// @material-ui/core\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst initState = {\r\n  theme: lightTheme,\r\n  type: ThemeType.LIGHT\r\n};\r\nconst themeStore = createContext(initState);\r\nconst { Provider } = themeStore;\r\n\r\nconst ThemeStateProvider = ({ children }) => {\r\n  const [themeState, dispatchTheme] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"Set-Theme\":\r\n        switch(action.theme){\r\n          case ThemeType.LIGHT:\r\n            return {theme: lightTheme, type: ThemeType.LIGHT};\r\n          case ThemeType.DARK:\r\n            return {theme: darkTheme, type: ThemeType.DARK};\r\n        }\r\n      default:\r\n        return {...themeState};\r\n        //throw new Error();\r\n    }\r\n  }, initState);\r\n  return <Provider value={{ themeState, dispatchTheme }}>\r\n          <ThemeProvider theme={createMuiTheme(themeState? themeState.theme : lightTheme)}>\r\n            {children}\r\n          </ThemeProvider>\r\n        </Provider>;\r\n};\r\n\r\nexport { themeStore, ThemeStateProvider };","F:\\react\\aDentalClinic\\src\\configs\\figures.js",["535"],"// Appointment\r\nconst defaultCellDuration = 15;\r\nconst defaultStartDayHour = 7;\r\nconst defaultEndDayHour = 21;\r\n\r\n// Toast\r\nconst toastTimeout = 5000;\r\nconst toastLimit = 10;\r\n\r\nexport default {\r\n    // Appointment\r\n    defaultCellDuration,\r\n    defaultStartDayHour,\r\n    defaultEndDayHour,\r\n    // Toast\r\n    toastTimeout,\r\n    toastLimit,\r\n}","F:\\react\\aDentalClinic\\src\\routes\\index.js",["536","537","538","539","540","541","542","543","544","545","546"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport path from './path';\r\n\r\n// @material-ui/core Component\r\n\r\n// Components\r\nimport PageContainer from '../layouts/PageContainer';\r\nimport LeftSidebar from '../layouts/LeftSidebar';\r\nimport RightSidebar from '../layouts/RightSidebar';\r\nimport Providers from \"../components/feature/Providers\";\r\nimport Staffs from \"../components/feature/Staffs\";\r\nimport Procedure from \"../components/feature/Procedure\";\r\nimport Referral from \"../components/feature/Referral\";\r\nimport Authentication from \"../components/feature/Authentication\";\r\nimport Chairs from \"../components/feature/Chair\";\r\nimport Schedule from \"../components/feature/Schedule\";\r\nimport Portal from \"../components/feature/Portal\";\r\nimport Drug from \"../components/feature/Drug\";\r\nimport Practice from \"../components/feature/Practice\";\r\nimport TreatmentMenu from '../layouts/TreatmentMenu';\r\nimport Dashboard from '../components/feature/Dashboard';\r\nimport LoginPage from '../components/feature/LoginPage';\r\nimport Settings from '../components/feature/Settings';\r\nimport ToothChartPage from '../components/feature/ToothChartPage';\r\nimport PatientProfilePage from '../components/feature/PatientProfilePage';\r\nimport PatientReportPage from '../components/feature/PatientReportPage';\r\nimport MenuBar from \"../layouts/MenuBar\";\r\nimport Management from \"../components/feature/Management\";\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n        {/*Login*/}\r\n        <Route path={path.loginPath}>\r\n          <PageContainer>\r\n            <LoginPage/>\r\n          </PageContainer>\r\n        </Route>\r\n        {/*Dashboard*/}\r\n        <Route path={path.dashboardPath}>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Dashboard/>\r\n            <RightSidebar/>\r\n          </PageContainer>\r\n        </Route>      \r\n        \r\n        <Route path={path.toothChartPath}>\r\n          <PageContainer>\r\n            <TreatmentMenu/>\r\n            <ToothChartPage/>\r\n          </PageContainer>\r\n        </Route>\r\n        <Route path={path.patientProfilePath}>\r\n          <PageContainer>\r\n            <TreatmentMenu/>\r\n            <PatientProfilePage/>\r\n          </PageContainer>\r\n        </Route>\r\n        <Route path={path.patientReportPath}>\r\n          <PageContainer>\r\n            <TreatmentMenu/>\r\n            <PatientReportPage/>\r\n          </PageContainer>\r\n        </Route>\r\n         {/*Managements With management*/}\r\n         <Route path={path.managementsWithManagementPath}>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Management/>\r\n          </PageContainer>\r\n        </Route>\r\n        {/*Managements*/}\r\n        <Route path={path.managementsPath} exact>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Management/>\r\n          </PageContainer>\r\n        </Route>\r\n        {/*Setting With Section*/}\r\n        <Route path={path.settingsWithSectionPath}>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Settings/>\r\n          </PageContainer>\r\n        </Route>\r\n        {/*Setting*/}\r\n        <Route path={path.settingsPath} exact>\r\n          <PageContainer>\r\n            <LeftSidebar/>\r\n            <Settings/>\r\n          </PageContainer>\r\n        </Route>\r\n        {/*Default*/}\r\n        <Route path={path.defaultPath} exact>\r\n          <Redirect to={path.dashboardPath}/>\r\n        </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;","F:\\react\\aDentalClinic\\src\\layouts\\Loading\\index.js",["547"],"import React, {useContext} from \"react\";\r\nimport { makeStyles,  } from \"@material-ui/core/styles\";\r\n\r\n// @icons\r\nimport loadingIcon from '../../assets/images/loading-icon.gif';\r\n\r\n// Context\r\nimport { loadingStore } from \"../../contexts/loading-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sweetLoading: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        backgroundColor: 'rgba(0, 0,0, 0.3)',\r\n        textAlign: 'center',\r\n        zIndex: theme.loadingZIndex,\r\n    },\r\n    loadingIconWrapper: {\r\n        position: 'relative',\r\n        '& img': {\r\n            position: 'relative',\r\n            top: '30%'\r\n        }\r\n    }\r\n}));\r\n\r\n const Loading = (props) => {\r\n    const classes = useStyles();\r\n    const { loadingState, dispatchLoading } = useContext(loadingStore);\r\n    return (\r\n        <div className={classes.sweetLoading} style={{'display': (loadingState.isLoading)? 'block' : 'none'}}>\r\n            <span className={classes.loadingIconWrapper}>\r\n                <img src={loadingIcon} alt=\"Loading\"/>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","F:\\react\\aDentalClinic\\src\\i18n\\vn\\index.js",["548","549"],"import terms from './terms';\r\n\r\nexport default {\r\n    translation: {\r\n        \"Appointment\" : \"Cuộc hẹn\",\r\n        \"Patient\" : \"Bệnh nhân\",\r\n        \"Report\" : \"Báo cáo\",\r\n        \"Documents\" : \"Tài liệu\",\r\n        \"Settings\" : \"Cài đặt\",\r\n        \"Notifications\": \"Thông báo\",\r\n        \"Remove Notification\": \"Gỡ thông báo\",\r\n        \"No notifications to display yet\": \"Không có thông báo để hiện thị\",\r\n        \"Appointment holder\": \"Người hẹn\",\r\n        \"Today's Appoinment\": \"Cuộc hẹn hôm nay\",\r\n        \"Go back\": \"Trở về\",\r\n        \"Tooth chart\": \"Biểu đồ nha chu\",\r\n        \"Patient profile\": \"Hồ sơ bệnh nhân\",\r\n        // Common\r\n        \"Yes\" : \"Có\",\r\n        \"No\": \"Không\",\r\n        \"OK\": \"Đồng ý\",\r\n        \"Cancel\": \"Hủy\",\r\n        \"Edit\": \"Sửa\",\r\n        \"Log in\": \"Đăng nhập\",\r\n        \"Log out\": \"Đăng xuất\",\r\n        \"Chair\": \"Ghế\",\r\n        \"Chairs\": \"Ghế\",\r\n        \"All\": \"Tất cả\",\r\n        \"Update\": \"Cập nhật\",\r\n        // Messages\r\n        // Success Messages\r\n        \"Update Account Success\": \"Cập nhật tài khoản thành công\",\r\n        // Error Messages\r\n        \"Update Account Fail\": \"Cập nhật tài khoản thất bại\",\r\n        \"Full name must contain at least 3 to 30 characters\": \"Họ tên phải có từ 3 - 30 ký tự\",\r\n        \"Email must follow the format abc@xyz.com/net/vn\": \"Email phải theo định dạng abc@xyz.com/net/vn\",\r\n        \"Phone must contain at least 10 to 15 number\": \"Số điện thoại phải có từ 10 - 15 số\",\r\n        \"Address must contain at least 5 to 300 characters\": \"Địa chỉ phải có từ 5 - 300 ký tự\",\r\n        \"Password must contain at least 6 to 100 characters\": \"Mật khẩu phải có từ 6 đến 100 ký tự\",\r\n        \"The entered password is incorrect\": \"Mật khẩu nhập vào không hợp lệ\",\r\n        \"Confirm password does not match with new password\": \"Xác nhận mật khẩu không trùng khớp với mật khẩu mới\",\r\n        \"The new password is identical to old password\": \"Mật khẩu mới trùng với mật khẩu cũ\",\r\n        // Confirm Messages\r\n        // Login Page\r\n        \"<strong>Login</strong> your account\": \"<strong>Đăng nhập</strong> tài khoản của bạn\",\r\n        \"Username\": \"Tên đăng nhập\",\r\n        \"Password\": \"Mật khẩu\",\r\n        \"Continue\": \"Tiếp tục\",\r\n        \"Forgot password?\": \"Quên mật khẩu?\",\r\n        \"Don't have an account? Sign Up\": \"Chưa có tài khoản? Đăng ký\",\r\n        \"Copyright by\": \"Bản quyền thuộc về\",\r\n        // Patient Profile page\r\n        \"Treatment plan\": \"Kế hoạch điều trị\",\r\n        \"History\": \"Lịch sử\",\r\n        \"Oral Health\": \"Sức khỏe răng miệng\",\r\n        \"Medical Issues\": \"Chống chỉ định thuốc\",\r\n        \"Currently there are no treatments pending\": \"Hiện tại không có yêu cầu điều trị nào đang chờ xử lý\",\r\n        \"Add record\": \"Thêm mục\",\r\n        \"Plaque index\": \"Chỉ số mảng bám\",\r\n        \"Bleeding index\": \"Chỉ số chảy máu\",\r\n        \"Halitosis\": \"Mức độ hôi miệng\",\r\n        // Settings\r\n        \"General\" : \"Chung\",\r\n        \"Account\": \"Tài khoản\",\r\n        \"Term & Policy\": \"Chính sách & Điều lệ\",\r\n        \"Location\": \"Vị trí\",\r\n        \"Language\": \"Ngôn ngữ\",\r\n        \"English\": \"Tiếng Anh\",\r\n        \"Vietnamese\": \"Tiếng Việt\",\r\n        \"Theme\": \"Chủ đề\",\r\n        \"Light\": \"Sáng\",\r\n        \"Dark\": \"Tối\",\r\n        \"Term Policy Full Text\": terms,\r\n        \"Notify when a STAFF sends you a message\": \"Thông báo khi có tin nhắn từ NHÂN VIÊN\",\r\n        \"Notify when a PATIENT sends you a message\": \"Thông báo khi có tin nhắn từ KHÁCH HÀNG\",\r\n        \"Notify when a you're having a MEETING\": \"Thông báo khi sắp có CUỘC HẸN\",\r\n        \"Full Name\": \"Họ tên\",\r\n        \"Email\": \"Email\",\r\n        \"Phone\": \"Số điện thoại\",\r\n        \"Address\": \"Địa chỉ\",\r\n        \"Old Password\": \"Mật khẩu cũ\",\r\n        \"New Password\": \"Mật khẩu mới\",\r\n        \"Confirm Password\": \"Xác nhận MK\",\r\n        //Menu bar\r\n        \"Providers\":\"Bác sĩ\",\r\n        \"Practices\":\"Thực hành\",\r\n        \"Staffs\":\"Nhân viên\",\r\n        \"Procedure\":\"Thủ tục\",\r\n        \"Referral\":\"Giới thiệu\",\r\n        \"Schedule\":\"Lịch trình\",\r\n        \"Authentication\":\"Xác thực\",\r\n        \"Document\":\"Tài liệu\",\r\n        \"Templates\":\"Mẫu\",\r\n        \"Drug\":\"Thuốc\",\r\n        //provider\r\n        \"#\":\"#\",\r\n        \"ID\":\"ID\",\r\n        \"Fullname\":\"Họ tên\",\r\n        \"Birth\":\"Ngày sinh\",\r\n        \"Gender\":\"Giới tính\",\r\n        \"Address\":\"Địa chỉ\",\r\n        //procedure\r\n        \"Code\":\"Code\",\r\n        \"Fee\":\"Tiền công\",\r\n        \"INS\":\"INS\",\r\n        \"Duration\":\"Thời lượng\",\r\n        \"Type\":\"Loại\",\r\n        \"ABBR\":\"ABBR\",\r\n        \"Description\":\"Mô tả\",\r\n        //authentication\r\n        \"Role\":\"Quyền hạn\",\r\n        //practices\r\n        \"About us\":\"Giới thiệu\",\r\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\":\"Lorem Ipsum chỉ đơn giản là văn bản giả của ngành in ấn và sắp chữ. Lorem Ipsum đã trở thành văn bản giả tiêu chuẩn của ngành kể từ những năm 1500, khi một nhà in không xác định lấy một dãy loại và xáo trộn nó để tạo thành một cuốn sách mẫu. Nó đã tồn tại không chỉ năm thế kỷ, mà còn là bước nhảy vọt vào lĩnh vực sắp chữ điện tử, về cơ bản vẫn không thay đổi. Nó được phổ biến vào những năm 1960 với việc phát hành các tờ Letraset chứa các đoạn Lorem Ipsum, và gần đây hơn với phần mềm xuất bản trên máy tính để bàn như Aldus PageMaker bao gồm các phiên bản của Lorem Ipsum\",\r\n        \"Save\":\"Lưu\",\r\n        //chair\r\n        \"Number\":\"Số\",\r\n        \"Room\":\"Phòng\",\r\n        \"Provider\":\"Nhà cung cấp\",\r\n        //schedule\r\n        \"Note\":\"Ghi chú\",\r\n        \"Date\":\"Ngày\",\r\n        \"Work time\":\"Giờ làm việc\",\r\n        //portal\r\n        \"Portal\":\"Cổng thông tin\",\r\n        //drug\r\n        \"Quantity\":\"Định lượng\",\r\n        //table\r\n        \"Rows per page\":\"Số dòng mỗi trang\",\r\n        \r\n    }\r\n}","F:\\react\\aDentalClinic\\src\\i18n\\en-us\\index.js",["550","551"],"import terms from './terms';\r\n\r\nexport default {\r\n    translation: {\r\n        \"Appointment\" : \"Appointment\",\r\n        \"Patient\" : \"Patient\",\r\n        \"Report\" : \"Report\",\r\n        \"Documents\" : \"Documents\",\r\n        \"Settings\" : \"Settings\",\r\n        \"Notifications\": \"Notifications\",\r\n        \"Remove Notification\": \"Remove Notification\",\r\n        \"No notifications to display yet\": \"No notification to display yet\",\r\n        \"Appointment holder\": \"Appointment holder\",\r\n        \"Today's Appoinment\": \"Today's Appoinment\",\r\n        \"Go back\": \"Go back\",\r\n        \"Tooth chart\": \"Tooth chart\",\r\n        \"Patient profile\": \"Patient profile\",\r\n        // Common\r\n        \"Yes\" : \"Yes\",\r\n        \"No\": \"No\",\r\n        \"OK\": \"OK\",\r\n        \"Cancel\": \"Cancel\",\r\n        \"Edit\": \"Edit\",\r\n        \"Log in\": \"Log in\",\r\n        \"Log out\": \"Log out\",\r\n        \"Chair\": \"Chair\",\r\n        \"Chairs\": \"Chairs\",\r\n        \"All\": \"All\",\r\n        \"Update\": \"Update\",\r\n        // Messages\r\n        // Success Messages\r\n        \"Update Account Success\": \"Update Account Success\",\r\n        // Error Messages\r\n        \"Update Account Fail\": \"Update Account Fail\",\r\n        \"Full name must contain at least 3 to 30 characters\": \"Full name must contain at least 3 to 30 characters\",\r\n        \"Email must follow the format abc@xyz.com/net/vn\": \"Email must follow the format abc@xyz.com/net/vn\",\r\n        \"Phone must contain at least 10 to 15 number\": \"Phone must contain at least 10 to 15 number\",\r\n        \"Address must contain at least 5 to 300 characters\": \"Address must contain at least 5 to 300 characters\",\r\n        \"Password must contain at least 6 to 100 characters\": \"Password must contain at least 6 to 100 characters\",\r\n        \"The entered password is incorrect\": \"The entered password is incorrect\",\r\n        \"Confirm password does not match with new password\": \"Confirm password does not match with new password\",\r\n        \"The new password is identical to old password\": \"The new password is identical to old password\",\r\n        // Confirm Messages\r\n        // Login Page\r\n        \"<strong>Login</strong> your account\": \"<strong>Login</strong> your account\",\r\n        \"Username\": \"Username\",\r\n        \"Password\": \"Password\",\r\n        \"Continue\": \"Continue\",\r\n        \"Forgot password?\": \"Forgot password?\",\r\n        \"Don't have an account? Sign Up\": \"Don't have an account? Sign Up\",\r\n        \"Copyright by\": \"Copyright by\",\r\n        // Patient Profile page\r\n        \"Treatment plan\": \"Treatment plan\",\r\n        \"History\": \"History\",\r\n        \"Oral Health\": \"Oral Health\",\r\n        \"Medical Issues\": \"Medical Issues\",\r\n        \"Currently there are no treatments pending\": \"Currently there are no treatments pending\",\r\n        \"Add record\": \"Add record\",\r\n        \"Plaque index\": \"Plaque index\",\r\n        \"Bleeding index\": \"Bleeding index\",\r\n        \"Halitosis\": \"Halitosis\",\r\n        // Settings\r\n        \"General\" : \"General\",\r\n        \"Account\": \"Account\",\r\n        \"Term & Policy\": \"Term & Policy\",\r\n        \"Location\": \"Location\",\r\n        \"Language\": \"Language\",\r\n        \"English\": \"English\",\r\n        \"Vietnamese\": \"Vietnamese\",\r\n        \"Theme\": \"Theme\",\r\n        \"Light\": \"Light\",\r\n        \"Dark\": \"Dark\",\r\n        \"Term Policy Full Text\": terms,\r\n        \"Notify when a STAFF sends you a message\": \"Notify when a STAFF sends you a message\",\r\n        \"Notify when a PATIENT sends you a message\": \"Notify when a PATIENT sends you a message\",\r\n        \"Notify when a you're having a MEETING\": \"Notify when a you're having a MEETING\",\r\n        \"Full Name\": \"Full Name\",\r\n        \"Email\": \"Email\",\r\n        \"Phone\": \"Phone\",\r\n        \"Address\": \"Address\",\r\n        \"Old Password\": \"Old Password\",\r\n        \"New Password\": \"New Password\",\r\n        \"Confirm Password\": \"Confirm PWD\",\r\n        //Menu bar\r\n        \"Providers\":\"Providers\",\r\n        \"Practices\":\"Practices\",\r\n        \"Staffs\":\"Staffs\",\r\n        \"Procedure\":\"Procedure\",\r\n        \"Referral\":\"Referral\",\r\n        \"Schedule\":\"Schedule\",\r\n        \"Authentication\":\"Authentication\",\r\n        \"Document\":\"Document\",\r\n        \"Templates\":\"Templates\",\r\n        \"Drug\":\"Drug\",\r\n        //provider\r\n        \"#\":\"#\",\r\n        \"ID\":\"ID\",\r\n        \"Fullname\":\"Fullname\",\r\n        \"Birth\":\"Birth\",\r\n        \"Gender\":\"Gender\",\r\n        \"Address\":\"Address\",\r\n        //procedure\r\n        \"Code\":\"Code\",\r\n        \"Fee\":\"Fee\",\r\n        \"INS\":\"INS\",\r\n        \"Duration\":\"Duration\",\r\n        \"Type\":\"Type\",\r\n        \"ABBR\":\"ABBR\",\r\n        \"Description\":\"Description\",\r\n        //authentication\r\n        \"Role\":\"Role\",\r\n        //practices\r\n        \"About us\":\"About us\",\r\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\":\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\",\r\n        \"Save\":\"Save\",\r\n        //chair\r\n        \"Number\":\"Number\",\r\n        \"Room\":\"Room\",\r\n        \"Provider\":\"Provider\",\r\n        //schedule\r\n        \"Note\":\"Note\",\r\n        \"Date\":\"Date\",\r\n        \"Work time\":\"Work time\",\r\n        //portal\r\n        \"Portal\":\"Portal\",\r\n        //drug\r\n        \"Quantity\":\"Quantity\",\r\n        //table\r\n        \"Rows per page\":\"Rows per page\",\r\n        \r\n    }\r\n}","F:\\react\\aDentalClinic\\src\\utils\\types\\Theme.js",["552"],"export default {\r\n    LIGHT: 0,\r\n    DARK: 1\r\n}","F:\\react\\aDentalClinic\\src\\themes\\lightTheme.js",["553"],"/* Default theme properties \r\n    (Not Allowed Names) \r\n*/\r\n// breakpoints\r\n// direction\r\n// mixins\r\n// overrides\r\n// palette\r\n// props\r\n// shadows\r\n// typography\r\n// spacing\r\n// transitions\r\n// zIndex\r\n\r\nimport {hexToRgb} from '../utils/colors';\r\n  \r\n  // Width\r\n  const drawerLeftWidth = 120;\r\n  const drawerRightWidth = 240;\r\n  const drawerRightCloseWidth = 50;\r\n  const notificationPopoverWidth = 420;\r\n  const notificationPopoverMinHeight = 300;\r\n  const notificationPopoverMaxHeight = 600;\r\n\r\n  // Z-index\r\n  const miniLeftSidebarZIndex = 999;\r\n  const loadingZIndex = 9999;\r\n\r\n  const transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n  };\r\n  \r\n  const fontColor = \"#ffffff\";\r\n  const primaryColor = [\"#4042E2\", \"#5658e5\", \"#6c6ee9\", \"#8284ec\"];\r\n  const secondaryColor = [\"#dc004e\", \"#f50057\", \"#ff1065\", \"#ff2975\"];\r\n  const warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\n  const dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\n  const successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\n  const infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\n  const roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\n  const grayColor = [\r\n    \"#999\",\r\n    \"#777\",\r\n    \"#3C4858\",\r\n    \"#AAAAAA\",\r\n    \"#D2D2D2\",\r\n    \"#DDD\",\r\n    \"#b4b4b4\",\r\n    \"#555555\",\r\n    \"#333\",\r\n    \"#a9afbb\",\r\n    \"#eee\",\r\n    \"#e7e7e7\"\r\n  ];\r\n  const hoverBrightColor = [\"#1991a7\", \"#1ca0b8\", \"#1eaec9\", \"#21bdda\"];\r\n  const hoverDarkColor = [\"#551796\", \"#5e19a7\", \"#681cb8\", \"#711ec9\"];\r\n  const blackColor = \"#000000\";\r\n  const whiteColor = \"#ffffff\";\r\n\r\n  // Google map\r\n  const mapMinWidth = 500;\r\n  const mapMinHeight = 500;\r\n  \r\n  const boxShadow = {\r\n    boxShadow:\r\n      \"0 10px 30px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 4px 25px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\"\r\n  };\r\n  \r\n  const primaryBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const infoBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const successBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const warningBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const dangerBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const roseBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  \r\n  const warningCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n    ...warningBoxShadow\r\n  };\r\n  const successCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n    ...successBoxShadow\r\n  };\r\n  const dangerCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n    ...dangerBoxShadow\r\n  };\r\n  const infoCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n    ...infoBoxShadow\r\n  };\r\n  const primaryCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n    ...primaryBoxShadow\r\n  };\r\n  const roseCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n    ...roseBoxShadow\r\n  };\r\n  \r\n  const defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n      \"0 10px 20px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 3px 20px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n  };\r\n\r\n  const title = {\r\n    color: grayColor[2],\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  };\r\n  \r\nexport default {\r\n  hexToRgb,\r\n  // Width\r\n  drawerLeftWidth,\r\n  drawerRightWidth,\r\n  drawerRightCloseWidth,\r\n  notificationPopoverWidth,\r\n  notificationPopoverMinHeight,\r\n  notificationPopoverMaxHeight,\r\n  // Z-index\r\n  miniLeftSidebarZIndex,\r\n  loadingZIndex,\r\n  transition,\r\n  boxShadow,\r\n  fontColor,\r\n  primaryColor,\r\n  secondaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  hoverBrightColor,\r\n  hoverDarkColor,\r\n  // Google Map\r\n  mapMinWidth,\r\n  mapMinHeight,\r\n  //\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n};  ","F:\\react\\aDentalClinic\\src\\themes\\darkTheme.js",["554"],"/* Default theme properties \r\n    (Not Allowed Names) \r\n*/\r\n// breakpoints\r\n// direction\r\n// mixins\r\n// overrides\r\n// palette\r\n// props\r\n// shadows\r\n// typography\r\n// spacing\r\n// transitions\r\n// zIndex\r\n\r\nimport {hexToRgb} from '../utils/colors';\r\n  \r\n  const drawerLeftWidth = 120;\r\n  const drawerRightWidth = 240;\r\n  const drawerRightCloseWidth = 50;\r\n  const notificationPopoverWidth = 420;\r\n  const notificationPopoverMinHeight = 300;\r\n  const notificationPopoverMaxHeight = 600;\r\n\r\n  const transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n  };\r\n  \r\n  const fontColor = \"#000000\";\r\n  const primaryColor = [\"#4042E2\", \"#5658e5\", \"#6c6ee9\", \"#8284ec\"];\r\n  const secondaryColor = [\"#dc004e\", \"#f50057\", \"#ff1065\", \"#ff2975\"];\r\n  const warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\n  const dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\n  const successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\n  const infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\n  const roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\n  const grayColor = [\r\n    \"#999\",\r\n    \"#777\",\r\n    \"#3C4858\",\r\n    \"#AAAAAA\",\r\n    \"#D2D2D2\",\r\n    \"#DDD\",\r\n    \"#b4b4b4\",\r\n    \"#555555\",\r\n    \"#333\",\r\n    \"#a9afbb\",\r\n    \"#eee\",\r\n    \"#e7e7e7\"\r\n  ];\r\n  const hoverBrightColor = [\"#1991a7\", \"#1ca0b8\", \"#1eaec9\", \"#21bdda\"];\r\n  const hoverDarkColor = [\"#551796\", \"#5e19a7\", \"#681cb8\", \"#711ec9\"];\r\n  const blackColor = \"#000000\";\r\n  const whiteColor = \"#ffffff\";\r\n  \r\n  const boxShadow = {\r\n    boxShadow:\r\n      \"0 10px 30px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 4px 25px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\"\r\n  };\r\n  \r\n  const primaryBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const infoBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const successBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const warningBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const dangerBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  const roseBoxShadow = {\r\n    boxShadow:\r\n      \"0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.14), 0 7px 10px -5px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \",.4)\"\r\n  };\r\n  \r\n  const warningCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n    ...warningBoxShadow\r\n  };\r\n  const successCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n    ...successBoxShadow\r\n  };\r\n  const dangerCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n    ...dangerBoxShadow\r\n  };\r\n  const infoCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n    ...infoBoxShadow\r\n  };\r\n  const primaryCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n    ...primaryBoxShadow\r\n  };\r\n  const roseCardHeader = {\r\n    background:\r\n      \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n    ...roseBoxShadow\r\n  };\r\n  \r\n  const defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n      \"0 10px 20px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.42), 0 3px 20px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n  };\r\n\r\n  const title = {\r\n    color: grayColor[2],\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  };\r\n  \r\nexport default {\r\n  hexToRgb,\r\n  drawerLeftWidth,\r\n  drawerRightWidth,\r\n  drawerRightCloseWidth,\r\n  notificationPopoverWidth,\r\n  notificationPopoverMinHeight,\r\n  notificationPopoverMaxHeight,\r\n  transition,\r\n  boxShadow,\r\n  fontColor,\r\n  primaryColor,\r\n  secondaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  hoverBrightColor,\r\n  hoverDarkColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n};  ","F:\\react\\aDentalClinic\\src\\routes\\path.js",[],"F:\\react\\aDentalClinic\\src\\i18n\\vn\\terms.js",["555"],"const terms = 'Các Điều khoản và Điều kiện này đã được cập nhật và có hiệu lực kể từ ngày 14 tháng 3 năm 2016\\\r\n <br/><br/>VUI LÒNG ĐỌC KỸ THỎA THUẬN NÀY TRƯỚC KHI SỬ DỤNG DỊCH VỤ IDENTALSOFT, BAO GỒM, KHÔNG GIỚI HẠN, TẤT CẢ NỘI DUNG NHƯ VĂN BẢN, THÔNG TIN, HÌNH ẢNH, ỨNG DỤNG, NHÓM, PHẦN MỀM, TÍNH NĂNG, CẬP NHẬT VÀ CÁC THÔNG TIN, DỊCH VỤ VÀ TÀI LIỆU KHÁC ( S)\"). BẰNG VIỆC TRUY CẬP HOẶC SỬ DỤNG TẤT CẢ HOẶC BẤT KỲ PHẦN NÀO CỦA DỊCH VỤ, BẠN XÁC NHẬN SỰ ĐỒNG Ý CỦA MÌNH VỚI CÁC ĐIỀU KHOẢN VÀ ĐIỀU KIỆN SẮC NÀY, NHƯ ĐƯỢC SỬA ĐỔI TỪ THỜI GIAN, (\"THỎA THUẬN\") VÀ TUYÊN BỐ RẰNG BẠN ĐƯỢC PHÉP THUỘC VÀO THỎA THUẬN NÀY VỀ KHÁCH HÀNG. NẾU BẠN KHÔNG ĐỒNG Ý VỚI CÁC ĐIỀU KHOẢN CỦA THỎA THUẬN NÀY, IDENTALSOFT KHÔNG CẤP CHO BẠN QUYỀN SỬ DỤNG DỊCH VỤ VÀ BẠN PHẢI SỬ DỤNG VÀ TRUY CẬP DỊCH VỤ NGAY LẬP TỨC.\\\r\n <br/><br/>Thỏa thuận này là giữa iDentalSoft, Inc, một tập đoàn Delaware có trụ sở kinh doanh chính tại 16 Corning Ave # 140, Milpitas CA 95035 (\"iDS\") và bạn hoặc pháp nhân mà bạn đại diện (\"Bạn\") và điều chỉnh việc bạn sử dụng Dịch vụ.\\\r\n<br/><br/>1. Kế hoạch Dịch vụ\\\r\n<br/><br/>Dịch vụ có sẵn dưới dạng dịch vụ trả phí với một số lượng hạn chế người dùng được cấp phép (\"Người dùng\") như được chỉ định trên biểu mẫu đặt hàng của bạn (\"Mẫu đơn đặt hàng\"). Các dịch vụ bổ sung được bao gồm như một phần của dịch vụ trả phí ngoại trừ trường hợp được chỉ định trên Mẫu đơn đặt hàng.\\\r\n<br/><br/>2. Thanh toán\\\r\n<br/><br/>Xem xét giấy phép được cấp dưới đây, thanh toán cho Dịch vụ sẽ theo giá và theo các điều khoản được nêu trên Biểu mẫu đặt hàng, hoặc theo cách khác được iDS tuyên bố hoặc trích dẫn vào từng thời điểm. Tất cả giá đều chưa bao gồm thuế, có thể thêm hoặc không vào giá, tùy thuộc vào luật hiện hành và nơi cư trú hợp pháp của bạn. Bạn sẽ chịu trách nhiệm về bất kỳ và tất cả các khoản thuế liên quan đến Thỏa thuận này.\\\r\n<br/><br/>Nếu thanh toán bằng thẻ tín dụng của bạn bị từ chối hoặc khoản phí của bạn được trả lại cho iDS vì bất kỳ lý do gì, bao gồm cả khoản bồi hoàn hoặc nếu bạn không thực hiện bất kỳ khoản thanh toán nào cho iDS, iDS có thể, theo quyết định riêng của iDS, tạm dừng hoặc chấm dứt quyền truy cập của bạn đối với Dịch vụ và / hoặc chấm dứt Thỏa thuận này. Quyền sử dụng Dịch vụ của bạn phải tuân theo mọi giới hạn do iDS hoặc tổ chức phát hành thẻ tín dụng của bạn thiết lập. Phí lãi suất 1% mỗi tháng (hoặc lãi suất cao nhất được pháp luật cho phép nếu thấp hơn 1% mỗi tháng) sẽ tích lũy hàng ngày trên bất kỳ số dư chưa thanh toán nào quá hạn trên ba mươi (30) ngày.\\\r\n<br/><br/>3. Quyền sử dụng\\\r\n<br/><br/>Bạn và Người dùng của bạn theo đây được cấp quyền sử dụng Dịch vụ không độc quyền, không thể chuyển nhượng, chỉ cho các mục đích kinh doanh nội bộ của riêng bạn, tuân theo Thỏa thuận này. Tất cả các quyền không được cấp rõ ràng cho Bạn đều được iDS bảo lưu. Quyền sử dụng của bạn luôn có điều kiện là tuân thủ các điều khoản của Thỏa thuận này và việc bạn thanh toán Dịch vụ nhanh chóng và kịp thời. Việc vi phạm bất kỳ điều khoản nào của Thỏa thuận này, không thanh toán hoặc chậm thanh toán sẽ chấm dứt mọi quyền sử dụng được cấp cho Bạn và Người dùng của bạn theo Thỏa thuận này.\\\r\n<br/><br/>Bạn không được: (i) cấp phép, cấp phép lại, bán, bán lại, chuyển nhượng, chuyển nhượng, phân phối hoặc khai thác thương mại hoặc cung cấp Dịch vụ cho bất kỳ bên thứ ba nào theo bất kỳ cách nào; (ii) sửa đổi hoặc tạo ra các sản phẩm phái sinh dựa trên Dịch vụ; (iii) tạo \"liên kết\" Internet đến Dịch vụ hoặc \"khung\" hoặc \"phản chiếu\" bất kỳ nội dung nào trên bất kỳ máy chủ nào khác hoặc thiết bị không dây hoặc dựa trên Internet; hoặc (iv) thiết kế đối chiếu hoặc truy cập Dịch vụ để (a) xây dựng sản phẩm hoặc dịch vụ cạnh tranh, (b) xây dựng sản phẩm bằng cách sử dụng các ý tưởng, tính năng, chức năng hoặc đồ họa tương tự của Dịch vụ, hoặc (c) sao chép bất kỳ ý tưởng nào, các tính năng, chức năng hoặc đồ họa của Dịch vụ. Bạn chỉ có thể sử dụng Dịch vụ cho các mục đích kinh doanh nội bộ của mình và không được: (i) gửi spam hoặc các tin nhắn trùng lặp hoặc không được yêu cầu vi phạm luật hiện hành; (ii) gửi hoặc lưu trữ tài liệu vi phạm, khiêu dâm, đe dọa, bôi nhọ, hoặc bất hợp pháp hoặc quanh co, bao gồm tài liệu có hại cho trẻ em hoặc vi phạm quyền riêng tư của bên thứ ba; (iii) gửi hoặc lưu trữ tài liệu có chứa vi rút phần mềm, sâu, ngựa Trojan hoặc mã máy tính có hại khác, tệp, tập lệnh, tác nhân hoặc chương trình; (iv) can thiệp hoặc phá vỡ tính toàn vẹn, băng thông hoặc hiệu suất của Dịch vụ hoặc dữ liệu có trong đó; (v) cố gắng truy cập trái phép vào Dịch vụ hoặc các hệ thống hoặc mạng liên quan của nó; hoặc (vi) sử dụng Dịch vụ, bao gồm nội dung, sở hữu trí tuệ, công nghệ, nhãn hiệu hoặc nhãn hiệu dịch vụ cho bất kỳ mục đích thương mại nào (tức là chào mời khách hàng, bán lại, v.v.) mà không có sự đồng ý trước bằng văn bản của iDS.\\\r\n<br/><br/>4. Truy cập\\\r\n<br/><br/>Quyền truy cập Dịch vụ khả dụng thông qua một URL duy nhất được cung cấp tại thời điểm đăng ký hoặc qua Phần mềm mà bạn cài đặt trên Máy chủ của riêng mình tại thời điểm cài đặt. Dịch vụ hỗ trợ cả định dạng trang web đầy đủ và di động. iDS sẽ cung cấp cho Bạn và (các) Người dùng của bạn tên người dùng và mật khẩu để truy cập Dịch vụ. Tên người dùng và mật khẩu là cá nhân và được coi là một phần của Thông tin bí mật.\\\r\n<br/><br/>5. Trách nhiệm\\\r\n<br/><br/>Bạn chịu trách nhiệm về tất cả các hoạt động xảy ra trong (các) tài khoản Người dùng của bạn và của bạn và sẽ tuân thủ tất cả các luật, hiệp ước và quy định hiện hành của địa phương, tiểu bang, quốc gia và nước ngoài liên quan đến việc bạn sử dụng Dịch vụ, bao gồm cả những quy định liên quan đến quyền riêng tư dữ liệu, bao gồm nhưng không giới hạn ở Đạo luật về trách nhiệm giải trình và cung cấp bảo hiểm y tế, Đạo luật về công nghệ thông tin y tế cho sức khỏe kinh tế và lâm sàng (được gọi chung ở đây là \"HIPAA\"), Tiêu chuẩn bảo mật dữ liệu ngành thẻ thanh toán (\"PCI DSS\"), truyền thông quốc tế và truyền dữ liệu kỹ thuật hoặc dữ liệu cá nhân. Ngoài ra, Bạn có trách nhiệm tuân thủ bất kỳ và tất cả các chính sách, thủ tục và quy định nội bộ, được yêu cầu bởi chủ lao động của bạn và / hoặc các quản trị viên hiện hành của tài khoản của bạn. Bạn phải: (i) thông báo cho iDS ngay lập tức về bất kỳ hành vi sử dụng trái phép nào đối với bất kỳ mật khẩu hoặc tài khoản nào hoặc bất kỳ hành vi vi phạm bảo mật nào đã biết hoặc bị nghi ngờ; (ii) báo cáo với iDS ngay lập tức và sử dụng các nỗ lực hợp lý để ngăn chặn ngay lập tức mọi hành vi sao chép hoặc phân phối nội dung mà Bạn hoặc những người khác biết hoặc nghi ngờ vi phạm Thỏa thuận này hoặc quyền sở hữu trí tuệ của bên thứ ba; và (iii) không mạo danh người dùng khác hoặc cung cấp thông tin nhận dạng sai lệch để có quyền truy cập hoặc sử dụng Dịch vụ. Bằng cách truy cập Dịch vụ, Bạn tuyên bố và đảm bảo rằng bạn không nhận dạng sai bản thân cũng như không cung cấp bất kỳ thông tin sai lệch nào để có quyền truy cập vào Dịch vụ và thông tin thanh toán của bạn là chính xác.'\r\n\r\nexport default terms;","F:\\react\\aDentalClinic\\src\\i18n\\en-us\\terms.js",["556","557"],"const terms = 'These Terms and Conditions were updated and effective as of 14th of March 2016\\\r\n <br/><br/>PLEASE READ THIS AGREEMENT CAREFULLY BEFORE USING THE IDENTALSOFT SERVICE, INCLUDING, WITHOUT LIMITATION, ALL CONTENT SUCH AS TEXT, INFORMATION, IMAGES, APPLICATIONS, TEMPLATES, SOFTWARE, FEATURES, UPDATES, AND OTHER INFORMATION, SERVICES AND MATERIALS (COLLECTIVELY, THE \"SERVICE(S)\"). BY ACCESSING OR USING ALL OR ANY PORTION OF THE SERVICE, YOU ACKNOWLEDGE YOUR ACCEPTANCE TO THESE IDENTALSOFT TERMS AND CONDITIONS, AS AMENDED FROM TIME TO TIME, (\"AGREEMENT\") AND REPRESENT THAT YOU ARE AUTHORIZED TO ENTER INTO THIS AGREEMENT ON BEHALF OF THE CUSTOMER. IF YOU DO NOT AGREE TO THE TERMS OF THIS AGREEMENT, IDENTALSOFT DOES NOT GRANT YOU THE RIGHT TO USE THE SERVICES, AND YOU MUST CEASE USE OF AND ACCESS TO THE SERVICES IMMEDIATELY.\\\r\n <br/><br/>This Agreement is between iDentalSoft, Inc, a Delaware corporation with its principal place of business at 16 Corning Ave #140, Milpitas CA 95035 (\"iDS\") and you or the entity you represent (\"You\") and governs Your use of the Service.\\\r\n<br/><br/>1. Service Plans\\\r\n<br/><br/>The Service is available as a paid service with a limited number of licensed users (\"Users\") as specified on your order form (\"Order Form\"). Additional services are included as part of the paid service except where specified on the Order Form.\\\r\n<br/><br/>2. Payment\\\r\n<br/><br/>In consideration of the license granted hereunder, payment for Services shall be at prices and under terms stated on the Order Form, or as otherwise stated or quoted by iDS from time to time. All prices are exclusive of taxes, which may or may not be added to the price, depending on applicable law and your legal residence. You shall be responsible for any and all taxes related to this Agreement.\\\r\n<br/><br/>If payment by your credit card is denied, or your charge is returned to iDS for any reason, including charge-back or if you otherwise fails to make any payments owing to iDS, iDS may, at iDSs sole discretion, suspend or terminate your access to the Service and/or terminate this Agreement. Your right to use the Services are subject to any limits established by iDS or by the issuer of your credit card. Interest charges of 1% per month (or the highest rate permitted by law if lower than 1% per month) will accrue daily on any unpaid balance which is more than thirty (30) days overdue.\\\r\n<br/><br/>3. Right of Use\\You and your Users are hereby granted a non-exclusive, nontransferable, right to use the Service, solely for your own internal business purposes, subject to this Agreement. All rights not expressly granted to You are reserved by iDS. Your right of use is at all times conditioned on compliance with the terms of this Agreement and your prompt and timely payment for the Service. Breach of any term of this Agreement, non-payment, or delay in payment shall terminate any right of use granted to the You and your Users under this Agreement.\\\r\n<br/><br/>You shall not: (i) license, sublicense, sell, resell, transfer, assign, distribute or otherwise commercially exploit or make available to any third party the Service in any way; (ii) modify or make derivative works based upon the Service; (iii) create Internet \"links\" to the Service or \"frame\" or \"mirror\" any content on any other server or wireless or Internet-based device; or (iv) reverse engineer or access the Service in order to (a) build a competitive product or service, (b) build a product using similar ideas, features, functions or graphics of the Service, or (c) copy any ideas, features, functions or graphics of the Service. You may use the Service only for your internal business purposes and shall not: (i) send spam or otherwise duplicative or unsolicited messages in violation of applicable laws; (ii) send or store infringing, obscene, threatening, libelous, or otherwise unlawful or tortuous material, including material harmful to children or violative of third party privacy rights; (iii) send or store material containing software viruses, worms, Trojan horses or other harmful computer code, files, scripts, agents or programs; (iv) interfere with or disrupt the integrity, bandwidth or performance of the Service or the data contained therein; (v) attempt to gain unauthorized access to the Service or its related systems or networks; or (vi) use the Service, including the content, intellectual property, technology, trademarks or service marks for any commercial purposes (i.e. soliciting customers, resale, etc.) without iDSs prior written consent.\\\r\n<br/><br/>4. Access\\\r\n<br/><br/>Access to the Service is available via a unique URL given at the time of registration, or via Software that you install on your own Server at the time of installation. The Service supports both full and mobile webpage formats. iDS will provide You and your User(s) with a username and password for accessing the Service. Usernames and passwords are personal, and are to be considered part of Confidential Information.\\\r\n<br/><br/>5. Your Responsibilities\\\r\n<br/><br/>You are responsible for all activity occurring under your and your Users account(s) and shall abide by all applicable local, state, national and foreign laws, treaties and regulations in connection with your use of the Service, including those related to data privacy, including but not limited to the Health Insurance Portability and Accountability Act, the Health Information Technology for Economic and Clinical Health Act (collectively referred to herein as \"HIPAA\"), Payment Card Industry Data Security Standards (\"PCI DSS\"), international communications and the transmission of technical or personal data. In addition, You are responsible for abiding by any and all internal policies, procedures and regulations, which are required, by your employer and/or the applicable administrators of your account. You shall: (i) notify iDS immediately of any unauthorized use of any password or account or any other known or suspected breach of security; (ii) report to iDS immediately and use reasonable efforts to stop immediately any copying or distribution of content that is known or suspected by You or others to violate this Agreement or the intellectual property rights of third parties; and (iii) not impersonate another user or provide false identity information to gain access to or use the Service. By accessing the Service, You represent and warrant that you have not falsely identified yourself nor provided any false information to gain access to the Service and that your billing information is correct.'\r\n\r\nexport default terms;","F:\\react\\aDentalClinic\\src\\layouts\\RightSidebar\\index.js",["558","559","560","561","562","563","564"],"import React, {useState, useContext} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport {moment} from 'moment';\r\nimport strings from '../../configs/strings';\r\n// Routes\r\nimport path from \"../../routes/path\";\r\n// @material-ui/core components\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// @material-ui/core Icons\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n// react-day-picker\r\nimport DayPicker from 'react-day-picker';\r\n\r\n// Components\r\n\r\n// Contexts\r\n\r\n\r\nimport styles from \"./jss\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst RightSidebar = (props) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    // States\r\n    const [rightSidebarOpen, setRightSidebarOpen] = useState(true);\r\n    const [calendarDate, setCalendarDate] = useState(new Date());\r\n\r\n    const toggleDrawer = () => {\r\n      setRightSidebarOpen(!rightSidebarOpen);\r\n    }\r\n\r\n    const handleSelectDate = (date) => {\r\n      alert(date);\r\n    }\r\n\r\n    return (\r\n      <div className={clsx(classes.rightSidebarWrapper, !rightSidebarOpen && classes.rightSidebarCloseWrapper)}>\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"right\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: rightSidebarOpen,\r\n                [classes.drawerClose]: !rightSidebarOpen,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: rightSidebarOpen,\r\n                    [classes.drawerClose]: !rightSidebarOpen,\r\n                }),\r\n            }}\r\n        >\r\n          <IconButton onClick={toggleDrawer} className={classes.toggleBtn}>\r\n              {rightSidebarOpen ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n          <Divider />\r\n          <div className={clsx(classes.sidebarContent, rightSidebarOpen && classes.displayBlock)}>\r\n            <DayPicker \r\n              className={classes.calendar}\r\n              onDayClick={handleSelectDate}\r\n            />\r\n            <Divider />\r\n            <div className={classes.appointmentHolder}>\r\n              <Typography component=\"h6\" variant=\"h6\">{t(strings.appointmentHolder)}</Typography>\r\n              <Box className={classes.appointmentHolderBox}>\r\n                \r\n              </Box>\r\n            </div>\r\n            <Divider />\r\n            <div className={classes.todayAppoinment}>\r\n              <Typography component=\"h6\" variant=\"h6\">{t(strings.todayAppointment)}</Typography>\r\n              <Box className={classes.todayAppoinmentBox}>\r\n                \r\n              </Box>\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default RightSidebar;","F:\\react\\aDentalClinic\\src\\layouts\\PageContainer\\index.js",["565"],"import React from \"react\";\r\nimport { makeStyles  } from \"@material-ui/core/styles\";\r\n\r\n// Material UI Core\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: 0,\r\n        margin: 0,\r\n        display: 'flex',\r\n    }\r\n}))\r\n\r\nconst PageContainer = ({children}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageContainer;\r\n","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\index.js",["566","567","568","569"],"import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../configs/strings';\r\n// Routes\r\nimport path from \"../../routes/path\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// @material-ui/core Icons\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n  // Links Icons\r\n  import CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\n  import PeopleIcon from '@material-ui/icons/People';\r\n  import AssessmentIcon from '@material-ui/icons/Assessment';\r\n  import InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n  import SettingsIcon from '@material-ui/icons/Settings';\r\n  import ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// Components\r\nimport CustomAvatar from '../../components/common/CustomAvatar';\r\nimport LinkList from './LinkList';\r\nimport FunctionList from './FunctionList';\r\nimport Notification from './Notification';\r\nimport NotificationPopover from './Notification/NotificationPopover';\r\nimport styles from \"./jss\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst LeftSidebar = (props) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    // States\r\n    const [openLeftSidebarGhost, setOpenLeftSidebarGhost] = useState(false);\r\n    const [openNotiPopover, setOpenNotiPopover] = useState(false);\r\n\r\n    const [notiPopAnchorEl, setNotiPopAnchorEl] = useState(null);\r\n    const popOverId = openNotiPopover? \"notification-popover\" : undefined;\r\n\r\n    // Notification\r\n    const [notifications, setNotifications] = useState([\r\n      {\r\n        id: 1,\r\n        user: {},\r\n        content: \"User 1 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: false\r\n      },\r\n      {\r\n        id: 2,\r\n        user: {},\r\n        content: \"User 2 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: false\r\n      },\r\n      {\r\n        id: 3,\r\n        user: {},\r\n        content: \"User 3 register package ABC for 3 years from 2021\",\r\n        date: new Date(),\r\n        isRead: true\r\n      }\r\n    ]);\r\n\r\n\r\n    const pathList = [\r\n      {\r\n        link: path.dashboardPath,\r\n        text: t(strings.appointment),\r\n        icon: <CalendarTodayIcon/>\r\n      },\r\n      {\r\n        link: path.patientPath,\r\n        text: t(strings.patient),\r\n        icon: <PeopleIcon/>\r\n      },\r\n      {\r\n        link: path.reportPath,\r\n        text: t(strings.report),\r\n        icon: <AssessmentIcon/>\r\n      },\r\n      {\r\n        link: path.documentPath,\r\n        text: t(strings.documents),\r\n        icon: <InsertDriveFileIcon/>\r\n      },\r\n      {\r\n        link: path.settingsPath,\r\n        text: t(strings.settings),\r\n        icon: <SettingsIcon/>\r\n      }\r\n    ]\r\n    const links = <LinkList\r\n      links={pathList}\r\n    />\r\n\r\n    // Notifications Popover\r\n    const handleOpenNotiPopover = (evt) => {\r\n      setNotiPopAnchorEl(evt.currentTarget);\r\n      setOpenNotiPopover(true);\r\n    }\r\n\r\n    const handleCloseNotiPopover = () => {\r\n      setNotiPopAnchorEl(null);\r\n      setOpenNotiPopover(false);\r\n    }\r\n\r\n    const onNotificationClick = (notiId) => {\r\n      const newNotifications = [...notifications];\r\n      newNotifications.forEach((notification) => {\r\n        if (notification.id == notiId){\r\n          notification.isRead = true;\r\n        }\r\n      })\r\n      setNotifications(newNotifications);\r\n    }\r\n\r\n    const handleRemoveNotification = (notiId) => {\r\n      setNotifications(notifications.filter((notification) => notification.id != notiId));\r\n    }\r\n\r\n    const notification = \r\n      <Notification\r\n        onOpen={handleOpenNotiPopover}\r\n        popOverId={popOverId}\r\n        notiCount={notifications.filter((noti) => !noti.isRead).length}\r\n      />\r\n\r\n    const logout = \r\n        <Tooltip title={t(strings.logout)} aria-label={t(strings.logout)}>\r\n          <IconButton className={classes.listItemBtn} size=\"medium\"><ExitToAppIcon/></IconButton>\r\n        </Tooltip>\r\n\r\n    const funcList = <FunctionList\r\n      functions={[notification, logout]}\r\n    />\r\n\r\n    const toggleLeftSidebar = (val) => {      \r\n      setOpenLeftSidebarGhost(val);\r\n    }\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.miniLeftSidebarWrapper}>\r\n          <Hidden mdUp implementation=\"css\">\r\n              <IconButton color=\"default\" aria-label=\"toggle sidebar\" component=\"span\"\r\n                  onClick={() => toggleLeftSidebar(true)}\r\n              >\r\n                  <MenuIcon />\r\n              </IconButton>\r\n              <Drawer\r\n                  variant=\"temporary\"\r\n                  anchor=\"left\"\r\n                  open={openLeftSidebarGhost}\r\n                  onClose={() => toggleLeftSidebar(false)}\r\n                  ModalProps={{\r\n                  keepMounted: true // Better open performance on mobile.\r\n                  }}\r\n                  className={classes.drawer}\r\n              >\r\n                <CustomAvatar\r\n                    link=\"https://www.creative-tim.com?ref=mdr-sidebar\"\r\n                    src=\"https://www.w3schools.com/w3images/avatar2.png\"\r\n                    text=\"Jiwon\"\r\n                  />\r\n                  {/*<Divider className={classes.divider}/>*/}\r\n                  <div className={classes.sidebarWrapper}>\r\n                    {links}\r\n                    {funcList}\r\n                  </div>\r\n              </Drawer>\r\n          </Hidden>\r\n        </div>\r\n        <Hidden smDown implementation=\"css\">\r\n          <div className={classes.leftSidebarWrapper}>\r\n            <Drawer\r\n                  anchor=\"left\"\r\n                  variant=\"permanent\"\r\n                  open\r\n                  className={classes.drawer}\r\n              >\r\n                  <CustomAvatar\r\n                    link=\"https://www.creative-tim.com?ref=mdr-sidebar\"\r\n                    src=\"https://www.w3schools.com/w3images/avatar2.png\"\r\n                    text=\"Jiwon\"\r\n                  />\r\n                  {/*<Divider className={classes.divider}/>*/}\r\n                  <div className={classes.sidebarWrapper}>\r\n                    {links}\r\n                    {funcList}\r\n                  </div>\r\n              </Drawer>\r\n          </div>\r\n        </Hidden>\r\n        <NotificationPopover\r\n          id={popOverId}\r\n          open={openNotiPopover}\r\n          onClose={handleCloseNotiPopover}\r\n          anchorEl={notiPopAnchorEl}\r\n          notifications={notifications}\r\n          onNotificationClick={onNotificationClick}\r\n          onRemoveNotification={handleRemoveNotification}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default LeftSidebar;","F:\\react\\aDentalClinic\\src\\components\\feature\\Providers\\index.js",["570","571","572","573","574","575","576","577","578","579","580","581"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM sadfasdf ads fsda fasd fads fasd fa asd asdas das dasdasdasdasdsadasdsadasdasdas\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\n\r\nconst Providers = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.providers)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.id)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.fullname)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.birth)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.gender)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.address)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1+page * rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Providers;","F:\\react\\aDentalClinic\\src\\components\\feature\\Referral\\index.js",["582","583","584","585","586","587","588","589","590","591","592","593"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\n\r\nconst Referral = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.referral)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\" >\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.id)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.fullname)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.birth)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.gender)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.address)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1 +page * rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Referral;","F:\\react\\aDentalClinic\\src\\components\\feature\\Procedure\\index.js",["594","595","596","597","598","599","600","601","602","603","604","605"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(code,fee,ins,duration,type,abbr,description)=>{\r\n    return {code,fee,ins,duration,type,abbr,description};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"1000\", \"ins asdasd asd asdas dsa das dasd asdsa\", \"30\", \"1\",\"ABBR\",\"Description Description\"),\r\n    createData('1712321', \"2000\", \"ins\", \"40\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712322', \"3000\", \"ins\", \"50\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712323', \"4000\", \"ins\", \"60\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712324', \"5000\", \"ins\", \"70\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712325', \"6000\", \"ins\", \"80\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712326', \"7000\", \"ins\", \"90\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712327', \"8000\", \"ins\", \"11\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712328', \"9000\", \"ins\", \"33\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712329', \"10000\", \"ins\", \"22\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712330', \"11100\", \"ins\", \"1111\", \"1\",\"ABBR\",\"Description\"),\r\n    createData('1712331', \"12200\", \"ins\", \"99\", \"1\",\"ABBR\",\"Description\"),\r\n\r\n\r\n];\r\n\r\nconst Procedure = () => {\r\n    const classes = useStyles(darkTheme);\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.procedure)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container >\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.code)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.fee)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.ins)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.duration)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.type)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.abbr)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.description)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1+page*rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.code}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.fee}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {row.ins}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.duration}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.type}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.abbr}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.description}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n                    <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n            \r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Procedure;","F:\\react\\aDentalClinic\\src\\components\\feature\\Staffs\\index.js",["606","607","608","609","610","611","612","613","614","615","616","617"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM sdfasdf sadf asdf asdf asd fsdaf sadf sad adasdasdas\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\n\r\nconst Staffs = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container} >\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.staffs)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl  variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.id)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.fullname)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.birth)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.gender)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.address)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1 +page * rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n            \r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Staffs;","F:\\react\\aDentalClinic\\src\\components\\feature\\LoginPage\\index.js",["618","619","620","621","622","623","624","625","626"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\n\r\n// Component\r\nimport Footer from '../../../layouts/Footer';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst LoginPage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container component=\"main\" component={Paper} className={classes.root}>\r\n                <CssBaseline />\r\n                <Grid container className={classes.loginHeader}>\r\n                    <div className={classes.brandContainer}>\r\n                        <img src={logoADC} alt=\"Logo\" className={classes.logo}/>\r\n                        <div className={classes.brandName}>\r\n                            A Dental Clinic\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container className={classes.loginContainer}>\r\n                    <Grid item xs={12} sm={8} md={5} elevation={6} square>\r\n                        <div className={classes.paper}>\r\n                            <Typography component=\"h1\" variant=\"h5\" className={classes.loginTitle}>\r\n                                <Trans i18nKey={strings.loginYourAccount}>\r\n                                </Trans>\r\n                            </Typography>\r\n                            <form className={classes.form} noValidate>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <AccountBox className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"username\"\r\n                                            label={t(strings.username)}\r\n                                            name=\"username\"\r\n                                            autoComplete=\"username\"\r\n                                            autoFocus\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <Lock className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label={t(strings.password)}\r\n                                            type={values.showPassword ? 'text' : 'password'}\r\n                                            value={values.password}\r\n                                            onChange={handleChange('password')}\r\n                                            id=\"password\"\r\n                                            autoComplete=\"current-password\"\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    className={classes.btnToggleVisibility}\r\n                                                >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                            }}\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                                /> */}\r\n                                <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                >\r\n                                {t(strings.continueLogin)}\r\n                                </Button>\r\n                                <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.forgotPassword)}\r\n                                    </Link>\r\n                                </Grid>\r\n                                {/* <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.dontHaveAccount)}\r\n                                    </Link>\r\n                                </Grid> */}\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                </Grid>\r\n                <Footer/>\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","F:\\react\\aDentalClinic\\src\\layouts\\TreatmentMenu\\index.js",["627","628","629","630","631","632","633","634","635"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport strings from \"../../configs/strings\";\r\n// Routes\r\nimport path from \"../../routes/path\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// @material-ui/core Icons\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n// Links Icons\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\";\r\nimport { FaTeeth } from \"react-icons/fa\";\r\n\r\n// Components\r\nimport CustomAvatar from \"../../components/common/CustomAvatar\";\r\nimport LinkList from \"./LinkList\";\r\n// import GoBack from \"./GoBack\";\r\nimport styles from \"./jss\";\r\n\r\n// Utils\r\nimport { disableClick } from \"../../utils/general\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst TreatmentMenu = (props) => {\r\n  const classes = useStyles();\r\n  const { t, i18n } = useTranslation();\r\n\r\n  // States\r\n  const [openLeftSidebarGhost, setOpenLeftSidebarGhost] = useState(false);\r\n\r\n  const pathList = [\r\n    {\r\n      link: path.patientProfilePath,\r\n      text: t(strings.patientProfile),\r\n      icon: <AssignmentInd />,\r\n    },\r\n    {\r\n      link: path.toothChartPath,\r\n      text: t(strings.toothChart),\r\n      icon: <FaTeeth />,\r\n    },\r\n    {\r\n      link: path.patientReportPath,\r\n      text: t(strings.report),\r\n      icon: <InsertDriveFileIcon />,\r\n    },\r\n  ];\r\n  const links = <LinkList links={pathList} />;\r\n\r\n  const goBack = (\r\n    <NavLink to=\"/patient\" className={classes.listItemLink}>\r\n      <Tooltip title={t(strings.goBack)} aria-label={t(strings.goBack)}>\r\n        <IconButton className={classes.goBackBtn} size=\"medium\">\r\n          <ArrowBack />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </NavLink>\r\n  ); // TODO: Edit goBack URL\r\n\r\n  //   const goBackbtn = <GoBack functions={[goBack]} />;\r\n\r\n  const toggleLeftSidebar = (val) => {\r\n    setOpenLeftSidebarGhost(val);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.miniLeftSidebarWrapper}>\r\n        <Hidden mdUp implementation=\"css\">\r\n          <IconButton\r\n            color=\"default\"\r\n            aria-label=\"toggle sidebar\"\r\n            component=\"span\"\r\n            onClick={() => toggleLeftSidebar(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={openLeftSidebarGhost}\r\n            onClose={() => toggleLeftSidebar(false)}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n            className={classes.drawer}\r\n          >\r\n            {/*<Divider className={classes.divider}/>*/}\r\n            <div className={classes.sidebarWrapper}>\r\n              {goBack}\r\n              {links}\r\n            </div>\r\n          </Drawer>\r\n        </Hidden>\r\n      </div>\r\n      <Hidden smDown implementation=\"css\">\r\n        <div className={classes.leftSidebarWrapper}>\r\n          <Drawer\r\n            anchor=\"left\"\r\n            variant=\"permanent\"\r\n            open\r\n            className={classes.drawer}\r\n          >\r\n            {/*<Divider className={classes.divider}/>*/}\r\n            <div className={classes.sidebarWrapper}>\r\n              {goBack}\r\n              <Divider />\r\n              {links}\r\n            </div>\r\n          </Drawer>\r\n        </div>\r\n      </Hidden>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TreatmentMenu;\r\n","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\index.js",["636"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\n\r\n// Components\r\nimport Schedulerr from \"./Scheduler\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst DashBoard = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Schedulerr/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DashBoard;","F:\\react\\aDentalClinic\\src\\components\\feature\\PatientReportPage\\index.js",["637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\n\r\n// Component\r\nimport Footer from '../../../layouts/Footer';\r\nimport PopupChat from '../../common/Messenger/PopupChat';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst PatientReportPage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Grid container component=\"main\" component={Paper} className={classes.root}>\r\n                Patient Report Page\r\n                <PopupChat></PopupChat>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PatientReportPage;","F:\\react\\aDentalClinic\\src\\components\\feature\\PatientProfilePage\\index.js",["662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\n// Component\r\nimport PopupChat from '../../common/Messenger/PopupChat';\r\nimport TabPanel from '../../common/TabPanel'\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst PatientProfilePage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n\r\n    const [curTab, setCurTab] = React.useState(0);\r\n\r\n    const handleChangeTab = (event, newTab) => {\r\n        setCurTab(newTab);\r\n    };\r\n\r\n    function a11yProps(index) {\r\n        return {\r\n          id: `simple-tab-${index}`,\r\n          'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n      }\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <PopupChat></PopupChat>\r\n            <Grid container>\r\n                <Grid item xs={9} sm={9} md={9} className={classes.leftGrid}>\r\n                    <Grid container className={classes.headerInfo}>\r\n                        Do The Anh\r\n                    </Grid>\r\n                    <Grid container className={classes.detailProfileContainer}>\r\n                        <Grid item>\r\n                            <Tabs value={curTab} onChange={handleChangeTab} indicatorColor=\"primary\" textColor=\"primary\">\r\n                                    <Tab label={t(strings.treatmentPlan).toUpperCase()} {...a11yProps(0)} />\r\n                                    <Tab label={t(strings.history).toUpperCase()} {...a11yProps(1)} />\r\n                            </Tabs>\r\n                            <Grid item>\r\n                                <TabPanel value={curTab} index={0}>\r\n                                    {t(strings.noTreatmentsPending)}\r\n                                </TabPanel>\r\n                                <TabPanel value={curTab} index={1}>\r\n                                    <Button color=\"twitter\" simple>\r\n                                        <AddCircleOutlineIcon></AddCircleOutlineIcon>{\" \"}\r\n                                        {t(strings.addRecord)}\r\n                                    </Button>\r\n                                </TabPanel>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={3} sm={3} md={3} className={classes.rightGrid}>\r\n                    <Grid container className={classes.oralHeathContainer}>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {t(strings.oralHealth)} <Button color=\"primary\" simple>{t(strings.edit)}</Button>\r\n                        </Typography>\r\n                        {t(strings.plaqueIndex)}<br></br>\r\n                        {t(strings.bleedingIndex)}<br></br>\r\n                        {t(strings.halitosis)}<br></br>\r\n                    </Grid>\r\n                    <Grid container className={classes.medicalIssuesContainer}>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {t(strings.medicalIssues)} <Button color=\"primary\" simple>{t(strings.edit)}</Button>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PatientProfilePage;","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\index.js",["683","684","685"],"import React, {useState, useEffect} from 'react';\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport routePaths from '../../../routes/path';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Component\r\nimport General from './General';\r\nimport Account from './Account';\r\nimport Password from './Password';\r\nimport TermPrivacy from './TermPrivacy';\r\nimport Notifications from './Notifications';\r\nimport Location from './Location';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`vertical-tabpanel-${index}`}\r\n        aria-labelledby={`vertical-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box px={4} style={{height: '100%'}}>\r\n            {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\nconst Settings = () => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n    const history = useHistory();\r\n    const { section } = useParams();\r\n\r\n    useEffect(() => {\r\n      if (!section){\r\n        history.push(routePaths.settingsPath + \"/general\");\r\n      }\r\n    })\r\n\r\n    const sections = [\"general\", \"account\", \"password\", \"termPrivacy\", \"notifications\", \"location\"];\r\n    let curSection = sections.indexOf(section);\r\n    if (curSection == -1){\r\n      history.push(routePaths.settingsPath + \"/general\");\r\n      curSection = 0;\r\n    }\r\n\r\n    // States\r\n    const [tabValue, setTabValue] = useState(curSection);\r\n\r\n    const handleChangeTab = (event, newValue) => {\r\n      history.push(routePaths.settingsPath + \"/\" + sections[newValue]);\r\n      setTabValue(newValue);\r\n    };\r\n\r\n    const tabs = [t(strings.general), t(strings.account), t(strings.password), t(strings.termPolicy), t(strings.notifications), t(strings.location)];\r\n    const tablePanels = [\r\n      <General/>,\r\n      <Account/>,\r\n      <Password/>,\r\n      <TermPrivacy/>,\r\n      <Notifications/>,\r\n      <Location/>,\r\n    ]\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Typography className={classes.title} variant=\"h5\" component=\"h5\">{t(strings.settings)}</Typography>\r\n            <Grid className={classes.tabsWrapper}>\r\n              <Grid item md={3} sm={4} xs={5}>\r\n                <Tabs\r\n                    orientation=\"vertical\"\r\n                    variant=\"scrollable\"\r\n                    value={tabValue}\r\n                    onChange={handleChangeTab}\r\n                    aria-label=\"Vertical tabs settings\"\r\n                    className={classes.tabs}\r\n                >\r\n                    {(tabs.map((tab, index) => {\r\n                        return <Tab key={index} className={classes.tab} label={tab} {...a11yProps(index)}/>\r\n                    }))}\r\n                </Tabs>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={7}>\r\n                {(tablePanels).map((tPanel, index) => {\r\n                  return <TabPanel key={index} value={tabValue} index={index}>\r\n                            {tPanel}\r\n                        </TabPanel>\r\n                })}\r\n              </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Settings;","F:\\react\\aDentalClinic\\src\\components\\feature\\ToothChartPage\\index.js",["686","687","688","689","690","691","692","693","694"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from \"./jss\";\r\nimport strings from '../../../configs/strings';\r\nimport logoADC from '../../../assets/images/logoADC.png'\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CustomInput from \"../../common/CustomInput/CustomInput.js\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\nimport Lock from '@material-ui/icons/Lock';\r\n\r\n// Component\r\nimport Footer from '../../../layouts/Footer';\r\nimport PopupChat from '../../common/Messenger/PopupChat';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst ToothChartPage = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <PopupChat></PopupChat>\r\n            <Grid container component=\"main\" component={Paper} className={classes.root}>\r\n                <CssBaseline />\r\n                <Grid container className={classes.loginHeader}>\r\n                    <div className={classes.brandContainer}>\r\n                        <img src={logoADC} alt=\"Logo\" className={classes.logo}/>\r\n                        <div className={classes.brandName}>\r\n                            A Dental Clinic\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container className={classes.loginContainer}>\r\n                    <Grid item xs={12} sm={8} md={5} elevation={6} square>\r\n                        <div className={classes.paper}>\r\n                            <Typography component=\"h1\" variant=\"h5\" className={classes.loginTitle}>\r\n                                <Trans i18nKey={strings.loginYourAccount}>\r\n                                </Trans>\r\n                            </Typography>\r\n                            <form className={classes.form} noValidate>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <AccountBox className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"username\"\r\n                                            label={t(strings.username)}\r\n                                            name=\"username\"\r\n                                            autoComplete=\"username\"\r\n                                            autoFocus\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.inputContainer}>\r\n                                    <Grid item>\r\n                                        <Lock className={classes.loginIcons}/>\r\n                                    </Grid>\r\n                                    <Grid item className={classes.inputTextContainer}>\r\n                                        <TextField\r\n                                            className={classes.inputText}\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label={t(strings.password)}\r\n                                            type={values.showPassword ? 'text' : 'password'}\r\n                                            value={values.password}\r\n                                            onChange={handleChange('password')}\r\n                                            id=\"password\"\r\n                                            autoComplete=\"current-password\"\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    className={classes.btnToggleVisibility}\r\n                                                >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                            }}\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                                /> */}\r\n                                <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                >\r\n                                {t(strings.continueLogin)}\r\n                                </Button>\r\n                                <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.forgotPassword)}\r\n                                    </Link>\r\n                                </Grid>\r\n                                {/* <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                                    {t(strings.dontHaveAccount)}\r\n                                    </Link>\r\n                                </Grid> */}\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                </Grid>\r\n                <Footer/>\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ToothChartPage;","F:\\react\\aDentalClinic\\src\\utils\\colors\\index.js",["695","696"],"// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n\r\nimport { FormHelperText } from \"@material-ui/core\";\r\n\r\n// #############################\r\nconst hexToRgb = input => {\r\n    input = input + \"\";\r\n    input = input.replace(\"#\", \"\");\r\n    let hexRegex = /[0-9A-Fa-f]/g;\r\n    if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n      throw new Error(\"input is not a valid hex color.\");\r\n    }\r\n    if (input.length === 3) {\r\n      let first = input[0];\r\n      let second = input[1];\r\n      let last = input[2];\r\n      input = first + first + second + second + last + last;\r\n    }\r\n    input = input.toUpperCase();\r\n    let first = input[0] + input[1];\r\n    let second = input[2] + input[3];\r\n    let last = input[4] + input[5];\r\n    return (\r\n      parseInt(first, 16) +\r\n      \", \" +\r\n      parseInt(second, 16) +\r\n      \", \" +\r\n      parseInt(last, 16)\r\n    );\r\n  };\r\n\r\nexport {hexToRgb};\r\nexport default {\r\n    hexToRgb: hexToRgb\r\n}","F:\\react\\aDentalClinic\\src\\configs\\strings.js",["697","698"],"\r\nconst appointment = \"Appointment\";\r\nconst patient = \"Patient\";\r\nconst report = \"Report\";\r\nconst documents = \"Documents\";\r\nconst settings = \"Settings\";\r\nconst notifications = \"Notifications\";\r\nconst removeNotification = \"Remove Notification\";\r\nconst noNotificationToDisplay = \"No notifications to display yet\";\r\nconst appointmentHolder = \"Appointment holder\";\r\nconst todayAppointment = \"Today's Appoinment\";\r\nconst goBack = \"Go back\";\r\nconst toothChart = \"Tooth chart\";\r\nconst patientProfile = \"Patient profile\";\r\n\r\nconst search=\"Search\";\r\n//menu bar\r\nconst providers=\"Providers\";\r\nconst practices=\"Practices\";\r\nconst staffs=\"Staffs\";\r\nconst procedure=\"Procedure\";\r\nconst chairs=\"Chairs\";\r\nconst referral=\"Referral\";\r\nconst schedule=\"Schedule\";\r\nconst authentication=\"Authentication\";\r\nconst document=\"Document\";\r\nconst templates=\"Templates\";\r\nconst drug=\"Drug\";\r\n//provider\r\nconst index=\"#\";\r\nconst id=\"ID\";\r\nconst fullname=\"Fullname\";\r\nconst birth=\"Birth\";\r\nconst gender=\"Gender\";\r\nconst address=\"Address\";\r\n//procedure\r\nconst code=\"Code\";\r\nconst fee=\"Fee\";\r\nconst ins=\"INS\";\r\nconst duration=\"Duration\";\r\nconst type=\"Type\";\r\nconst abbr=\"ABBR\";\r\nconst description=\"Description\";\r\n//authentication\r\nconst role=\"Role\";\r\n//practices\r\nconst aboutUs=\"About us\";\r\nconst aboutUsContent=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\";\r\nconst save=\"Save\";\r\n//chair\r\nconst number=\"Number\";\r\nconst room=\"Room\";\r\nconst provider=\"Provider\";\r\n//schedule\r\nconst note=\"Note\";\r\nconst date=\"Date\";\r\nconst workTime=\"Work time\";\r\n//portal\r\nconst portal=\"Portal\";\r\n//drug\r\nconst quantity=\"Quantity\";\r\n//table\r\nconst rowsPerPage=\"Rows per page\";\r\n// Common\r\nconst yes = \"Yes\";\r\nconst no = \"No\";\r\nconst ok = \"OK\";\r\nconst cancel = \"Cancel\";\r\nconst edit = \"Edit\";\r\nconst logout = \"Log out\";\r\nconst login = \"Log in\";\r\nconst chair = \"Chair\";\r\nconst all = \"All\";\r\nconst update = \"Update\";\r\n\r\n// Messages\r\n\r\n    // Success Messages\r\nconst updateAccountSuccess = \"Update Account Success\";\r\n    // Error Messages\r\nconst updateAccountFail = \"Update Account Fail\";\r\nconst fullNameErrMsg = \"Full name must contain at least 3 to 30 characters\";\r\nconst emailErrMsg = \"Email must follow the format abc@xyz.com/net/vn\";\r\nconst phoneErrMsg = \"Phone must contain at least 10 to 15 number\";\r\nconst addressErrMsg = \"Address must contain at least 5 to 300 characters\";\r\nconst passwordErrMsg = \"Password must contain at least 6 to 100 characters\";\r\nconst oldPwdNotMatchErrMsg = \"The entered password is incorrect\";\r\nconst confirmPwdNotMatchErrMsg = \"Confirm password does not match with new password\";\r\nconst newPwdMatchOldPwd = \"The new password is identical to old password\";\r\n    // Confirm Messages\r\n\r\n// Context Actions\r\nconst setTheme = \"Set-Theme\";\r\nconst setLoading = \"Set-Loading\";\r\n\r\n// Login page\r\nconst loginYourAccount = \"<strong>Login</strong> your account\";\r\nconst username = \"Username\";\r\nconst password = \"Password\";\r\nconst continueLogin = \"Continue\"; // \"continue\" in not valid name\r\nconst forgotPassword = \"Forgot password?\";\r\nconst dontHaveAccount = \"Don't have an account? Sign Up\"\r\nconst copyrightBy = \"Copyright by\";\r\n\r\n// Patient Profile page\r\nconst treatmentPlan = \"Treatment plan\";\r\nconst history = \"History\";\r\nconst oralHealth = \"Oral Health\";\r\nconst medicalIssues = \"Medical Issues\";\r\nconst noTreatmentsPending = \"Currently there are no treatments pending\";\r\nconst addRecord = \"Add record\";\r\nconst plaqueIndex = \"Plaque index\";\r\nconst bleedingIndex = \"Bleeding index\";\r\nconst halitosis = \"Halitosis\";\r\n\r\n// Settings\r\nconst general = \"General\";\r\nconst account = \"Account\";\r\nconst termPolicy = \"Term & Policy\";\r\nconst location = \"Location\";\r\nconst language = \"Language\";\r\nconst english = \"English\";\r\nconst vietnamese = \"Vietnamese\";\r\nconst theme = \"Theme\";\r\nconst light = \"Light\";\r\nconst dark = \"Dark\";\r\nconst termPolicyFullText = \"Term Policy Full Text\";\r\nconst notifyStaffMessage = \"Notify when a STAFF sends you a message\";\r\nconst notifyPatientMessage = \"Notify when a PATIENT sends you a message\";\r\nconst notifyHavingMeeting = \"Notify when a you're having a MEETING\";\r\nconst fullName = \"Full Name\";\r\nconst email =  \"Email\";\r\nconst phone = \"Phone\";\r\nconst oldPassword = \"Old Password\";\r\nconst newPassword = \"New Password\";\r\nconst confirmPassword = \"Confirm Password\"\r\n\r\n// Date\r\nconst defaultTimeFormat = \"HH:mm\";\r\n\r\nexport default {\r\n    appointment,\r\n    patient,\r\n    report,\r\n    documents,\r\n    settings,\r\n    notifications,\r\n    removeNotification,\r\n    noNotificationToDisplay,\r\n    appointmentHolder,\r\n    todayAppointment,\r\n    goBack,\r\n    toothChart,\r\n    patientProfile,\r\n    report,\r\n    // Common\r\n    yes,\r\n    no,\r\n    ok,\r\n    cancel,\r\n    edit,\r\n    login,\r\n    logout,\r\n    chair,\r\n    all,\r\n    update,\r\n    // Messages\r\n    // Success Messages\r\n    updateAccountSuccess,\r\n    // Error Messages\r\n    updateAccountFail,\r\n    fullNameErrMsg,\r\n    emailErrMsg,\r\n    phoneErrMsg,\r\n    addressErrMsg,\r\n    passwordErrMsg,\r\n    oldPwdNotMatchErrMsg,\r\n    confirmPwdNotMatchErrMsg,\r\n    newPwdMatchOldPwd,\r\n    // Confirm Messages\r\n    // Context Actions\r\n    setTheme,\r\n    setLoading,\r\n    // Login page\r\n    loginYourAccount,\r\n    username,\r\n    password,\r\n    continueLogin,\r\n    forgotPassword,\r\n    dontHaveAccount,\r\n    copyrightBy,\r\n    // Patient Profile page\r\n    treatmentPlan,\r\n    history,\r\n    oralHealth,\r\n    medicalIssues,\r\n    noTreatmentsPending,\r\n    addRecord,\r\n    plaqueIndex,\r\n    bleedingIndex,\r\n    halitosis,\r\n    // Management\r\n    providers,\r\n    staffs,\r\n    practices,\r\n    document,\r\n    authentication,\r\n    referral,\r\n    procedure,\r\n    chairs,\r\n    schedule,\r\n    index,\r\n    fullname,\r\n    id,\r\n    birth,\r\n    gender,\r\n    address,\r\n    search,\r\n    code,\r\n    fee,\r\n    ins,\r\n    duration,\r\n    type,\r\n    abbr,\r\n    description,\r\n    // Settings\r\n    general,\r\n    account,\r\n    termPolicy,\r\n    location,\r\n    language,\r\n    english,\r\n    vietnamese,\r\n    theme,\r\n    light,\r\n    dark,\r\n    termPolicyFullText,\r\n    notifyStaffMessage,\r\n    notifyPatientMessage,\r\n    notifyHavingMeeting,\r\n    fullName,\r\n    email,\r\n    phone,\r\n    oldPassword,\r\n    newPassword,\r\n    confirmPassword,\r\n    templates,\r\n    drug,\r\n    //table\r\n    rowsPerPage,\r\n    // Date\r\n    defaultTimeFormat,\r\n    role,\r\n    number,\r\n    room,\r\n    provider,\r\n    portal,\r\n    date,\r\n    workTime,\r\n    note,\r\n    quantity,\r\n    aboutUs,\r\n    aboutUsContent,\r\n    save,\r\n};","F:\\react\\aDentalClinic\\src\\layouts\\RightSidebar\\jss.js",["699","700"],"const sidebarStyle = (theme) => ({ \r\n    rightSidebarWrapper: {\r\n      color: theme.fontColor,\r\n      width: theme.drawerRightWidth,\r\n      flexShrink: 0,\r\n      '& .MuiSvgIcon-root': {\r\n          color: theme.fontColor\r\n      },\r\n      '& .MuiDivider-root': {\r\n        backgroundColor: theme.fontColor,\r\n        height: '1px',\r\n        width: '90%',\r\n        margin: '0 auto'\r\n      }\r\n    },\r\n    drawer: {\r\n      '& .MuiDrawer-paper': {\r\n        backgroundColor: theme.primaryColor[0],\r\n        color: theme.fontColor,\r\n        overflow: 'hidden',\r\n      }\r\n    },\r\n    sidebarWrapper: {\r\n      position: \"relative\",\r\n      height: \"calc(100vh - 75px)\",\r\n      overflow: \"auto\",\r\n      width: theme.drawerRightWidth,\r\n      zIndex: \"4\",\r\n      overflowScrolling: \"touch\",\r\n      marginTop: '10px'\r\n    },\r\n    drawerOpen: {\r\n        width: theme.drawerRightWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.drawerRightCloseWidth,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.drawerRightCloseWidth + 10,\r\n        },\r\n    },\r\n    toggleBtn: {\r\n      borderRadius: '0px',\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: '1.7em'\r\n      } \r\n    },\r\n    rightSidebarCloseWrapper: {\r\n      width: theme.drawerRightCloseWidth,\r\n    },\r\n    sidebarContent: {\r\n      width: 0,\r\n      //display: 'none',\r\n      transition: theme.transitions.create('display', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      paddingLeft: theme.drawerRightCloseWidth + 20,\r\n      paddingRight: theme.drawerRightCloseWidth + 20,\r\n      transition: theme.transitions.create('padding', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    displayBlock: {\r\n      width: '100%',\r\n      //display: 'block',\r\n      transition: theme.transitions.create('display', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      transition: theme.transitions.create('padding', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    calendar: {\r\n      fontSize: '0.93em',\r\n      backgroundColor: theme.whiteColor,\r\n      color: theme.blackColor,\r\n    },\r\n    appointmentHolder: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0),\r\n      textAlign: 'center',\r\n    },\r\n    appointmentHolderBox: {\r\n      width: '100%',\r\n      minHeight: '100px',\r\n      backgroundColor: theme.whiteColor,\r\n      borderRadius: '10px',\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    todayAppoinment: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(0),\r\n      paddingRight: theme.spacing(0),\r\n      textAlign: 'center',\r\n    },\r\n    todayAppoinmentBox: {\r\n      width: '100%',\r\n      minHeight: '100px',\r\n      backgroundColor: theme.whiteColor,\r\n      borderRadius: '10px',\r\n      marginTop: theme.spacing(1)\r\n    }\r\n  });\r\n  \r\nexport default sidebarStyle;  ","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\FunctionList.js",["701"],"import React, {useState} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\n// Utils\r\nimport {disableClick} from '../../utils/general';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n      marginTop: \"0\",\r\n      paddingLeft: \"0\",\r\n      paddingTop: \"0\",\r\n      paddingBottom: \"0\",\r\n      marginBottom: \"0\",\r\n      listStyle: \"none\",\r\n      position: \"unset\"\r\n    },\r\n    listItem: {\r\n      width: '100%',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    listItemLink: {\r\n      margin: '0 auto',\r\n    },\r\n    listItemBtn: {\r\n      width: '60px',\r\n      height: '60px',\r\n      color: theme.whiteColor,\r\n      borderRadius: '5px',\r\n      backgroundColor: theme.primaryColor[2],\r\n      '& .MuiIconButton-label': {\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: '1.2em'\r\n        }\r\n      },\r\n      '&:hover': {\r\n        backgroundColor: theme.hoverBrightColor[0]\r\n      }\r\n    },\r\n}));\r\nconst FunctionList = ({functions}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.list}>\r\n            {functions.map((func, index) => {\r\n              return (\r\n                    <ListItem key={index} className={classes.listItem}>\r\n                        <NavLink\r\n                          to=\"/\"\r\n                          className={classes.listItemLink}\r\n                          onClick={disableClick}\r\n                        >\r\n                          {func}\r\n                        </NavLink>\r\n                    </ListItem>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n  }\r\n\r\nexport default FunctionList;","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\LinkList.js",["702"],"import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// Utils\r\nimport {activeRoute} from '../../utils/routes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n      marginTop: \"0\",\r\n      paddingLeft: \"0\",\r\n      paddingTop: \"0\",\r\n      paddingBottom: \"0\",\r\n      marginBottom: \"0\",\r\n      listStyle: \"none\",\r\n      position: \"unset\"\r\n    },\r\n    listItem: {\r\n      width: '100%',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    listItemLink: {\r\n      margin: '0 auto',\r\n    },\r\n    listItemBtn: {\r\n      width: '60px',\r\n      height: '60px',\r\n      color: theme.whiteColor,\r\n      borderRadius: '5px',\r\n      backgroundColor: theme.primaryColor[2],\r\n      '& .MuiIconButton-label': {\r\n        '& .MuiSvgIcon-root': {\r\n          fontSize: '1.2em'\r\n        }\r\n      },\r\n      '&:hover': {\r\n        backgroundColor: theme.hoverBrightColor[0]\r\n      }\r\n    },\r\n    activeRoute: {\r\n        borderLeft: `4px solid ${theme.fontColor}`\r\n    }\r\n}));\r\nconst LinkList = ({links}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.list}>\r\n            {links.map((path, index) => {\r\n                return (\r\n                    <ListItem key={index} className={clsx(classes.listItem, activeRoute(path.link) && classes.activeRoute)}>\r\n                        <NavLink\r\n                            to={path.link}\r\n                            className={classes.listItemLink}\r\n                        >\r\n                            <Tooltip title={path.text} aria-label={path.text}>\r\n                              <IconButton className={classes.listItemBtn} size=\"medium\">{path.icon}</IconButton>\r\n                            </Tooltip>\r\n                        </NavLink>\r\n                    </ListItem>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n  }\r\n\r\nexport default LinkList;","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationPopover.js",["703"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core \r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Components\r\nimport NotificationFuncPopover from './NotificationFuncPopover';\r\n\r\n// @material-ui/core Icons\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\r\n\r\n// Utils\r\nimport ConvertDateTimeUtils from '../../../utils/datetimes/convertDateTimes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: theme.notificationPopoverWidth + 'px',\r\n    minHeight: theme.notificationPopoverMinHeight + 'px',\r\n    maxHeight: theme.notificationPopoverMaxHeight + 'px',\r\n  },\r\n  list: {\r\n    width: '100%'\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  title: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingTop: theme.spacing(2),\r\n    fontWeight: 600\r\n  },\r\n  listItem: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      backgroundColor: theme.grayColor[11]\r\n    },\r\n    '&:hover .MuiSvgIcon-root': {\r\n      visibility: 'visible'\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '1.5em'\r\n    },\r\n  },\r\n  listItemTextNotRead: {\r\n    '& .MuiListItemText-secondary': {\r\n      color: theme.primaryColor[0]\r\n    }\r\n  },\r\n  listItemFunction: {\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '1em',\r\n      visibility: 'hidden',\r\n    },\r\n  },\r\n  noNotiDisplayWrapper: {\r\n    padding: theme.spacing(3),\r\n    fontStyle: 'italic',\r\n    textAlign: 'center',\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '2.5em',\r\n    },\r\n  }\r\n}));\r\n\r\nconst NotificationPopover = ({id, open, onClose, anchorEl, notifications, onNotificationClick, onRemoveNotification}) => {\r\n  const classes = useStyles();\r\n  const {t, i18n } = useTranslation();\r\n\r\n  const [openNotiFuncPopover, setOpenNotiFuncPopover] = useState(false);\r\n  const [notiFuncPopAnchorEl, setNotiFuncopAnchorEl] = useState(null);\r\n  const popOverId = openNotiFuncPopover? \"notification-function-popover\" : undefined;\r\n\r\n  // Notification to display Popover\r\n  const [chosenNotiFunc, setChosenNotiFunc] = useState(-1);\r\n\r\n  // Notifications Function Popover\r\n  const handleOpenNotiFuncPopover = (evt, notiId) => {\r\n    setNotiFuncopAnchorEl(evt.currentTarget);\r\n    setChosenNotiFunc(notiId);\r\n    setOpenNotiFuncPopover(true);\r\n  }\r\n\r\n  const handleCloseNotiFuncPopover = () => {\r\n    setNotiFuncopAnchorEl(null);\r\n    setChosenNotiFunc(-1);\r\n    setOpenNotiFuncPopover(false);\r\n  }\r\n\r\n  const handleRemoveNotification = () => {\r\n    onRemoveNotification(chosenNotiFunc);\r\n    handleCloseNotiFuncPopover();\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n        id={id}\r\n        open={open}\r\n        onClose={onClose}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        className={classes.root}\r\n    >\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h5\"\r\n          className={classes.title}\r\n          >\r\n          {t(strings.notifications)}\r\n        </Typography>\r\n        <List className={classes.list}>\r\n          {(notifications.length > 0)? \r\n            notifications.map((notification, index) => {\r\n              return (\r\n                <React.Fragment  key={index}>\r\n                  <ListItem alignItems=\"flex-start\" className={classes.listItem} onClick={(evt) => onNotificationClick(notification.id)}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <PersonIcon/>\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText \r\n                      className={clsx(!notification.isRead && classes.listItemTextNotRead)}\r\n                      primary={\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {notification.content}\r\n                        </Typography>\r\n                      } \r\n                      secondary={ConvertDateTimeUtils.formatDate(notification.date, \"MMMM DD, YYYY\") || '...'} />\r\n                      <Typography className={classes.listItemFunction} variant=\"div\" component=\"div\">\r\n                        <IconButton onClick={(evt) => handleOpenNotiFuncPopover(evt, notification.id)}>\r\n                          <MoreVertIcon/>\r\n                        </IconButton>\r\n                      </Typography>\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                </React.Fragment>\r\n              )\r\n            })\r\n           : \r\n           <div className={classes.noNotiDisplayWrapper}>\r\n            <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\">\r\n              <AddAlertIcon/> <br/>\r\n              {t(strings.noNotificationToDisplay)} ...\r\n            </Typography>\r\n           </div>\r\n          }\r\n        </List>\r\n        <NotificationFuncPopover\r\n          id={popOverId}\r\n          open={openNotiFuncPopover}\r\n          onClose={handleCloseNotiFuncPopover}\r\n          anchorEl={notiFuncPopAnchorEl}\r\n          onRemoveNotification={handleRemoveNotification}\r\n        />\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default NotificationPopover;","F:\\react\\aDentalClinic\\src\\components\\common\\CustomInput\\CustomInput.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\TreatmentMenu\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\TreatmentMenu\\LinkList.js",["704"],"F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\Location.js",["705","706","707","708","709"],"import React, {useState} from 'react';\r\nimport { makeStyles  } from \"@material-ui/core/styles\";\r\nimport strings from '../../../configs/strings';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\n\r\n// Component\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    map: {\r\n        width: '100%',\r\n        height: '100%',\r\n        minWidth: `${theme.mapMinWidth}px`,\r\n        minHeight: `${theme.mapMinHeight}px`,\r\n        border: `1px solid ${theme.blackColor}`,\r\n        borderRadius: '5px'\r\n    }\r\n}));\r\n\r\nconst Location = () => {\r\n  const classes = useStyles();\r\n  const {t, i18next} = useTranslation();\r\n\r\n  return (\r\n        <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919.630773293551!2d106.6799830146141!3d10.762912992330714!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31752f1c06f4e1dd%3A0x43900f1d4539a3d!2zVHLGsOG7nW5nIMSQ4bqhaSBo4buNYyBLaG9hIGjhu41jIFThu7Egbmhpw6puIC0gxJDhuqFpIGjhu41jIFF14buRYyBHaWEgVFAuSENN!5e0!3m2!1svi!2s!4v1615481248216!5m2!1svi!2s\" \r\n            className={classes.map}\r\n            allowFullScreen=\"\" \r\n            loading=\"lazy\">\r\n        </iframe>\r\n    )\r\n}\r\n\r\nexport default Location;","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\Notifications.js",["710","711","712"],"import React, {useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport strings from '../../../configs/strings';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// Component\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Notifications = () => {\r\n  const classes = useStyles();\r\n  const {t, i18next} = useTranslation();\r\n\r\n  // States\r\n  const [state, setState] = React.useState({\r\n    notifyStaffMessage: true,\r\n    notifyPatientMessage: false,\r\n    notifyHavingMeeting: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">{t(strings.notifications)}</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            className={classes.formControl}\r\n            control={<Switch checked={state.notifyStaffMessage} onChange={handleChange} name=\"notifyStaffMessage\" color=\"primary\"/>}\r\n            label={t(strings.notifyStaffMessage)}\r\n          />\r\n          <FormControlLabel\r\n            className={classes.formControl}\r\n            control={<Switch checked={state.notifyPatientMessage} onChange={handleChange} name=\"notifyPatientMessage\" color=\"primary\"/>}\r\n            label={t(strings.notifyPatientMessage)}\r\n          />\r\n          <FormControlLabel\r\n            className={classes.formControl}\r\n            control={<Switch checked={state.notifyHavingMeeting} onChange={handleChange} name=\"notifyHavingMeeting\" color=\"primary\"/>}\r\n            label={t(strings.notifyHavingMeeting)}\r\n          />\r\n        </FormGroup>\r\n      </FormControl>\r\n    )\r\n}\r\n\r\nexport default Notifications;","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\TermPrivacy.js",["713","714","715","716"],"import React, {useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport strings from '../../../configs/strings';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n// Html Parser\r\nimport HtmlParser from 'html-react-parser';\r\n\r\n// @material-ui/core Component\r\n\r\n// Component\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n}));\r\n\r\nconst TermPrivacy = () => {\r\n  const {t, i18next} = useTranslation();\r\n    return (\r\n        <p>\r\n          {HtmlParser(t(strings.termPolicyFullText))}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default TermPrivacy;","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\Account.js",["717","718","719","720","721","722"],"import React, {useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport strings from '../../../configs/strings';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Validate\r\nimport validators, { isPropValid } from '../../../utils/validators/index';\r\n\r\n// @material-ui/core Component\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n// Component\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRow: {\r\n    paddingLeft: '0 !important',\r\n    paddingRight: '0 !important',\r\n    marginBottom: `${theme.spacing(1)}px !important`\r\n  },\r\n  textFieldLabel: {\r\n    textAlign: 'right',\r\n    '& .MuiFormLabel-root': {\r\n      fontWeight: 600\r\n    }\r\n  },\r\n  submitBtn: {\r\n    display: 'block',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(10),\r\n    paddingRight: theme.spacing(10),\r\n    margin: 'auto',\r\n    color: theme.fontColor,\r\n    backgroundColor: theme.primaryColor[0],\r\n    '&:hover': {\r\n      backgroundColor: theme.hoverBrightColor[1]\r\n    }\r\n  },\r\n  formMessageSuccess: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n    color: theme.successColor[0],\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  formMessageFail: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n    color: theme.dangerColor[0],\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n  const {t, i18next} = useTranslation();\r\n\r\n  // States\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  // Error Messages\r\n  const [fullNameErrMsg, setFullNameErrMsg] = useState(\"\");\r\n  const [emailErrMsg, setEmailErrMsg] = useState(\"\");\r\n  const [phoneErrMsg, setPhoneErrMsg] = useState(\"\");\r\n  const [addressErrMsg, setAddressErrMsg] = useState(\"\");\r\n  \r\n  const [isSuccess, setIsSuccess] = useState(true);\r\n  const [resultMsg, setResultMsg] = useState(\"\");\r\n\r\n  const handleChangeFullName = (evt) => {\r\n    setFullName(evt.target.value);\r\n  }\r\n\r\n  const handleChangeEmail = (evt) => {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  const handleChangePhone = (evt) => {\r\n    setPhone(evt.target.value);\r\n  }\r\n\r\n  const handleChangeAddress = (evt) => {\r\n    setAddress(evt.target.value);\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    // Full name\r\n    if (!isPropValid(validators.properties.fullName, fullName)){\r\n      setFullNameErrMsg(t(strings.fullNameErrMsg));\r\n    } else {\r\n      setFullNameErrMsg(\"\");\r\n    }\r\n\r\n    // Email\r\n    if (!isPropValid(validators.properties.email, email)){\r\n      setEmailErrMsg(t(strings.emailErrMsg));\r\n    } else {\r\n      setEmailErrMsg(\"\");\r\n    }\r\n\r\n    // Phone\r\n    if (!isPropValid(validators.properties.phone, phone)){\r\n      setPhoneErrMsg(t(strings.phoneErrMsg));\r\n    } else {\r\n      setPhoneErrMsg(\"\");\r\n    }\r\n\r\n    // Address\r\n    if (!isPropValid(validators.properties.address, address)){\r\n      setAddressErrMsg(t(strings.addressErrMsg));\r\n    } else {\r\n      setAddressErrMsg(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={handleSubmit}>\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n        {/* Full Name */}\r\n        <Grid className={classes.gridRow} container justify=\"flex-start\" alignItems=\"center\" item xs={12} md={12} spacing={4}>\r\n          <Grid item md={2} sm={2} xs={2} className={classes.textFieldLabel}>\r\n            <FormLabel>{t(strings.fullName)}</FormLabel>\r\n          </Grid>\r\n          <Grid item md={8} sm={10} xs={10}>\r\n            <TextField\r\n              size=\"small\"\r\n              name=\"fullName\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"fullName\"\r\n              label={t(strings.fullName)}\r\n              autoFocus\r\n              value={fullName}\r\n              onChange={(evt) => handleChangeFullName(evt)}\r\n              className={classes.textField}\r\n              error={fullNameErrMsg !== \"\"}\r\n              helperText={fullNameErrMsg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Email */}\r\n        <Grid className={classes.gridRow} container justify=\"flex-start\" alignItems=\"center\" item xs={12} md={12} spacing={4}>\r\n          <Grid item md={2} sm={2} xs={2} className={classes.textFieldLabel}>\r\n            <FormLabel>{t(strings.email)}</FormLabel>\r\n          </Grid>\r\n          <Grid item md={8} sm={10} xs={10}>\r\n            <TextField\r\n              size=\"small\"\r\n              name=\"email\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label={t(strings.email)}\r\n              value={email}\r\n              onChange={(evt) => handleChangeEmail(evt)}\r\n              className={classes.textField}\r\n              error={emailErrMsg !== \"\"}\r\n              helperText={emailErrMsg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Phone */}\r\n        <Grid className={classes.gridRow} container justify=\"flex-start\" alignItems=\"center\" item md={12} spacing={4}>\r\n          <Grid item md={2} sm={2} xs={2} className={classes.textFieldLabel}>\r\n            <FormLabel>{t(strings.phone)}</FormLabel>\r\n          </Grid>\r\n          <Grid item md={8} sm={10} xs={10}>\r\n            <TextField\r\n              size=\"small\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"phone\"\r\n              label={t(strings.phone)}\r\n              value={phone}\r\n              onChange={(evt) => handleChangePhone(evt)}\r\n              className={classes.textField}\r\n              error={phoneErrMsg !== \"\"}\r\n              helperText={phoneErrMsg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Address */}\r\n        <Grid className={classes.gridRow} container justify=\"flex-start\" alignItems=\"center\" item md={12} spacing={4}>\r\n          <Grid item md={2} sm={2} xs={2} className={classes.textFieldLabel}>\r\n            <FormLabel>{t(strings.address)}</FormLabel>\r\n          </Grid>\r\n          <Grid item md={8} sm={10} xs={10}>\r\n            <TextField\r\n              size=\"small\"\r\n              name=\"address\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"address\"\r\n              label={t(strings.address)}\r\n              value={address}\r\n              onChange={(evt) => handleChangeAddress(evt)}\r\n              className={classes.textField}\r\n              error={addressErrMsg !== \"\"}\r\n              helperText={addressErrMsg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <FormHelperText\r\n        className={\r\n          (isSuccess)? classes.formMessageSuccess : classes.formMessageFail\r\n        }\r\n        error={!isSuccess}\r\n      >\r\n        {t(resultMsg)}\r\n      </FormHelperText>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        className={classes.submitBtn}\r\n      >\r\n        {t(strings.update)}\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Account;","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\General.js",["723","724","725","726","727","728"],"import React, {useState, useContext} from 'react';\r\nimport { makeStyles,  } from \"@material-ui/core/styles\";\r\nimport strings from '../../../configs/strings';\r\nimport lists from '../../../configs/lists';\r\n// use i18next\r\nimport i18n from '../../../i18n';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Context\r\nimport { loadingStore } from '../../../contexts/loading-context';\r\nimport { themeStore } from '../../../contexts/theme-context';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\n\r\n// @material-ui/core icons\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\n// Component\r\nimport SimpleCombobox from '../../common/SimpleComboBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    padding: 0,\r\n    '& .MuiListItem-root': {\r\n        paddingTop: 0\r\n    },\r\n    '& .MuiListItemText-root': {\r\n        marginTop: 0,\r\n        '& .MuiListItemText-primary': {\r\n            fontWeight: 600\r\n        },\r\n        '& .MuiButtonBase-root.MuiIconButton-root': {\r\n            marginLeft: theme.spacing(2),\r\n            paddingTop: theme.spacing(0.3)\r\n        }\r\n    },\r\n    changeIconBtn: {\r\n        \r\n        \r\n    }\r\n  }\r\n}));\r\n\r\nconst General = () => {\r\n  const classes = useStyles();\r\n  const {t, i18next} = useTranslation();\r\n  const {loadingState, dispatchLoading} = useContext(loadingStore);\r\n  const {themeState, dispatchTheme} = useContext(themeStore);\r\n\r\n  // States\r\n  const [openLanguagePopover, setOpenLanguagePopover] = useState(false);\r\n  const [languageAnchorEl, setLanguageAnchorEl] = useState(null);\r\n\r\n  const [openThemePopover, setOpenThemePopover] = useState(false);\r\n  const [themeAnchorEl, setThemeAnchorEl] = useState(null);\r\n\r\n  const languagePopoverId = 'language-popover-id';\r\n  const languages = Object.keys(i18n.services.resourceStore.data).map((language) => {{\r\n      return {\r\n        text: t(lists.languages[language]),\r\n        value: language\r\n      }\r\n    }\r\n  });\r\n\r\n  const themes = Object.keys(lists.themes).map((theme) => {{\r\n    return {\r\n      text: t(lists.themes[theme]),\r\n      value: theme\r\n    }\r\n  }\r\n});\r\n\r\n  const themePopoverId = 'theme-popover-id';\r\n\r\n  const handleOpenLanguagePopover = (event) => {\r\n    setOpenLanguagePopover(true);\r\n    setLanguageAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseLanguagePopover = () => {\r\n    setLanguageAnchorEl(null);\r\n    setOpenLanguagePopover(false);\r\n  };\r\n\r\n  const handleChangeLanguage = (value) => {\r\n    handleCloseLanguagePopover();\r\n    i18n.changeLanguage(value);\r\n  }\r\n\r\n  const handleOpenThemePopover = (event) => {\r\n    setOpenThemePopover(true);\r\n    setThemeAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseThemePopover = () => {\r\n    setThemeAnchorEl(null);\r\n    setOpenThemePopover(false);\r\n  };\r\n\r\n  const handleChangeTheme = (value) => {\r\n    handleCloseThemePopover();\r\n    dispatchTheme({type: strings.setTheme, theme: parseInt(value)});\r\n  }\r\n  \r\n  return (\r\n    <List className={classes.list}>\r\n        <ListItem key={0}>\r\n            <ListItemText\r\n                primary={\r\n                    <Grid container>\r\n                        <Grid item md={2} xs={3}>\r\n                            <span>{t(strings.language)}\r\n                            </span>\r\n                        </Grid>\r\n                        <Grid item md={2} xs={2}>\r\n                            <IconButton color=\"default\" aria-label=\"change language\" onClick={handleOpenLanguagePopover}>\r\n                                <BorderColorIcon className={classes.changeIconBtn} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                secondary={t(lists.languages[i18n.language])}\r\n            />\r\n        </ListItem>\r\n        <ListItem key={1}>\r\n            <ListItemText\r\n                primary={\r\n                    <Grid container>\r\n                        <Grid item md={2} xs={3}>\r\n                            <span>{t(strings.theme)}\r\n                            </span>\r\n                        </Grid>\r\n                        <Grid item md={2} xs={2}>\r\n                            <IconButton color=\"default\" aria-label=\"change theme\" onClick={handleOpenThemePopover}>\r\n                                <BorderColorIcon className={classes.changeIconBtn} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                secondary={t(lists.themes[themeState.type])}\r\n            />\r\n        </ListItem>\r\n        {/* Language Popover */}\r\n        <Popover \r\n            id={languagePopoverId}\r\n            open={openLanguagePopover}\r\n            anchorEl={languageAnchorEl}\r\n            onClose={handleCloseLanguagePopover}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            >\r\n            <SimpleCombobox list={languages} value={i18n.language} onChange={handleChangeLanguage}/>\r\n        </Popover>\r\n        {/* Theme Popover */}\r\n        <Popover \r\n            id={themePopoverId}\r\n            open={openThemePopover}\r\n            anchorEl={themeAnchorEl}\r\n            onClose={handleCloseThemePopover}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            >\r\n            <SimpleCombobox list={themes} value={themeState.type} onChange={handleChangeTheme}/>\r\n        </Popover>\r\n    </List>\r\n    )\r\n}\r\n\r\nexport default General;","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\Password.js",["729","730","731","732","733","734"],"import React, {useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport strings from '../../../configs/strings';\r\n// use i18next\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Validate\r\nimport validators, { isPropValid } from '../../../utils/validators/index';\r\n\r\n// @material-ui/core Component\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n// Component\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRow: {\r\n    paddingLeft: '0 !important',\r\n    paddingRight: '0 !important',\r\n    marginBottom: `${theme.spacing(1)}px !important`\r\n  },\r\n  textFieldLabel: {\r\n    textAlign: 'right',\r\n    '& .MuiFormLabel-root': {\r\n      fontWeight: 600\r\n    }\r\n  },\r\n  submitBtn: {\r\n    display: 'block',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(10),\r\n    paddingRight: theme.spacing(10),\r\n    margin: 'auto',\r\n    color: theme.fontColor,\r\n    backgroundColor: theme.primaryColor[0],\r\n    '&:hover': {\r\n      backgroundColor: theme.hoverBrightColor[1]\r\n    }\r\n  },\r\n  formMessageSuccess: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n    color: theme.successColor[0],\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  formMessageFail: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n    color: theme.dangerColor[0],\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nconst Password = () => {\r\n  const classes = useStyles();\r\n  const {t, i18next} = useTranslation();\r\n\r\n  // States\r\n  const [oldPwd, setOldPwd] = useState(\"\");\r\n  const [newPwd, setNewPwd] = useState(\"\");\r\n  const [confirmPwd, setConfirmPwd] = useState(\"\");\r\n\r\n  // Error Messages\r\n  const [oldPwdErrMsg, setOldPwdErrMsg] = useState(\"\");\r\n  const [newPwdErrMsg, setNewPwdErrMsg] = useState(\"\");\r\n  const [confirmPwdErrMsg, setConfirmPwdErrMsg] = useState(\"\");\r\n  \r\n  const [isSuccess, setIsSuccess] = useState(true);\r\n  const [resultMsg, setResultMsg] = useState(\"\");\r\n\r\n  const handleChangeOldPwd = (evt) => {\r\n    setOldPwd(evt.target.value);\r\n  }\r\n\r\n  const handleChangeNewPwd = (evt) => {\r\n    setNewPwd(evt.target.value);\r\n  }\r\n\r\n  const handleChangeConfirmPwd = (evt) => {\r\n    setConfirmPwd(evt.target.value);\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    // Old Pwd\r\n    if (!isPropValid(validators.properties.password, oldPwd)){\r\n      setOldPwdErrMsg(t(strings.passwordErrMsg));\r\n    } else {\r\n      if (0){\r\n\r\n      } else {\r\n        setOldPwdErrMsg(\"\");\r\n      }\r\n    }\r\n\r\n    // New Pwd\r\n    if (!isPropValid(validators.properties.password, newPwd)){\r\n      setNewPwdErrMsg(t(strings.passwordErrMsg));\r\n    } else {\r\n      if (newPwd === oldPwd){\r\n        setNewPwdErrMsg(t(strings.newPwdMatchOldPwd));\r\n      } else {\r\n        setNewPwdErrMsg(\"\");\r\n      }\r\n    }\r\n\r\n    // Confirm Pwd\r\n    if (!isPropValid(validators.properties.password, confirmPwd)){\r\n      setConfirmPwdErrMsg(t(strings.passwordErrMsg));\r\n    } else {\r\n      if (confirmPwd !== newPwd){\r\n        setConfirmPwdErrMsg(t(strings.confirmPwdNotMatchErrMsg));\r\n      } else {\r\n        setConfirmPwdErrMsg(\"\"); \r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={handleSubmit}>\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n        {/* Full Name */}\r\n        <Grid className={classes.gridRow} container justify=\"flex-start\" alignItems=\"center\" item xs={12} md={12} spacing={4}>\r\n          <Grid item md={2} sm={2} xs={2} className={classes.textFieldLabel}>\r\n            <FormLabel>{t(strings.oldPassword)}</FormLabel>\r\n          </Grid>\r\n          <Grid item md={8} sm={10} xs={10}>\r\n            <TextField\r\n              size=\"small\"\r\n              name=\"oldPwd\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"oldPwd\"\r\n              label={t(strings.oldPassword)}\r\n              type=\"password\"\r\n              autoFocus\r\n              value={oldPwd}\r\n              onChange={(evt) => handleChangeOldPwd(evt)}\r\n              className={classes.textField}\r\n              error={oldPwdErrMsg !== \"\"}\r\n              helperText={oldPwdErrMsg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Email */}\r\n        <Grid className={classes.gridRow} container justify=\"flex-start\" alignItems=\"center\" item xs={12} md={12} spacing={4}>\r\n          <Grid item md={2} sm={2} xs={2} className={classes.textFieldLabel}>\r\n            <FormLabel>{t(strings.newPassword)}</FormLabel>\r\n          </Grid>\r\n          <Grid item md={8} sm={10} xs={10}>\r\n            <TextField\r\n              size=\"small\"\r\n              name=\"newPwd\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"newPwd\"\r\n              label={t(strings.newPassword)}\r\n              type=\"password\"\r\n              value={newPwd}\r\n              onChange={(evt) => handleChangeNewPwd(evt)}\r\n              className={classes.textField}\r\n              error={newPwdErrMsg !== \"\"}\r\n              helperText={newPwdErrMsg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Phone */}\r\n        <Grid className={classes.gridRow} container justify=\"flex-start\" alignItems=\"center\" item md={12} spacing={4}>\r\n          <Grid item md={2} sm={2} xs={2} className={classes.textFieldLabel}>\r\n            <FormLabel>{t(strings.confirmPassword)}</FormLabel>\r\n          </Grid>\r\n          <Grid item md={8} sm={10} xs={10}>\r\n            <TextField\r\n              size=\"small\"\r\n              name=\"confirmPwd\"\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              id=\"confirmPwd\"\r\n              label={t(strings.confirmPassword)}\r\n              type=\"password\"\r\n              value={confirmPwd}\r\n              onChange={(evt) => handleChangeConfirmPwd(evt)}\r\n              className={classes.textField}\r\n              error={confirmPwdErrMsg !== \"\"}\r\n              helperText={confirmPwdErrMsg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <FormHelperText\r\n        className={\r\n          (isSuccess)? classes.formMessageSuccess : classes.formMessageFail\r\n        }\r\n        error={!isSuccess}\r\n      >\r\n        {t(resultMsg)}\r\n      </FormHelperText>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        className={classes.submitBtn}\r\n      >\r\n        {t(strings.update)}\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Password;","F:\\react\\aDentalClinic\\src\\components\\common\\CustomInput\\customInputStyle.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\index.js",["735","736","737","738","739","740"],"import React, {useState, useRef} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\n// @material-ui/core Icons\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\n\r\n// Components\r\n\r\n// Utils\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItemBtn: {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: theme.whiteColor,\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.primaryColor[2],\r\n        '& .MuiIconButton-label': {\r\n          '& .MuiSvgIcon-root': {\r\n            fontSize: '1.2em'\r\n          }\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: theme.hoverBrightColor[0]\r\n        }\r\n    },\r\n}));\r\nconst Notification = ({onOpen, popOverId, notiCount}) => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Tooltip title={t(strings.notifications)} aria-label={t(strings.notifications)}>\r\n            <IconButton className={classes.listItemBtn} size=\"medium\" onClick={(evt) => onOpen(evt)} aria-describedby={popOverId}>\r\n              <Badge badgeContent={notiCount} max={999} color=\"secondary\">\r\n                <NotificationsActiveIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default Notification;","F:\\react\\aDentalClinic\\src\\components\\common\\CustomAvatar\\index.js",["741","742"],"import React, {useState} from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport styles from \"./jss\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst CustomAvatar = ({link, src, text, classes}) => {\r\n    let inClasses = useStyles();\r\n    if (classes){\r\n        inClasses = Object.assign(inClasses, classes);\r\n    }\r\n\r\n    return (\r\n        <div className={inClasses.avatarWrapper}>\r\n            <a\r\n                href={link}\r\n                target=\"_blank\">\r\n                <Avatar alt=\"Jiwon\" src={src} className={inClasses.avatarLarge}></Avatar>\r\n                <div className={inClasses.avatarText}>{text}</div>\r\n            </a>\r\n        </div>\r\n    );\r\n  }\r\n\r\nexport default CustomAvatar;","F:\\react\\aDentalClinic\\src\\utils\\general\\index.js",["743"],"const disableClick = (evt) => {\r\n    evt.preventDefault();\r\n}\r\n\r\nexport {disableClick};\r\n\r\nexport default {\r\n    disableClick\r\n}","F:\\react\\aDentalClinic\\src\\components\\feature\\ToothChartPage\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\Footer\\index.js",["744","745","746","747"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n// use i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Component\r\nimport Copyright from './Copyright';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        display: \"flex\",\r\n        height: \"20vh\",\r\n    },\r\n    copyrightBox : {\r\n      alignSelf: \"flex-end\",\r\n      marginBottom: \"2rem\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    copyright : {\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"bold\",\r\n    }\r\n  }));\r\n\r\nconst Footer = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.footer}>\r\n            <Box mt={5} className={classes.copyrightBox}>\r\n                <Copyright />\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Footer;","F:\\react\\aDentalClinic\\src\\components\\common\\TabPanel\\index.js",["748","749","750","751","752"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\nexport default TabPanel","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\index.js",["753","754","755","756","757","758","759","760","761","762","763","764","765","766","767"],"import React, {useState, useEffect} from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../../configs/strings';\r\nimport figures from '../../../../configs/figures';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/core\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// React-Scheduler\r\nimport {\r\n  ViewState, GroupingState, IntegratedGrouping, IntegratedEditing, EditingState,\r\n} from '@devexpress/dx-react-scheduler';\r\n\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  GroupingPanel,\r\n  DayView,\r\n  WeekView,\r\n  DragDropProvider,\r\n  AppointmentForm,\r\n  Toolbar,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport {\r\n  teal, indigo,\r\n} from '@material-ui/core/colors';\r\n\r\n// Appointment\r\nimport CustomAppointmentContainer from './Appointment/CustomAppointmentContainer';\r\nimport CustomAppointment from './Appointment/CustomAppointment';\r\nimport CustomAppointmentTooltipHeader from './Appointment/CustomAppointmentTooltipHeader';\r\nimport CustomAppointmentTooltipContent from './Appointment/CustomAppointmentTooltipContent';\r\n// TimeTable\r\nimport CustomTimeTableCell from './TimeTable/CustomTimeTableCell';\r\nimport CustomTimeScaleLabel from './TimeTable/CustomTimeScaleLabel';\r\nimport CustomTimeScaleTicket from './TimeTable/CustomTimeScaleTicket';\r\nimport GroupingPanelCell from './TimeTable/GroupingPanelCell';\r\n// Toolbar\r\nimport CustomToolbarRow from './Toolbar/CustomToolbarRow';\r\nimport SchedulerMenuItems from './Toolbar/SchedulerMenuItems';\r\nimport CustomDateNavigatorButtons from './Toolbar/CustomDateNavigatorButtons';\r\nimport CustomDateNavigatorOpenButton from './Toolbar/CustomDateNavigatorOpenButton';\r\n\r\nimport Empty from '../../../common/Empty';\r\n\r\n// Dialogs\r\nimport MakeAppointmentDialog from './Appointment/MakeAppointmentDialog';\r\n\r\n// Utils\r\nimport {disableClick} from '../../../../utils/general';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    '& div div:last-child div div:last-child div div:first-child div table:': {\r\n      height: '100%'\r\n    },\r\n    '& div div:last-child div div:last-child div div:last-child table': {\r\n      height: '100%'\r\n    },\r\n    // Container\r\n    '& div div:last-child': {\r\n      paddingRight: '0.1px'\r\n    }\r\n  }\r\n}));\r\n\r\nconst generateTimeTable = (startDayHour, endDayHour, duration) => {\r\n  const numOfPeriods = (endDayHour - startDayHour) * Math.round(60 / duration);\r\n  const timeTable = {};\r\n  return timeTable;\r\n}\r\n\r\nconst calcTimeTableCellHeight = (containerHeight, startDayHour, endDayHour, duration) => {\r\n  const numOfPeriods = (endDayHour - startDayHour) * Math.round(60 / duration);\r\n  return Math.round(containerHeight * 100000 / numOfPeriods) / 100000;\r\n}\r\n\r\nconst Schedulerr = (props) => {\r\n  const classes = useStyles();\r\n  const [t, i18n] = useTranslation();\r\n\r\n  const appointments = [{\r\n    id: 0,\r\n    title: 'Watercolor Landscape',\r\n    chairId: 1,\r\n    startDate: new Date(2017, 4, 29, 7, 15),\r\n    endDate: new Date(2017, 4, 29, 9, 0),\r\n  }, {\r\n    id: 1,\r\n    title: 'Oil Painting for Beginners',\r\n    chairId: 2,\r\n    startDate: new Date(2017, 4, 29, 10, 30),\r\n    endDate: new Date(2017, 4, 29, 11, 30),\r\n  }, {\r\n    id: 2,\r\n    title: 'Testing',\r\n    chairId: 1,\r\n    startDate: new Date(2017, 4, 29, 10, 30),\r\n    endDate: new Date(2017, 4, 29, 11, 30),\r\n  }, {\r\n    id: 3,\r\n    title: 'Final exams',\r\n    chairId: 3,\r\n    startDate: new Date(2017, 4, 29, 12, 30),\r\n    endDate: new Date(2017, 4, 29, 13, 0),\r\n  }];\r\n  \r\n  \r\n  const chairs = [\r\n    { text: `${t(strings.chair)} 1`, id: 1 },\r\n    { text: `${t(strings.chair)} 2`, id: 2 },\r\n    { text: `${t(strings.chair)} 3`, id: 3 },\r\n    //{ text: '`${t(strings)} 4`, id: 4 },\r\n  ];\r\n  \r\n  // States\r\n  const [cellDuration, setCellDuration] = useState(figures.defaultCellDuration);\r\n  const [startDayHour, setStartDayHour] = useState(figures.defaultStartDayHour);\r\n  const [endDayHour, setEndDayHour] = useState(figures.defaultEndDayHour);\r\n  const [timeTable, setTimeTable] = useState(generateTimeTable(startDayHour, endDayHour, cellDuration));\r\n  const [timeTableCellHeight, setTimeTableCellHeight] = useState(calcTimeTableCellHeight(window.innerHeight - 130, startDayHour, endDayHour, cellDuration))\r\n  //const [chosenDuration, setChosenDuration] = useState(45);\r\n  //const [numOfChosenCell, setNumOfChosenCell] = useState(chosenDuration / cellDuration);\r\n\r\n  // Appointments Dialog\r\n  const [appointmentData, setAppointmentData] = useState({});\r\n  const [openAppointmentDialog, setOpenAppointmentDialog] = useState(false);\r\n\r\n  const data = appointments;\r\n  const resources = [\r\n    {\r\n      fieldName: 'chairId',\r\n      title: 'Chair',\r\n      instances: chairs,\r\n    }];\r\n  const grouping = [{\r\n      resourceName: 'chairId',\r\n  }];\r\n\r\n  const handleTimeTableCellClick = (info, startDate, endDate) => {\r\n    try {\r\n      setAppointmentData({\r\n        info: info,\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      });\r\n      handleOpenAppointmentDialog();\r\n    } catch(err){\r\n\r\n    }\r\n  }\r\n\r\n  const handleAppointmentTooltipEdit = (info, startDate, endDate) => {\r\n    info.text = chairs[info.chairId - 1].text;\r\n    handleTimeTableCellClick(info, startDate, endDate);\r\n  }\r\n\r\n  const handleAppointmentTooltipDelete = () => {\r\n    alert(\"Appointment Tooltip Delete\");\r\n  }\r\n\r\n  const handleOpenAppointmentDialog = () => {\r\n    setOpenAppointmentDialog(true);\r\n  };\r\n\r\n  const handleCloseAppointmentDialog = () => {\r\n    setOpenAppointmentDialog(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  const renderTimeTableCell = (props) => {\r\n    const endDay = new Date(props.endDate.toString());\r\n    const stateArr = timeTable[props.groupingInfo[0].id];\r\n    const numOfPeriods = 60 / cellDuration;\r\n    let index = (endDay.getHours() - startDayHour) * numOfPeriods + Math.round(endDay.getMinutes() / cellDuration);\r\n    index = (index > 0)? index - 1 : index;\r\n    return (\r\n      <CustomTimeTableCell \r\n      {...props} \r\n      cellHeight={timeTableCellHeight}\r\n      indexInRow={index} \r\n      //state={stateArr[index]} \r\n      onClick={handleTimeTableCellClick}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.paper}>\r\n        <Scheduler\r\n          data={data}\r\n        >\r\n          <ViewState\r\n            defaultCurrentDate=\"2017-05-29\"\r\n          />\r\n          <Toolbar\r\n            className={classes.Toolbar}\r\n            rootComponent={CustomToolbarRow}\r\n            flexibleSpaceComponent={\r\n              (props) => <SchedulerMenuItems {...props} numOfChair={2} onClick={disableClick}/>\r\n            }\r\n          />\r\n          <DateNavigator \r\n            openButtonComponent={CustomDateNavigatorOpenButton}\r\n            navigationButtonComponent={CustomDateNavigatorButtons}\r\n          />\r\n          \r\n          <GroupingState\r\n            grouping={grouping}\r\n          />\r\n\r\n          <DayView\r\n            startDayHour={startDayHour}\r\n            endDayHour={endDayHour}\r\n            cellDuration={cellDuration}\r\n            intervalCount={1}\r\n            height={0}\r\n            dayScaleRowComponent={Empty}\r\n            timeScaleLabelComponent={\r\n              (props) => <CustomTimeScaleLabel cellHeight={timeTableCellHeight} {...props}/>\r\n            }\r\n            timeTableCellComponent={renderTimeTableCell}\r\n            timeScaleTickCellComponent={\r\n              (props) => <CustomTimeScaleTicket cellHeight={timeTableCellHeight} {...props} />\r\n            }\r\n            \r\n          />\r\n          <Appointments \r\n            containerComponent={\r\n              (props) => <CustomAppointmentContainer width={100 / chairs.length} {...props}/>\r\n            }\r\n            appointmentComponent={\r\n              (props) => <CustomAppointment {...props}/>\r\n            }\r\n          />\r\n\r\n          <Resources\r\n            data={resources}\r\n            mainResourceName=\"chairId\"\r\n          />\r\n\r\n          <IntegratedGrouping />\r\n\r\n          <AppointmentTooltip \r\n            showOpenButton\r\n            showDeleteButton\r\n            showCloseButton\r\n            headerComponent={\r\n              (props) => <CustomAppointmentTooltipHeader {...props} \r\n              onEdit={handleAppointmentTooltipEdit} \r\n              onDelete={handleAppointmentTooltipDelete}/>\r\n            }\r\n            contentComponent={\r\n              (props) => <CustomAppointmentTooltipContent {...props}/>\r\n            }\r\n          />\r\n          <AppointmentForm />\r\n          <GroupingPanel \r\n            cellComponent={GroupingPanelCell}\r\n          />\r\n          {/*<DragDropProvider />*/}\r\n        </Scheduler>\r\n      </Paper>\r\n      <MakeAppointmentDialog\r\n        open={openAppointmentDialog}\r\n        onClose={handleCloseAppointmentDialog}\r\n        data={appointmentData}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Schedulerr;","F:\\react\\aDentalClinic\\src\\utils\\datetimes\\convertDateTimes.js",["768"],"import moment from 'moment';\r\n\r\nconst parseDate = (dateStr, formatStr, isStrict) => {\r\n    isStrict = isStrict || true;\r\n    const d = moment(dateStr, formatStr, isStrict);\r\n    if (!d._isValid){\r\n        return null;\r\n    };\r\n    return d._d;\r\n}\r\n\r\nconst formatDate = (date, formatStr) => {\r\n    return moment(date).format(formatStr);\r\n}\r\n\r\nconst formatDateStr = (dateStr, dateFormatStr, outFormatStr) => {\r\n    const d = moment(dateStr, dateFormatStr, true);\r\n    if (!d._isValid){\r\n        return \"\";\r\n    };\r\n    return d.format(outFormatStr);\r\n}\r\n\r\nexport default {\r\n    parseDate,\r\n    formatDate,\r\n    formatDateStr\r\n}","F:\\react\\aDentalClinic\\src\\components\\common\\Messenger\\PopupChat\\index.js",["769","770","771","772"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  Widget,\r\n  addResponseMessage,\r\n  addLinkSnippet,\r\n  addUserMessage,\r\n} from \"react-chat-widget\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport \"react-chat-widget/lib/styles.css\";\r\n\r\nimport logoADC from \"../../../../assets/images/logoADC.png\";\r\nimport styles from \"./jss\";\r\n\r\nconst PopupChat = () => {\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    addResponseMessage(\"Hi there\");\r\n    addUserMessage(\"Hello, how can I help you?\");\r\n    addResponseMessage(\"Can I reschedule my appointment this Wednesday?\");\r\n  }, []);\r\n\r\n  const handleNewUserMessage = (newMessage) => {\r\n    //console.log(`New message incoming! ${newMessage}`);\r\n    // Now send the message throught the backend API\r\n    addResponseMessage(\"The response for: \" + newMessage);\r\n  };\r\n  return (\r\n    <div className={classes.popupChatContainer}>\r\n      <Widget\r\n        handleNewUserMessage={handleNewUserMessage}\r\n        profileAvatar={logoADC}\r\n        title=\"Message\"\r\n        subtitle=\"From patient\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopupChat;\r\n","F:\\react\\aDentalClinic\\src\\utils\\validators\\index.js",["773"],"import Joi from 'joi';\r\n\r\n// Properties\r\nconst properties = {\r\n    fullName: \"fullName\",\r\n    email: \"Email\",\r\n    phone: \"phone\",\r\n    address: \"address\",\r\n    password: \"password\"\r\n}\r\n\r\n// Schemas\r\nconst fullNameSchema = Joi.string()\r\n    .alphanum()\r\n    .min(3)\r\n    .max(30)\r\n    .required();\r\nconst emailSchema = Joi.string()\r\n    .email({ minDomainSegments: 2, tlds: { allow: ['com', 'net', 'vn'] } })\r\n    .required();\r\nconst phoneSchema = Joi.string()\r\n    .pattern(new RegExp('^[0-9]*$'))\r\n    .min(10)\r\n    .max(15)\r\n    .required();\r\nconst addressSchema = Joi.string()\r\n    .min(5)\r\n    .max(300)\r\n    .required();\r\n\r\nconst passwordSchema = Joi.string()\r\n    .min(6)\r\n    .max(100)\r\n    .required();\r\n\r\nconst isPropValid = (type, value) => {\r\n    let schema = Joi.string();\r\n    switch(type){\r\n        case properties.fullName: \r\n            schema = fullNameSchema;\r\n            break;\r\n        case properties.email: \r\n            schema = emailSchema;\r\n            break;\r\n        case properties.phone: \r\n            schema = phoneSchema;\r\n            break;\r\n        case properties.address: \r\n            schema = addressSchema;\r\n            break;\r\n        case properties.password:\r\n            schema = passwordSchema;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    const {error} = schema.validate(value);\r\n    return error===undefined;\r\n}\r\n\r\nexport {isPropValid, properties}\r\nexport default {\r\n    isPropValid,\r\n    properties,\r\n}","F:\\react\\aDentalClinic\\src\\components\\common\\CustomAvatar\\jss.js",[],"F:\\react\\aDentalClinic\\src\\utils\\routes\\index.js",["774"]," // verifies if routeName is the one active (in browser input)\r\nconst activeRoute = (routeName) => {\r\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\r\n}\r\n\r\nexport {activeRoute};\r\n\r\nexport default {\r\n    activeRoute: activeRoute\r\n}","F:\\react\\aDentalClinic\\src\\components\\common\\SimpleComboBox\\index.js",["775","776","777"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n// @material-ui/core/icons\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  listItem: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(10),\r\n  },\r\n  listItemSecondaryAction: {\r\n    right: '10px'\r\n  },\r\n  checkIcon: {\r\n    color: theme.successColor[0]\r\n  }\r\n}));\r\n\r\nconst SimpleCombobox = ({list, value, onChange, classes}) => {\r\n  let inClasses = useStyles();\r\n  if (classes){\r\n      inClasses = Object.assign(inClasses, classes);\r\n  }\r\n\r\n  const handleOnChange = (val) => {\r\n    if (value != val){\r\n      onChange(val);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <List className={inClasses.list} component=\"nav\" aria-label=\"simple-combobox\">\r\n      {list.map((el, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <ListItem button className={inClasses.listItem} onClick={() => handleOnChange(el.value)}>\r\n              <ListItemText primary={el.text} secondary={el.secondary || \"\"} />\r\n              {(value == el.value)? <ListItemSecondaryAction className={inClasses.listItemSecondaryAction}>\r\n                                      <CheckIcon className={inClasses.checkIcon} />\r\n                                    </ListItemSecondaryAction> \r\n              :\r\n              ''}\r\n            </ListItem>\r\n            <Divider/>\r\n          </React.Fragment>\r\n        )\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default SimpleCombobox","F:\\react\\aDentalClinic\\src\\components\\common\\Messenger\\PopupChat\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\MakeAppointmentDialog.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomDateNavigatorButtons.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomDateNavigatorOpenButton.js",["778","779","780"],"\r\nimport React, {memo}  from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { \r\n  TableRow, \r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n    DateNavigator,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n// Material UI Icons\r\nimport EventSeatIcon from '@material-ui/icons/EventSeat';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  openBtn: {\r\n    color: theme.whiteColor,\r\n    fontSize: '1.2em'\r\n  },\r\n}));\r\n\r\nconst CustomDateNavigatorOpenButton = memo(({ ...restProps }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <DateNavigator.OpenButton\r\n      className={classes.openBtn}\r\n      {...restProps}\r\n    >\r\n    </DateNavigator.OpenButton>\r\n  );\r\n});\r\n\r\nexport default CustomDateNavigatorOpenButton","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\SchedulerMenuItems.js",["781","782"],"\r\nimport React, {memo}  from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport strings from '../../../../../configs/strings';\r\n\r\n// @material-ui/core\r\nimport { \r\n  Box\r\n} from '@material-ui/core';\r\nimport {\r\n  \r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n// Material UI Icons\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolBarItem: {\r\n    borderLeft: `2px solid ${theme.whiteColor}`,\r\n    fontSize: '1.2em',\r\n    fontWeight: '600',\r\n    cursor: 'pointer'\r\n  },\r\n  itemIcon: {\r\n    verticalAlign: 'text-bottom',\r\n    fontSize: '1.2em',\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst SchedulerMenuItems = ({ numOfChair, onClick }) => {\r\n  const classes = useStyles();\r\n  const [t, i18n] = useTranslation();\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"flex-start\" pt={0} pb={0}>\r\n        <Box p={1} pl={4} pr={4} className={classes.toolBarItem} onClick={onClick}>\r\n          <FilterListIcon className={classes.itemIcon}/>\r\n           {t(strings.chairs)} ({numOfChair})\r\n        </Box>\r\n        <Box p={1} pl={4} pr={4} className={classes.toolBarItem} onClick={onClick}>\r\n          <AssignmentIndIcon className={classes.itemIcon}/>\r\n          {t(strings.all)}\r\n        </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SchedulerMenuItems","F:\\react\\aDentalClinic\\src\\components\\common\\Empty\\index.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Toolbar\\CustomToolbarRow.js",["783","784"],"\r\nimport React, {memo}  from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { \r\n  TableRow, \r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  Toolbar,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n// Material UI Icons\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    backgroundColor: theme.primaryColor[3],\r\n    color: theme.whiteColor,\r\n    borderTopLeftRadius: '10px',\r\n    borderTopRightRadius: '10px',\r\n    maxHeight: '45px',\r\n    minHeight: '10px'\r\n  }\r\n}));\r\n\r\nconst CustomToolbarRow = memo(({ group, ...restProps }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Toolbar.Root\r\n        {...restProps}\r\n        className={classes.toolbar}\r\n    >\r\n    </Toolbar.Root>\r\n  );\r\n});\r\n\r\nexport default CustomToolbarRow","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeScaleLabel.js",["785","786"],"\r\nimport React, {memo}  from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { \r\n\r\n} from '@material-ui/core';\r\nimport strings from '../../../../../configs/strings';\r\nimport {\r\n    DayView,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n// Material UI Icons\r\n\r\n// utils\r\nimport ConvertDateTimes from '../../../../../utils/datetimes/convertDateTimes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    timeScaleLabel: {\r\n        position: 'relative',\r\n        overflow: 'visible',\r\n        '& span': {\r\n          fontSize: '0.8em',\r\n          position: 'absolute',\r\n          top: '3px',\r\n          right: '5px'\r\n        }\r\n    }\r\n}));\r\n\r\nconst CustomTimeScaleLabel = memo(({ cellHeight, time, formatDate, ...restProps }) => {\r\n  const classes = useStyles();\r\n  let displayTime = \"\";\r\n  if (time){\r\n    const timeMinute = time.getMinutes();\r\n    if (timeMinute == 0 || timeMinute == 30){\r\n      displayTime = time;\r\n    }\r\n  }\r\n  const timeScaleLabelStyle = {\r\n    height: `${cellHeight}px`,\r\n      lineHeight: `${cellHeight - 2}px`,\r\n      \"&:firstChild\": {\r\n        height: `${Math.round(cellHeight * 100000/ 2) / 100000}px`\r\n      },\r\n      \"&:lastChild\": {\r\n        height: `${Math.round(cellHeight * 100000/ 2) / 100000}px`\r\n    }\r\n  }\r\n  return (\r\n    <DayView.TimeScaleLabel\r\n        className={classes.timeScaleLabel}\r\n        style={timeScaleLabelStyle}\r\n        time={displayTime}\r\n        formatDate={(date, options) => ConvertDateTimes.formatDate(date, strings.defaultTimeFormat)}\r\n        {...restProps}\r\n    >\r\n      {(displayTime)? \"\" : \"-\"}\r\n    </DayView.TimeScaleLabel>\r\n  );\r\n});\r\n\r\nexport default CustomTimeScaleLabel","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeScaleTicket.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\CustomTimeTableCell.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\TimeTable\\GroupingPanelCell.js",["787","788"],"\r\nimport React, {memo}  from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { \r\n  TableRow, \r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  GroupingPanel,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n// Material UI Icons\r\nimport EventSeatIcon from '@material-ui/icons/EventSeat';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerCell: {\r\n    backgroundColor: theme.primaryColor[0],\r\n    color: theme.whiteColor,\r\n    fontSize: '1.0em',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    height: '30px'\r\n  },\r\n  chairIcon: {\r\n    verticalAlign: 'text-top',\r\n    marginLeft: '5px',\r\n    fontSize: '1.2em'\r\n  }\r\n}));\r\n\r\nconst GroupingPanelCell = memo(({ group, ...restProps }) => {\r\n  const classes = useStyles();\r\n  const textStyle = {\r\n    color: '#ffffff',\r\n    fontSize: '1.1em',\r\n  };\r\n  return (\r\n    <GroupingPanel.Cell\r\n      className={classes.headerCell}\r\n      textStyle={textStyle}\r\n      group={group}\r\n      {...restProps}\r\n    >\r\n      <EventSeatIcon className={classes.chairIcon}/>\r\n    </GroupingPanel.Cell>\r\n  );\r\n});\r\n\r\nexport default GroupingPanelCell","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentTooltipContent.js",["789"],"\r\nimport React, {memo}  from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { \r\n\r\n} from '@material-ui/core';\r\nimport {\r\n    AppointmentTooltip,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n// Material UI Icons\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n}));\r\n\r\nconst CustomAppointmentTooltipContent = memo(({...restProps }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppointmentTooltip.Content\r\n      {...restProps}\r\n    >\r\n    </AppointmentTooltip.Content>\r\n  );\r\n});\r\n\r\nexport default CustomAppointmentTooltipContent","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentTooltipHeader.js",["790"],"\r\nimport React, {memo}  from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { \r\n\r\n} from '@material-ui/core';\r\nimport {\r\n    AppointmentTooltip,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n// Material UI Icons\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n}));\r\n\r\nconst CustomAppointmentTooltipHeader = memo(({ onEdit, onDelete, appointmentData, onHide, ...restProps }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppointmentTooltip.Header\r\n      {...restProps}\r\n      onHide={onHide}\r\n      onOpenButtonClick={() => {\r\n        onEdit({\r\n          id: appointmentData.id,\r\n          chairId: appointmentData.chairId,\r\n        },\r\n        appointmentData.startDate.toString(),\r\n        appointmentData.endDate.toString()\r\n        )\r\n      }}\r\n      onDeleteButtonClick={() => {\r\n        onDelete();\r\n        onHide();\r\n      }}\r\n    >\r\n    </AppointmentTooltip.Header>\r\n  );\r\n});\r\n\r\nexport default CustomAppointmentTooltipHeader","F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointment.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Dashboard\\Scheduler\\Appointment\\CustomAppointmentContainer.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\Footer\\Copyright.js",["791","792","793"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport strings from '../../configs/strings';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    copyright : {\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"bold\",\r\n    }\r\n  }));\r\n\r\nconst Copyright = () => {\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.copyright}>\r\n        {t(strings.copyrightBy)} {' '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Hcmus student\r\n        </Link>\r\n      </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright;","F:\\react\\aDentalClinic\\src\\configs\\lists.js",["794"],"import strings from './strings';\r\nimport ThemeType from '../utils/types/Theme';\r\n\r\n// Languages\r\nconst languages = {\r\n    \"en\": strings.english,\r\n    \"vn\": strings.vietnamese\r\n};\r\n\r\n// Theme\r\nconst themes = {};\r\nthemes[ThemeType.LIGHT] = strings.light;\r\nthemes[ThemeType.DARK] = strings.dark;\r\n\r\nexport default {\r\n    languages,\r\n    themes\r\n}","F:\\react\\aDentalClinic\\src\\layouts\\LeftSidebar\\Notification\\NotificationFuncPopover.js",["795","796"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport strings from '../../../configs/strings';\r\n// @material-ui/core \r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemAvatar';\r\n\r\n// @material-ui/core Icons\r\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiSvgIcon-root': {\r\n        fontSize: '2em'\r\n    }\r\n  }\r\n}));\r\n\r\nconst NotificationFuncPopover = ({id, open, onClose, anchorEl, onRemoveNotification}) => {\r\n  const classes = useStyles();\r\n  const {t, i18n } = useTranslation();\r\n\r\n  return (\r\n    <Popover\r\n        id={id}\r\n        open={open}\r\n        onClose={onClose}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        className={classes.root}\r\n    >\r\n        <List className={classes.list}>\r\n            <ListItem key={0} button onClick={() => onRemoveNotification()}>\r\n                <ListItemIcon>\r\n                    <CancelPresentationIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={t(strings.removeNotification)} />\r\n            </ListItem>\r\n        </List>\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default NotificationFuncPopover;","F:\\react\\aDentalClinic\\src\\components\\feature\\Settings\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\PatientReportPage\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\LoginPage\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\PatientProfilePage\\jss.js",["797"],"import loginBackground from \"../../../assets/images/loginBackground.png\";\r\nconst loginStyle = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n  },\r\n  //color: theme.primaryColor[0],\r\n  headerInfo: {\r\n    height: \"20vh\",\r\n  },\r\n  oralHeathContainer: {\r\n    height: \"40vh\",\r\n  },\r\n  detailProfileContainer: {\r\n    height: \"80vh\",\r\n  },\r\n  medicalIssuesContainer: {\r\n    height: \"60vh\",\r\n  },\r\n  TabsContainer: {\r\n      width: \"100%\"\r\n  }\r\n});\r\n\r\nexport default loginStyle;\r\n","F:\\react\\aDentalClinic\\src\\components\\feature\\Staffs\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Procedure\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Referral\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Providers\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\index.js",["798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819"],"import React,{useEffect,useState} from 'react';\r\nimport {\r\n  useParams,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport routePaths from '../../routes/path';\r\n\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Grid,\r\n    AppBar,\r\n    Tabs,\r\n    Tab,\r\n    Link \r\n} from '@material-ui/core';\r\n\r\n//import image\r\nimport DentalProvider from \"../../assets/images/dentalProvider.png\";\r\nimport DentalPractice from \"../../assets/images/dentalPractice.png\";\r\nimport DentalStaff from \"../../assets/images/dentalStaff.png\";\r\nimport DentalProcedure from \"../../assets/images/dentalProcedure.png\";\r\nimport DentalChair from \"../../assets/images/dentalChair.png\";\r\nimport DentalReferral from \"../../assets/images/dentalReferral.png\";\r\nimport DentalSchedule from \"../../assets/images/calendar.png\";\r\nimport Authentication from \"../../assets/images/authentication.png\";\r\nimport Document from \"../../assets/images/document.png\";\r\nimport Templates from \"../../assets/images/templates.png\";\r\nimport Drug from \"../../assets/images/drug.png\";\r\nimport Portal from \"../../assets/images/portal.png\";\r\n\r\nimport MenuBarItem from \"./MenuBarItem\";\r\nimport darkTheme from \"../../themes/darkTheme\";\r\nimport strings from \"../../configs/strings\";\r\n//import components\r\nimport Arrow from \"./Arrow\";\r\nimport styles from \"./jss\";\r\nimport TabPanel from \"./TabPanel\";\r\n// import Providers from \"../../components/feature/Providers\";\r\n// import Staffs from \"../../components/feature/Staffs\";\r\n// import Schedule from \"../../components/feature/Schedule\";\r\n// import Procedure from \"../../components/feature/Procedure\";\r\n// import Chairs from \"../../components/feature/Chair\";\r\n// import Referral from \"../../components/feature/Referral\";\r\n// import Practices from \"../../components/feature/Practice\";\r\n// import Authentication from \"../../components/feature/Authentication\";\r\n// import Templates from \"../../components/feature/Template\";\r\n// import Drug from \"../../components/feature/Drug\";\r\n// import Portal from \"../../components/feature/Portal\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst renderMenu = (list) =>\r\n  list.map( (item,index) => {\r\n    \r\n\r\n    return <MenuBarItem name={item.name} index={index} path={item.path} src={item.src}/>;\r\n});\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `scrollable-force-tab-${index}`,\r\n      'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst MenuBar=()=>{\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles(darkTheme);\r\n    \r\n    const ArrowLeft = Arrow({ text: '<', className: classes.arrowLeft });\r\n    const ArrowRight = Arrow({ text: '>', className: classes.arrowRight });\r\n    // const history = useHistory();\r\n    // const { management } = useParams();\r\n\r\n    // useEffect(() => {\r\n    //   if (!management){\r\n    //     history.push(routePaths.managements + \"/providers\");\r\n    //   }\r\n    // })\r\n    // const managements = [\"providers\", \"staffs\", \"schedule\", \"procedure\", \"chairs\", \"referral\",\r\n    //                   \"practices\",\"authentication\",\r\n    //                   \"templates\",\"drug\",\"portal\"];\r\n\r\n    // let curManagement = managements.indexOf(management);\r\n    // if (curManagement == -1){\r\n    //   history.push(routePaths.managementsPath + \"/providers\");\r\n    //   curManagement = 0;\r\n    // }\r\n\r\n    //state\r\n    // const [value, setValue] = useState(0);\r\n    // const [tabValue, setTabValue] = useState(curManagement);\r\n    // const handleChangeTab = (event, newValue) => {\r\n    //   history.push(routePaths.managementsPath + \"/\" + managements[newValue]);\r\n    //   setTabValue(newValue);\r\n    // };\r\n    // const handleChange = (event, newValue) => {\r\n    //   setValue(newValue);\r\n    // };\r\n    const tabs = [t(strings.providers), \r\n                  t(strings.staffs), \r\n                  t(strings.schedule), \r\n                  t(strings.procedure), \r\n                  t(strings.chairs), \r\n                  t(strings.referral),\r\n                  t(strings.practices),\r\n                  t(strings.authentication),\r\n                  t(strings.templates),\r\n                  t(strings.drug),\r\n                  t(strings.portal)];\r\n    // const tablePanels = [\r\n    //   <Providers/>,\r\n    //   <Staffs/>,\r\n    //   <Schedule/>,\r\n    //   <Procedure/>,\r\n    //   <Chairs/>,\r\n    //   <Referral/>,\r\n    //   <Practices/>,\r\n    //   <Authentication/>,\r\n    //   <Templates/>,\r\n    //   <Drug/>,\r\n    //   <Portal/>,\r\n      \r\n    // ]\r\n    const list=[\r\n        {name:t(strings.providers),path:'/providers',src:DentalProvider,index:0},\r\n        {name:t(strings.staffs),path:'/staffs',src:DentalStaff,index:1},\r\n        {name:t(strings.schedule),path:'/schedule',src:DentalSchedule,index:2},\r\n        {name:t(strings.procedure),path:'/procedure',src:DentalProcedure,index:3},\r\n        {name:t(strings.chairs),path:'/chairs',src:DentalChair,index:4},\r\n        {name:t(strings.referral),path:'/referral',src:DentalReferral,index:5},\r\n        {name:t(strings.practices),path:'/practices',src:DentalPractice,index:6},\r\n        {name:t(strings.authentication),path:'/authentication',src:Authentication,index:7},\r\n        {name:t(strings.templates),path:'/templates',src:Templates,index:8},\r\n        {name:t(strings.drug),path:'/drug',src:Drug,index:9},\r\n        {name:t(strings.portal),path:'/portal',src:Portal,index:10},\r\n    ]\r\n        \r\n\r\n    // ]\r\n    // const itemOne=()=>{\r\n    //     return <MenuBarItem name={t(strings.providers)} index={1} path='/providers' src={DentalProvider}/>;\r\n    // }\r\n    // const itemTwo=()=>{\r\n    //     return <MenuBarItem name={t(strings.staffs)} index={2} path='/staffs' src={DentalStaff}/>;\r\n    // }\r\n    // const itemFour=()=>{\r\n    //     return <MenuBarItem name={t(strings.procedure)} index={4} path='/procedure' src={DentalProcedure}/>;\r\n    // }\r\n    const menuItems=renderMenu(list);\r\n    return(\r\n        <div className={classes.container}>\r\n                \r\n               \r\n       \r\n                <ScrollMenu\r\n                    data={menuItems}    \r\n                    // arrowLeft={ArrowLeft}\r\n                    // arrowRight={ArrowRight}\r\n\r\n                >\r\n\r\n                </ScrollMenu>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default withRouter(MenuBar);","F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\MenuBarItem\\index.js",["820","821","822","823","824","825","826","827"],"import React from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport {Typography,\r\n    Container,\r\n    Grid,\r\n    Tab,\r\n}\r\nfrom '@material-ui/core';\r\nimport styles from \"./jss\";\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nconst MenuBarItem=(props)=>{\r\n    const {t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n        <NavLink\r\n                        to={props.path}\r\n                        className={classes.link}\r\n                        activeClassName={classes.activeLink}\r\n                    >\r\n                        <Container className={props.index===0 ? classes.menuItemFirst: classes.menuItem}>\r\n                            <img className={classes.menuItemImage} src={props.src}></img>\r\n                            <Typography variant=\"body2\"  >\r\n                                {props.name}\r\n                            </Typography>\r\n                        </Container>\r\n                        \r\n        </NavLink>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default MenuBarItem;\r\n","F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\MenuBarItem\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\Arrow\\index.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Authentication\\index.js",["828","829","830","831","832","833","834"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(index,id,fullname,role,gender,address)=>{\r\n    return {index,id,fullname,role,gender,address};\r\n};\r\nconst rows = [\r\n    createData(1,'1712320', \"Dat\", \"Admin\", \"Male\", \"HCM sadfasdf ads fsda fasd fads fasd fa asd asdas das dasdasdasdasdsadasdsadasdasdas\"),\r\n    createData(2,'1712321', \"Doan\", \"Customer\", \"Male\", \"HCM\"),\r\n    createData(3,'1712322', \"Thai\", \"Customer\", \"Male\", \"HCM\"),\r\n    createData(4,'1712323', \"Dan\", \"Customer\", \"Male\", \"HCM\"),\r\n    createData(5,'1712324', \"Cuong\", \"Customer\", \"Male\", \"HCM\"),\r\n    createData(6,'1712325', \"Vong\", \"Customer\", \"Male\", \"HCM\"),\r\n    createData(7,'1712326', \"Hung\", \"Customer\", \"Male\", \"HCM\"),\r\n    createData(8,'1712327', \"The\", \"Customer\", \"Male\", \"HCM\"),\r\n    createData(9,'1712328', \"Anh\", \"Customer\", \"Male\", \"HCM\"),\r\n    createData(10,'1712329', \"Nguyen\", \"Customer\", \"Female\", \"HCM\"),\r\n    createData(11,'1712330', \"TangsadasdsadlsakdlaskjdlkasjlkdjaskldjaskljdlkasjdlksajkdlasjTangsadasdsadlsakdlaskjdlkasjlkdjaskldjaskljdlkasjdlksajkdlasjTangsadasdsadlsakdlaskjdlkasjlkdjaskldjaskljdlkasjdlksajkdlasjTangsadasdsadlsakdlaskjdlkasjlkdjaskldjaskljdlkasjdlksajkdlasj\", \"Customer\", \"Female\", \"HCM\"),\r\n    createData(12,'1712331', \"Vu asdsa das dasd sad sad sad asd asd asd asdsadas das  asd asdsa dasd as\", \"Customer\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\n\r\nconst Authentication = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.authentication)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.id)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.fullname)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.role)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.gender)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.address)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1+page*rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell className={classes.itemFullname}>\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.role}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authentication;","F:\\react\\aDentalClinic\\src\\components\\feature\\Authentication\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Chair\\index.js",["835","836","837","838","839","840","841","842","843","844","845","846"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,provider,number,room,description)=>{\r\n    return {id,provider,number,room,description};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"3\", \"1\", \"HCM sadfasdf ads fsda fasd fads fasd fa asd asdas das dasdasdasdasdsadasdsadasdasdas\"),\r\n    createData('1712321', \"Doan\", \"4\", \"1\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"5\", \"1\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"6\", \"1\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"11\", \"1\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"13\", \"1\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"22\", \"1\", \"HCM\"),\r\n    createData('1712327', \"The\", \"333\", \"1\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"11\", \"2\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"222\", \"3\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"333\", \"33\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"11\", \"44\", \"HCM\"),\r\n\r\n\r\n];\r\n\r\nconst Chairs = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.chair)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.id)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.provider)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.number)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.room)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.description)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1+page*rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.provider}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.number}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.room}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.description}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chairs;","F:\\react\\aDentalClinic\\src\\components\\feature\\Chair\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Schedule\\index.js",["847","848","849","850","851","852","853","854","855","856","857","858"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,provider,date,workTime,note)=>{\r\n    return {id,provider,date,workTime,note};\r\n};\r\nconst rows = [\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"7:00\", \"Fulltime\"),\r\n    createData('1712321', \"Doan\", \"03/01/1999\", \"7:00\", \"Fulltime\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"7:00\", \"Fulltime\"),\r\n    createData('1712323', \"Dan\", \"02/01/1999\", \"7:00\", \"Fulltime\"),\r\n    createData('1712324', \"Cuong\", \"02/01/1999\", \"7:00\", \"Fulltime\"),\r\n    createData('1712325', \"Vong\", \"02/01/1999\", \"7:00\", \"Fulltime\"),\r\n    createData('1712326', \"Hung\", \"02/01/1999\", \"7:00\", \"Part-time\"),\r\n    createData('1712327', \"The\", \"04/01/1999\", \"7:00\", \"Part-time\"),\r\n    createData('1712328', \"Anh\", \"05/01/1999\", \"7:00\", \"Part-time\"),\r\n    createData('1712329', \"Nguyen\", \"06/01/1999\", \"7:00\", \"Part-time\"),\r\n    createData('1712330', \"Tang\", \"02/01/1999\", \"7:00\", \"Part-time\"),\r\n    createData('1712331', \"Vu\", \"02/01/1999\", \"7:00\", \"Part-time\"),\r\n\r\n\r\n];\r\n\r\nconst Schedule = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.schedule)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.id)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.provider)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.date)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.workTime)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.note)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1 +page * rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.provider}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.date}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.worktime}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.note}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Schedule;","F:\\react\\aDentalClinic\\src\\components\\feature\\Schedule\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Drug\\index.js",["859","860","861","862","863","864","865","866","867","868","869","870"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,name,quantity,date,patient)=>{\r\n    return {id,name,quantity,date,patient};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Drug 01\", \"Good\", \"02/01/2020\", \"Dat\"),\r\n    createData('1712321', \"Drug 02\", \"Good\", \"03/01/2020\", \"Doan\"),\r\n    createData('1712322', \"Drug 03\", \"Good\", \"04/01/2020\", \"Vu\"),\r\n    createData('1712323', \"Drug 04\", \"Good\", \"05/01/2020\", \"Tien\"),\r\n    createData('1712324', \"Drug 05\", \"Good\", \"06/01/2020\", \"Ho\"),\r\n    createData('1712325', \"Drug 06\", \"Good\", \"07/01/2020\", \"Sy\"),\r\n    createData('1712326', \"Drug 07\", \"Good\", \"08/01/2020\", \"Thai\"),\r\n    createData('1712327', \"Drug 08\", \"Good\", \"09/01/2020\", \"Cuong\"),\r\n    createData('1712328', \"Drug 09\", \"Good\", \"10/01/2020\", \"Vong\"),\r\n    createData('1712329', \"Drug 10\", \"Good\", \"11/01/2020\", \"Tang\"),\r\n    createData('1712330', \"Drug 11\", \"Good\", \"12/01/2020\", \"Hung\"),\r\n    createData('1712331', \"Drug 12\", \"Good\", \"13/01/2020\", \"Dan\"),\r\n\r\n\r\n];\r\n\r\n\r\n\r\nconst Drug = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.drug)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.id)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.name)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.quantity)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.date)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.patient)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1+page*rowsPerPage}\r\n\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.quantity}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.date}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.patient}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drug;","F:\\react\\aDentalClinic\\src\\components\\feature\\Drug\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Portal\\index.js",["871","872","873","874","875","876","877","878","879","880","881","882"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\n\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\nimport TablePaginationActions from \"../../../layouts/TablePaginationActions\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst createData=(id,fullname,birth,gender,address)=>{\r\n    return {id,fullname,birth,gender,address};\r\n};\r\nconst rows = [\r\n    createData('1712320', \"Dat\", \"01/01/1999\", \"Male\", \"HCM sadfasdf ads fsda fasd fads fasd fa asd asdas das dasdasdasdasdsadasdsadasdasdas\"),\r\n    createData('1712321', \"Doan\", \"02/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712322', \"Thai\", \"03/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712323', \"Dan\", \"04/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712324', \"Cuong\", \"05/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712325', \"Vong\", \"06/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712326', \"Hung\", \"07/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712327', \"The\", \"08/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712328', \"Anh\", \"09/01/1999\", \"Male\", \"HCM\"),\r\n    createData('1712329', \"Nguyen\", \"10/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712330', \"Tang\", \"11/01/1999\", \"Female\", \"HCM\"),\r\n    createData('1712331', \"Vu\", \"12/01/1999\", \"Female\", \"HCM\"),\r\n\r\n\r\n];\r\n\r\n\r\nconst Portal = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [searchText,setSearchText]=useState(null);\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            \r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.portal)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} className={classes.serviceControl}>\r\n                        <FormControl variant=\"filled\">\r\n\r\n                            <OutlinedInput\r\n                                className={classes.searchControl}\r\n                                id=\"outlined-adornment-password\"\r\n                                type={'text'}\r\n                                value={searchText}\r\n                                defaultValue={t(strings.search)}\r\n                                onChange={handleChangeSearchText}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon className={classes.iconButton} />\r\n\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <IconButton  >\r\n                            <FilterList />\r\n\r\n                        </IconButton>\r\n                        <IconButton >\r\n                            <AddBox />            \r\n\r\n                        </IconButton>\r\n                    </Grid>\r\n                    \r\n                    \r\n                </Grid>\r\n                \r\n                <Container style={{marginLeft:\"10px\"}}>\r\n                \r\n               \r\n                <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.index)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} align=\"center\">\r\n                                {t(strings.id)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.fullname)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.birth)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn} >\r\n                                {t(strings.gender)}\r\n                            </TableCell>\r\n                            <TableCell className={classes.titleColumn}>\r\n                                {t(strings.address)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(rowsPerPage > 0\r\n                            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : rows\r\n                        ).map((row,index) => (\r\n                            <TableRow key={row.id}>\r\n                                \r\n                                <TableCell align=\"center\">\r\n                                    {index+1+page*rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.fullname}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.birth}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.gender}\r\n                                </TableCell>\r\n                                <TableCell >\r\n                                    {row.address}\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n          )}\r\n                    </TableBody>\r\n            <TableFooter style={{marginLeft:\"300px\"}}>\r\n                <TableRow>\r\n              \r\n                    <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                    colSpan={3}\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage={t(strings.rowsPerPage)}\r\n\r\n                    />\r\n                </TableRow>\r\n                \r\n            </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        \r\n                </Container>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portal;","F:\\react\\aDentalClinic\\src\\components\\feature\\Portal\\jss.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Practice\\index.js",["883","884","885","886","887"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n//import icon\r\nimport {AccountBox,\r\n        LocationCity,\r\n        LocationOn,\r\n        Assignment,\r\n        \r\n} from \"@material-ui/icons\";\r\n//import image\r\nimport Logo from \"../../../assets/images/logo_iDental.png\";\r\nimport {Grid,\r\n    Typography,\r\n    FormControl,\r\n    OutlinedInput,\r\n    InputAdornment,\r\n    Button,\r\n} from '@material-ui/core';\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import component\r\nimport MenuBar from \"../../../layouts/MenuBar\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Practice = () => {\r\n    const {t, i18n } = useTranslation();\r\n\r\n    const classes = useStyles(darkTheme);\r\n    const [name,setName]=useState(\"Name\");\r\n    const [organization,setOrganization]=useState(\"Organization\");\r\n    const [location,setLocation]=useState(\"Location\");\r\n    const [hotline,setHotline]=useState(\"Hotline\");\r\n    const [description,setDescription]=useState(\"Description\");\r\n\r\n    const handleChangeLocation=(e)=>{\r\n        setLocation(e.target.value);\r\n    }\r\n    const handleChangeHotline=(e)=>{\r\n        setHotline(e.target.value);\r\n    }\r\n    const handleChangeDescription=(e)=>{\r\n        setDescription(e.target.value);\r\n    }\r\n    const handleChangeOrganization=(e)=>{\r\n        setOrganization(e.target.value);\r\n    }\r\n    const handleChangeName=(e)=>{\r\n        setName(e.target.value);\r\n    }\r\n    return (\r\n        <div className={classes.container}>\r\n            {/* <MenuBar/> */}\r\n            <div className={classes.content}>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            {t(strings.practices)}\r\n                        </Typography>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n                <div className={classes.logo}>\r\n                    <img src={Logo} />\r\n                </div>\r\n                <Grid container>\r\n                    <Grid item xs={6} className={classes.leftContent}>\r\n                        <Typography className={classes.title} variant=\"h5\">\r\n                            {t(strings.general)}\r\n                        </Typography>\r\n                        <div>\r\n                            <FormControl variant=\"filled\">\r\n                                \r\n                                <OutlinedInput\r\n                                    className={classes.inputControl}\r\n                                    id=\"outlined-adornment-password\"\r\n                                    type={'text'}\r\n                                    value={name}\r\n                                    onChange={handleChangeName}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                        <AccountBox className={classes.iconButton} />\r\n\r\n                                    </InputAdornment>\r\n                                }\r\n                                />\r\n                            </FormControl>\r\n                        \r\n                        </div>\r\n\r\n                        <div>\r\n                            <FormControl variant=\"filled\">\r\n                                \r\n                                <OutlinedInput\r\n                                    className={classes.inputControl}\r\n                                    id=\"outlined-adornment-password\"\r\n                                    type={'text'}\r\n                                    value={organization}\r\n                                    onChange={handleChangeOrganization}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                        <LocationCity className={classes.iconButton} />\r\n\r\n                                    </InputAdornment>\r\n                                }\r\n                                />\r\n                            </FormControl>\r\n                    \r\n                        </div>\r\n                        <div>\r\n                            <FormControl variant=\"filled\">\r\n                                \r\n                                <OutlinedInput\r\n                                    className={classes.inputControl}\r\n                                    id=\"outlined-adornment-password\"\r\n                                    type={'text'}\r\n                                    value={location}\r\n                                    onChange={handleChangeLocation}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                        <LocationOn className={classes.iconButton} />\r\n\r\n                                    </InputAdornment>\r\n                                }\r\n                                />\r\n                            </FormControl>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <FormControl variant=\"filled\">\r\n                                \r\n                                <OutlinedInput\r\n                                    className={classes.inputControl}\r\n                                    id=\"outlined-adornment-password\"\r\n                                    type={'text'}\r\n                                    value={hotline}\r\n                                    onChange={handleChangeHotline}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                        <AccountBox className={classes.iconButton} />\r\n\r\n                                    </InputAdornment>\r\n                                }\r\n                                />\r\n                            </FormControl>\r\n                        \r\n                        </div>\r\n                        <div>\r\n                            <FormControl variant=\"filled\">\r\n                                \r\n                                <OutlinedInput\r\n                                    className={classes.inputControl}\r\n                                    id=\"outlined-adornment-password\"\r\n                                    type={'text'}\r\n                                    value={description}\r\n                                    onChange={handleChangeDescription}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                        <Assignment className={classes.iconButton} />\r\n\r\n                                    </InputAdornment>\r\n                                }\r\n                                />\r\n                            </FormControl>\r\n                    \r\n                        </div>\r\n                        <Button variant=\"contained\" color=\"primary\" className={classes.saveButton}>\r\n                                {t(strings.save)}\r\n                        </Button>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.rightContent}>\r\n                        <Typography className={classes.rightContentTitle} variant=\"h5\">\r\n                            {t(strings.aboutUs)}\r\n                        </Typography>\r\n                        <Typography className={classes.rightContentText} variant=\"subtitle2\">\r\n                            {t(strings.aboutUsContent)}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Practice;","F:\\react\\aDentalClinic\\src\\components\\feature\\Practice\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\TablePaginationActions\\index.js",["888"],"import React,{useState} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport styles from \"./jss\";\r\n\r\n\r\n import IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst TablePaginationActions=(props)=> {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n}\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\nexport default TablePaginationActions;","F:\\react\\aDentalClinic\\src\\layouts\\TablePaginationActions\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\MenuBar\\TabPanel\\index.js",[],"F:\\react\\aDentalClinic\\src\\components\\feature\\Template\\index.js",["889"],"import React,{useState} from 'react';\r\n\r\nconst Template=(props)=>{\r\n    return(\r\n        <div>\r\n            Templates\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Template;","F:\\react\\aDentalClinic\\src\\components\\feature\\Management\\index.js",["890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport {\r\n    useParams,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\n//translation\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\n// @material-ui/core Component\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TablePagination,\r\n    TableRow,\r\n    TableHead,\r\n    Paper,\r\n    TextField,\r\n    InputLabel ,\r\n    InputAdornment,\r\n    FormControl,\r\n    FilledInput,\r\n    OutlinedInput,\r\n    Tabs,\r\n    Tab,\r\n\r\n } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport styles from \"./jss\";\r\nimport darkTheme from \"../../../themes/darkTheme\";\r\n//import configs\r\nimport strings from \"../../../configs/strings\";\r\n//import image\r\nimport DentalProvider from \"../../../assets/images/dentalProvider.png\";\r\nimport DentalPractice from \"../../../assets/images/dentalPractice.png\";\r\nimport DentalStaff from \"../../../assets/images/dentalStaff.png\";\r\nimport DentalProcedure from \"../../../assets/images/dentalProcedure.png\";\r\nimport DentalChair from \"../../../assets/images/dentalChair.png\";\r\nimport DentalReferral from \"../../../assets/images/dentalReferral.png\";\r\nimport DentalSchedule from \"../../../assets/images/calendar.png\";\r\nimport AuthenticationImage from \"../../../assets/images/authentication.png\";\r\nimport TemplatesImage from \"../../../assets/images/templates.png\";\r\nimport DrugImage from \"../../../assets/images/drug.png\";\r\nimport PortalImage from \"../../../assets/images/portal.png\";\r\n//import icons\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\n//import route\r\nimport routePaths from '../../../routes/path';\r\n\r\n//import components\r\n\r\nimport Authentication from \"../Authentication\";\r\nimport Chair from \"../Chair\";\r\nimport Drug from \"../Drug\";\r\nimport Portal from \"../Portal\";\r\nimport Procedure from \"../Procedure\";\r\nimport Providers from \"../Providers\";\r\nimport Referral from \"../Referral\";\r\nimport Schedule from \"../Schedule\";\r\nimport Staffs from \"../Staffs\";\r\nimport Practice from \"../Practice\";\r\nimport Template from \"../Template\"; \r\nimport TabPanel from \"../../../layouts/TabPanel\";\r\nimport Footer from \"../../../layouts/Footer\";\r\nconst useStyles = makeStyles(styles);\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst Management = () => {\r\n    const classes = useStyles();\r\n    const {t, i18n } = useTranslation();\r\n    const history = useHistory();\r\n    const { management } = useParams();\r\n\r\n    const managements = [\"providers\", \"staffs\", \"schedule\", \"procedure\", \"chairs\", \"referral\",\r\n                      \"practices\",\"authentication\",\r\n                      \"templates\",\"drug\",\"portal\"];\r\n    let curManagement = managements.indexOf(management);\r\n    if (curManagement == -1){\r\n      history.push(routePaths.managementsPath + \"/providers\");\r\n      curManagement = 0;\r\n    }\r\n    //states\r\n    const [value, setValue] = useState(curManagement);\r\n    const handleChange = (event, newValue) => {\r\n        history.push(routePaths.managementsPath + \"/\" + managements[newValue]);\r\n\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n      if (!management){\r\n        history.push(routePaths.managementsPath + \"/providers\");\r\n      }\r\n    })\r\n\r\n    \r\n    \r\n    const tabs = [t(strings.providers), \r\n        t(strings.staffs), \r\n        t(strings.schedule), \r\n        t(strings.procedure), \r\n        t(strings.chairs), \r\n        t(strings.referral),\r\n        t(strings.practices),\r\n        t(strings.authentication),\r\n        t(strings.templates),\r\n        t(strings.drug),\r\n        t(strings.portal)];\r\n    const srcs=[\r\n        DentalProvider,\r\n        DentalStaff,\r\n        DentalSchedule,\r\n        DentalProcedure,\r\n        DentalChair,\r\n        DentalReferral,\r\n        DentalPractice,\r\n        AuthenticationImage,\r\n        TemplatesImage,\r\n        DrugImage,\r\n        PortalImage,\r\n    ];\r\n    const tablePanels=[\r\n        <Providers />,\r\n        <Staffs />,\r\n        <Schedule />,\r\n        <Procedure />,\r\n        <Chair/>,\r\n        <Referral />,\r\n        <Practice/>,\r\n        <Authentication/>,\r\n        <Template/>,\r\n        <Drug />,\r\n        <Portal/>,\r\n    ];\r\n    return (\r\n        <div className={classes.container}>\r\n            <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n                aria-label=\"scrollable auto tabs example\"\r\n            >\r\n            {(tabs.map((tab, index) => {\r\n                        return <Tab key={index} className={classes.tab} label={tab} {...a11yProps(index)} \r\n                                icon={<img src={srcs[index]} className={classes.menuItemImage}/>}   />\r\n                                        \r\n                                \r\n                    }))}\r\n          \r\n        </Tabs>\r\n        {(tablePanels).map((tPanel, index) => {\r\n                  return <TabPanel key={index} value={value} index={index}>\r\n                            {tPanel}\r\n                        </TabPanel>\r\n        })}\r\n        <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Management;","F:\\react\\aDentalClinic\\src\\layouts\\TabPanel\\index.js",["918","919","920"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport styles from \"./jss\";\r\n\r\nimport {Tabs,\r\n    Tab,\r\n    Box,\r\n    Typography,\r\n    \r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        className={classes.item}\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default TabPanel;","F:\\react\\aDentalClinic\\src\\components\\feature\\Management\\jss.js",[],"F:\\react\\aDentalClinic\\src\\layouts\\TabPanel\\jss.js",[],{"ruleId":"921","replacedBy":"922"},{"ruleId":"923","replacedBy":"924"},{"ruleId":"925","severity":1,"message":"926","line":2,"column":3,"nodeType":"927","messageId":"928","endLine":2,"endColumn":13},{"ruleId":"925","severity":1,"message":"929","line":4,"column":8,"nodeType":"927","messageId":"928","endLine":4,"endColumn":12},{"ruleId":"925","severity":1,"message":"930","line":20,"column":10,"nodeType":"927","messageId":"928","endLine":20,"endColumn":24},{"ruleId":"925","severity":1,"message":"931","line":20,"column":26,"nodeType":"927","messageId":"928","endLine":20,"endColumn":39},{"ruleId":"932","severity":1,"message":"933","line":22,"column":9,"nodeType":"934","messageId":"935","endLine":27,"endColumn":10},{"ruleId":"936","severity":1,"message":"937","line":28,"column":7,"nodeType":"938","messageId":"939","endLine":29,"endColumn":32},{"ruleId":"940","severity":1,"message":"941","line":10,"column":1,"nodeType":"942","endLine":18,"endColumn":2},{"ruleId":"925","severity":1,"message":"943","line":11,"column":8,"nodeType":"927","messageId":"928","endLine":11,"endColumn":17},{"ruleId":"925","severity":1,"message":"944","line":12,"column":8,"nodeType":"927","messageId":"928","endLine":12,"endColumn":14},{"ruleId":"925","severity":1,"message":"945","line":13,"column":8,"nodeType":"927","messageId":"928","endLine":13,"endColumn":17},{"ruleId":"925","severity":1,"message":"946","line":14,"column":8,"nodeType":"927","messageId":"928","endLine":14,"endColumn":16},{"ruleId":"925","severity":1,"message":"947","line":15,"column":8,"nodeType":"927","messageId":"928","endLine":15,"endColumn":22},{"ruleId":"925","severity":1,"message":"948","line":16,"column":8,"nodeType":"927","messageId":"928","endLine":16,"endColumn":14},{"ruleId":"925","severity":1,"message":"949","line":17,"column":8,"nodeType":"927","messageId":"928","endLine":17,"endColumn":16},{"ruleId":"925","severity":1,"message":"950","line":18,"column":8,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"951","line":19,"column":8,"nodeType":"927","messageId":"928","endLine":19,"endColumn":12},{"ruleId":"925","severity":1,"message":"952","line":20,"column":8,"nodeType":"927","messageId":"928","endLine":20,"endColumn":16},{"ruleId":"925","severity":1,"message":"953","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":15},{"ruleId":"925","severity":1,"message":"954","line":30,"column":27,"nodeType":"927","messageId":"928","endLine":30,"endColumn":42},{"ruleId":"940","severity":1,"message":"941","line":3,"column":1,"nodeType":"942","endLine":132,"endColumn":2},{"ruleId":"955","severity":1,"message":"956","line":101,"column":9,"nodeType":"957","messageId":"958","endLine":101,"endColumn":18},{"ruleId":"940","severity":1,"message":"941","line":3,"column":1,"nodeType":"942","endLine":132,"endColumn":2},{"ruleId":"955","severity":1,"message":"956","line":101,"column":9,"nodeType":"957","messageId":"958","endLine":101,"endColumn":18},{"ruleId":"940","severity":1,"message":"941","line":1,"column":1,"nodeType":"942","endLine":4,"endColumn":2},{"ruleId":"940","severity":1,"message":"941","line":186,"column":1,"nodeType":"942","endLine":231,"endColumn":3},{"ruleId":"940","severity":1,"message":"941","line":177,"column":1,"nodeType":"942","endLine":214,"endColumn":3},{"ruleId":"959","severity":1,"message":"960","line":1,"column":15,"nodeType":"961","messageId":"962","endLine":15,"endColumn":1649},{"ruleId":"959","severity":1,"message":"960","line":1,"column":15,"nodeType":"961","messageId":"962","endLine":14,"endColumn":1527},{"ruleId":"963","severity":1,"message":"964","line":9,"column":26,"nodeType":"961","messageId":"965","endLine":9,"endColumn":27,"suggestions":"966"},{"ruleId":"925","severity":1,"message":"926","line":1,"column":26,"nodeType":"927","messageId":"928","endLine":1,"endColumn":36},{"ruleId":"925","severity":1,"message":"967","line":4,"column":9,"nodeType":"927","messageId":"928","endLine":4,"endColumn":15},{"ruleId":"925","severity":1,"message":"968","line":7,"column":8,"nodeType":"927","messageId":"928","endLine":7,"endColumn":12},{"ruleId":"925","severity":1,"message":"969","line":9,"column":22,"nodeType":"927","messageId":"928","endLine":9,"endColumn":30},{"ruleId":"925","severity":1,"message":"970","line":34,"column":15,"nodeType":"927","messageId":"928","endLine":34,"endColumn":19},{"ruleId":"925","severity":1,"message":"971","line":38,"column":12,"nodeType":"927","messageId":"928","endLine":38,"endColumn":24},{"ruleId":"925","severity":1,"message":"972","line":38,"column":26,"nodeType":"927","messageId":"928","endLine":38,"endColumn":41},{"ruleId":"925","severity":1,"message":"973","line":5,"column":8,"nodeType":"927","messageId":"928","endLine":5,"endColumn":17},{"ruleId":"925","severity":1,"message":"974","line":2,"column":8,"nodeType":"927","messageId":"928","endLine":2,"endColumn":12},{"ruleId":"925","severity":1,"message":"970","line":35,"column":15,"nodeType":"927","messageId":"928","endLine":35,"endColumn":19},{"ruleId":"975","severity":1,"message":"976","line":115,"column":29,"nodeType":"977","messageId":"958","endLine":115,"endColumn":31},{"ruleId":"975","severity":1,"message":"978","line":123,"column":79,"nodeType":"977","messageId":"958","endLine":123,"endColumn":81},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"983","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"984","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":25},{"ruleId":"925","severity":1,"message":"985","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":26},{"ruleId":"925","severity":1,"message":"986","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"987","line":31,"column":8,"nodeType":"927","messageId":"928","endLine":31,"endColumn":17},{"ruleId":"925","severity":1,"message":"953","line":45,"column":8,"nodeType":"927","messageId":"928","endLine":45,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":70,"column":15,"nodeType":"927","messageId":"928","endLine":70,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"983","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"984","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":25},{"ruleId":"925","severity":1,"message":"985","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":26},{"ruleId":"925","severity":1,"message":"986","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"987","line":31,"column":8,"nodeType":"927","messageId":"928","endLine":31,"endColumn":17},{"ruleId":"925","severity":1,"message":"953","line":45,"column":8,"nodeType":"927","messageId":"928","endLine":45,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":70,"column":15,"nodeType":"927","messageId":"928","endLine":70,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"983","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"984","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":25},{"ruleId":"925","severity":1,"message":"985","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":26},{"ruleId":"925","severity":1,"message":"986","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"987","line":31,"column":8,"nodeType":"927","messageId":"928","endLine":31,"endColumn":17},{"ruleId":"925","severity":1,"message":"953","line":45,"column":8,"nodeType":"927","messageId":"928","endLine":45,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":71,"column":15,"nodeType":"927","messageId":"928","endLine":71,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"983","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"984","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":25},{"ruleId":"925","severity":1,"message":"985","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":26},{"ruleId":"925","severity":1,"message":"986","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"987","line":31,"column":8,"nodeType":"927","messageId":"928","endLine":31,"endColumn":17},{"ruleId":"925","severity":1,"message":"953","line":45,"column":8,"nodeType":"927","messageId":"928","endLine":45,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":70,"column":15,"nodeType":"927","messageId":"928","endLine":70,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"988","line":14,"column":8,"nodeType":"927","messageId":"928","endLine":14,"endColumn":24},{"ruleId":"925","severity":1,"message":"989","line":15,"column":8,"nodeType":"927","messageId":"928","endLine":15,"endColumn":16},{"ruleId":"925","severity":1,"message":"990","line":18,"column":8,"nodeType":"927","messageId":"928","endLine":18,"endColumn":11},{"ruleId":"925","severity":1,"message":"991","line":20,"column":8,"nodeType":"927","messageId":"928","endLine":20,"endColumn":24},{"ruleId":"925","severity":1,"message":"992","line":23,"column":8,"nodeType":"927","messageId":"928","endLine":23,"endColumn":19},{"ruleId":"925","severity":1,"message":"993","line":24,"column":8,"nodeType":"927","messageId":"928","endLine":24,"endColumn":14},{"ruleId":"925","severity":1,"message":"970","line":37,"column":15,"nodeType":"927","messageId":"928","endLine":37,"endColumn":19},{"ruleId":"994","severity":1,"message":"995","line":57,"column":46,"nodeType":"996","endLine":57,"endColumn":63},{"ruleId":"925","severity":1,"message":"974","line":2,"column":8,"nodeType":"927","messageId":"928","endLine":2,"endColumn":12},{"ruleId":"925","severity":1,"message":"997","line":19,"column":8,"nodeType":"927","messageId":"928","endLine":19,"endColumn":25},{"ruleId":"925","severity":1,"message":"998","line":20,"column":8,"nodeType":"927","messageId":"928","endLine":20,"endColumn":18},{"ruleId":"925","severity":1,"message":"999","line":21,"column":8,"nodeType":"927","messageId":"928","endLine":21,"endColumn":22},{"ruleId":"925","severity":1,"message":"1000","line":23,"column":8,"nodeType":"927","messageId":"928","endLine":23,"endColumn":20},{"ruleId":"925","severity":1,"message":"1001","line":24,"column":8,"nodeType":"927","messageId":"928","endLine":24,"endColumn":21},{"ruleId":"925","severity":1,"message":"1002","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"1003","line":36,"column":10,"nodeType":"927","messageId":"928","endLine":36,"endColumn":22},{"ruleId":"925","severity":1,"message":"970","line":41,"column":14,"nodeType":"927","messageId":"928","endLine":41,"endColumn":18},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"1004","line":7,"column":8,"nodeType":"927","messageId":"928","endLine":7,"endColumn":15},{"ruleId":"925","severity":1,"message":"1005","line":8,"column":8,"nodeType":"927","messageId":"928","endLine":8,"endColumn":15},{"ruleId":"925","severity":1,"message":"979","line":10,"column":26,"nodeType":"927","messageId":"928","endLine":10,"endColumn":31},{"ruleId":"925","severity":1,"message":"1006","line":11,"column":8,"nodeType":"927","messageId":"928","endLine":11,"endColumn":14},{"ruleId":"925","severity":1,"message":"1007","line":12,"column":8,"nodeType":"927","messageId":"928","endLine":12,"endColumn":19},{"ruleId":"925","severity":1,"message":"980","line":13,"column":8,"nodeType":"927","messageId":"928","endLine":13,"endColumn":17},{"ruleId":"925","severity":1,"message":"988","line":14,"column":8,"nodeType":"927","messageId":"928","endLine":14,"endColumn":24},{"ruleId":"925","severity":1,"message":"989","line":15,"column":8,"nodeType":"927","messageId":"928","endLine":15,"endColumn":16},{"ruleId":"925","severity":1,"message":"1008","line":16,"column":8,"nodeType":"927","messageId":"928","endLine":16,"endColumn":12},{"ruleId":"925","severity":1,"message":"990","line":18,"column":8,"nodeType":"927","messageId":"928","endLine":18,"endColumn":11},{"ruleId":"925","severity":1,"message":"991","line":20,"column":8,"nodeType":"927","messageId":"928","endLine":20,"endColumn":24},{"ruleId":"925","severity":1,"message":"1009","line":21,"column":8,"nodeType":"927","messageId":"928","endLine":21,"endColumn":18},{"ruleId":"925","severity":1,"message":"1010","line":22,"column":8,"nodeType":"927","messageId":"928","endLine":22,"endColumn":22},{"ruleId":"925","severity":1,"message":"992","line":23,"column":8,"nodeType":"927","messageId":"928","endLine":23,"endColumn":19},{"ruleId":"925","severity":1,"message":"993","line":24,"column":8,"nodeType":"927","messageId":"928","endLine":24,"endColumn":14},{"ruleId":"925","severity":1,"message":"1011","line":25,"column":8,"nodeType":"927","messageId":"928","endLine":25,"endColumn":18},{"ruleId":"925","severity":1,"message":"1012","line":26,"column":8,"nodeType":"927","messageId":"928","endLine":26,"endColumn":18},{"ruleId":"925","severity":1,"message":"1013","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"1014","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":18},{"ruleId":"925","severity":1,"message":"1015","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":12},{"ruleId":"925","severity":1,"message":"1016","line":32,"column":8,"nodeType":"927","messageId":"928","endLine":32,"endColumn":14},{"ruleId":"925","severity":1,"message":"1017","line":38,"column":12,"nodeType":"927","messageId":"928","endLine":38,"endColumn":13},{"ruleId":"925","severity":1,"message":"970","line":38,"column":15,"nodeType":"927","messageId":"928","endLine":38,"endColumn":19},{"ruleId":"994","severity":1,"message":"995","line":43,"column":46,"nodeType":"996","endLine":43,"endColumn":63},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"1005","line":8,"column":8,"nodeType":"927","messageId":"928","endLine":8,"endColumn":15},{"ruleId":"925","severity":1,"message":"979","line":10,"column":26,"nodeType":"927","messageId":"928","endLine":10,"endColumn":31},{"ruleId":"925","severity":1,"message":"1007","line":12,"column":8,"nodeType":"927","messageId":"928","endLine":12,"endColumn":19},{"ruleId":"925","severity":1,"message":"980","line":13,"column":8,"nodeType":"927","messageId":"928","endLine":13,"endColumn":17},{"ruleId":"925","severity":1,"message":"988","line":14,"column":8,"nodeType":"927","messageId":"928","endLine":14,"endColumn":24},{"ruleId":"925","severity":1,"message":"989","line":15,"column":8,"nodeType":"927","messageId":"928","endLine":15,"endColumn":16},{"ruleId":"925","severity":1,"message":"1008","line":16,"column":8,"nodeType":"927","messageId":"928","endLine":16,"endColumn":12},{"ruleId":"925","severity":1,"message":"1018","line":17,"column":8,"nodeType":"927","messageId":"928","endLine":17,"endColumn":13},{"ruleId":"925","severity":1,"message":"990","line":18,"column":8,"nodeType":"927","messageId":"928","endLine":18,"endColumn":11},{"ruleId":"925","severity":1,"message":"991","line":20,"column":8,"nodeType":"927","messageId":"928","endLine":20,"endColumn":24},{"ruleId":"925","severity":1,"message":"1010","line":22,"column":8,"nodeType":"927","messageId":"928","endLine":22,"endColumn":22},{"ruleId":"925","severity":1,"message":"992","line":23,"column":8,"nodeType":"927","messageId":"928","endLine":23,"endColumn":19},{"ruleId":"925","severity":1,"message":"993","line":24,"column":8,"nodeType":"927","messageId":"928","endLine":24,"endColumn":14},{"ruleId":"925","severity":1,"message":"1011","line":25,"column":8,"nodeType":"927","messageId":"928","endLine":25,"endColumn":18},{"ruleId":"925","severity":1,"message":"1012","line":26,"column":8,"nodeType":"927","messageId":"928","endLine":26,"endColumn":18},{"ruleId":"925","severity":1,"message":"1013","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"1014","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":18},{"ruleId":"925","severity":1,"message":"1015","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":12},{"ruleId":"925","severity":1,"message":"1019","line":32,"column":8,"nodeType":"927","messageId":"928","endLine":32,"endColumn":14},{"ruleId":"925","severity":1,"message":"970","line":42,"column":15,"nodeType":"927","messageId":"928","endLine":42,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":6,"column":22,"nodeType":"927","messageId":"928","endLine":6,"endColumn":30},{"ruleId":"925","severity":1,"message":"970","line":61,"column":15,"nodeType":"927","messageId":"928","endLine":61,"endColumn":19},{"ruleId":"975","severity":1,"message":"976","line":73,"column":20,"nodeType":"977","messageId":"958","endLine":73,"endColumn":22},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"988","line":14,"column":8,"nodeType":"927","messageId":"928","endLine":14,"endColumn":24},{"ruleId":"925","severity":1,"message":"989","line":15,"column":8,"nodeType":"927","messageId":"928","endLine":15,"endColumn":16},{"ruleId":"925","severity":1,"message":"990","line":18,"column":8,"nodeType":"927","messageId":"928","endLine":18,"endColumn":11},{"ruleId":"925","severity":1,"message":"991","line":20,"column":8,"nodeType":"927","messageId":"928","endLine":20,"endColumn":24},{"ruleId":"925","severity":1,"message":"992","line":23,"column":8,"nodeType":"927","messageId":"928","endLine":23,"endColumn":19},{"ruleId":"925","severity":1,"message":"993","line":24,"column":8,"nodeType":"927","messageId":"928","endLine":24,"endColumn":14},{"ruleId":"925","severity":1,"message":"970","line":38,"column":15,"nodeType":"927","messageId":"928","endLine":38,"endColumn":19},{"ruleId":"994","severity":1,"message":"995","line":59,"column":46,"nodeType":"996","endLine":59,"endColumn":63},{"ruleId":"925","severity":1,"message":"1020","line":7,"column":10,"nodeType":"927","messageId":"928","endLine":7,"endColumn":24},{"ruleId":"940","severity":1,"message":"941","line":37,"column":1,"nodeType":"942","endLine":39,"endColumn":2},{"ruleId":"940","severity":1,"message":"941","line":141,"column":1,"nodeType":"942","endLine":265,"endColumn":3},{"ruleId":"955","severity":1,"message":"1021","line":155,"column":5,"nodeType":"957","messageId":"958","endLine":155,"endColumn":11},{"ruleId":"955","severity":1,"message":"1022","line":70,"column":7,"nodeType":"957","messageId":"958","endLine":70,"endColumn":17},{"ruleId":"955","severity":1,"message":"1022","line":84,"column":7,"nodeType":"957","messageId":"958","endLine":84,"endColumn":17},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":16,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":16,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"925","severity":1,"message":"970","line":80,"column":13,"nodeType":"927","messageId":"928","endLine":80,"endColumn":17},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":16,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":16,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"925","severity":1,"message":"1004","line":3,"column":8,"nodeType":"927","messageId":"928","endLine":3,"endColumn":15},{"ruleId":"925","severity":1,"message":"1017","line":25,"column":10,"nodeType":"927","messageId":"928","endLine":25,"endColumn":11},{"ruleId":"925","severity":1,"message":"1024","line":25,"column":13,"nodeType":"927","messageId":"928","endLine":25,"endColumn":20},{"ruleId":"1025","severity":1,"message":"1026","line":28,"column":9,"nodeType":"1027","endLine":31,"endColumn":28},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":16,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"1024","line":26,"column":13,"nodeType":"927","messageId":"928","endLine":26,"endColumn":20},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":16,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"1028","line":14,"column":7,"nodeType":"927","messageId":"928","endLine":14,"endColumn":16},{"ruleId":"925","severity":1,"message":"1024","line":19,"column":13,"nodeType":"927","messageId":"928","endLine":19,"endColumn":20},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"1029","line":15,"column":8,"nodeType":"927","messageId":"928","endLine":15,"endColumn":13},{"ruleId":"925","severity":1,"message":"981","line":16,"column":8,"nodeType":"927","messageId":"928","endLine":16,"endColumn":18},{"ruleId":"925","severity":1,"message":"1024","line":63,"column":13,"nodeType":"927","messageId":"928","endLine":63,"endColumn":20},{"ruleId":"925","severity":1,"message":"1030","line":77,"column":21,"nodeType":"927","messageId":"928","endLine":77,"endColumn":33},{"ruleId":"925","severity":1,"message":"1031","line":78,"column":21,"nodeType":"927","messageId":"928","endLine":78,"endColumn":33},{"ruleId":"925","severity":1,"message":"973","line":14,"column":8,"nodeType":"927","messageId":"928","endLine":14,"endColumn":17},{"ruleId":"925","severity":1,"message":"1024","line":54,"column":13,"nodeType":"927","messageId":"928","endLine":54,"endColumn":20},{"ruleId":"925","severity":1,"message":"1032","line":55,"column":10,"nodeType":"927","messageId":"928","endLine":55,"endColumn":22},{"ruleId":"925","severity":1,"message":"954","line":55,"column":24,"nodeType":"927","messageId":"928","endLine":55,"endColumn":39},{"ruleId":"1033","severity":1,"message":"1034","line":66,"column":86,"nodeType":"1035","messageId":"1036","endLine":71,"endColumn":6},{"ruleId":"1033","severity":1,"message":"1034","line":74,"column":60,"nodeType":"1035","messageId":"1036","endLine":79,"endColumn":4},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"1029","line":15,"column":8,"nodeType":"927","messageId":"928","endLine":15,"endColumn":13},{"ruleId":"925","severity":1,"message":"981","line":16,"column":8,"nodeType":"927","messageId":"928","endLine":16,"endColumn":18},{"ruleId":"925","severity":1,"message":"1024","line":63,"column":13,"nodeType":"927","messageId":"928","endLine":63,"endColumn":20},{"ruleId":"925","severity":1,"message":"1030","line":75,"column":21,"nodeType":"927","messageId":"928","endLine":75,"endColumn":33},{"ruleId":"925","severity":1,"message":"1031","line":76,"column":21,"nodeType":"927","messageId":"928","endLine":76,"endColumn":33},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":16,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"925","severity":1,"message":"1037","line":1,"column":26,"nodeType":"927","messageId":"928","endLine":1,"endColumn":32},{"ruleId":"925","severity":1,"message":"974","line":2,"column":8,"nodeType":"927","messageId":"928","endLine":2,"endColumn":12},{"ruleId":"925","severity":1,"message":"1038","line":8,"column":8,"nodeType":"927","messageId":"928","endLine":8,"endColumn":12},{"ruleId":"925","severity":1,"message":"1039","line":9,"column":8,"nodeType":"927","messageId":"928","endLine":9,"endColumn":16},{"ruleId":"925","severity":1,"message":"970","line":39,"column":15,"nodeType":"927","messageId":"928","endLine":39,"endColumn":19},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":16,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"1040","severity":1,"message":"1041","line":18,"column":13,"nodeType":"1027","endLine":20,"endColumn":33},{"ruleId":"940","severity":1,"message":"941","line":7,"column":1,"nodeType":"942","endLine":9,"endColumn":2},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"1017","line":31,"column":12,"nodeType":"927","messageId":"928","endLine":31,"endColumn":13},{"ruleId":"925","severity":1,"message":"970","line":31,"column":15,"nodeType":"927","messageId":"928","endLine":31,"endColumn":19},{"ruleId":"925","severity":1,"message":"1042","line":3,"column":10,"nodeType":"927","messageId":"928","endLine":3,"endColumn":20},{"ruleId":"925","severity":1,"message":"1019","line":4,"column":8,"nodeType":"927","messageId":"928","endLine":4,"endColumn":14},{"ruleId":"925","severity":1,"message":"1043","line":5,"column":8,"nodeType":"927","messageId":"928","endLine":5,"endColumn":12},{"ruleId":"925","severity":1,"message":"1044","line":6,"column":8,"nodeType":"927","messageId":"928","endLine":6,"endColumn":11},{"ruleId":"925","severity":1,"message":"1009","line":7,"column":8,"nodeType":"927","messageId":"928","endLine":7,"endColumn":18},{"ruleId":"925","severity":1,"message":"1045","line":11,"column":49,"nodeType":"927","messageId":"928","endLine":11,"endColumn":66},{"ruleId":"925","severity":1,"message":"1046","line":11,"column":68,"nodeType":"927","messageId":"928","endLine":11,"endColumn":80},{"ruleId":"925","severity":1,"message":"1047","line":21,"column":3,"nodeType":"927","messageId":"928","endLine":21,"endColumn":11},{"ruleId":"925","severity":1,"message":"1048","line":22,"column":3,"nodeType":"927","messageId":"928","endLine":22,"endColumn":19},{"ruleId":"925","severity":1,"message":"1049","line":26,"column":3,"nodeType":"927","messageId":"928","endLine":26,"endColumn":15},{"ruleId":"925","severity":1,"message":"1050","line":29,"column":3,"nodeType":"927","messageId":"928","endLine":29,"endColumn":7},{"ruleId":"925","severity":1,"message":"1051","line":29,"column":9,"nodeType":"927","messageId":"928","endLine":29,"endColumn":15},{"ruleId":"925","severity":1,"message":"1052","line":72,"column":9,"nodeType":"927","messageId":"928","endLine":72,"endColumn":21},{"ruleId":"925","severity":1,"message":"970","line":84,"column":13,"nodeType":"927","messageId":"928","endLine":84,"endColumn":17},{"ruleId":"925","severity":1,"message":"1053","line":121,"column":24,"nodeType":"927","messageId":"928","endLine":121,"endColumn":39},{"ruleId":"925","severity":1,"message":"1054","line":122,"column":24,"nodeType":"927","messageId":"928","endLine":122,"endColumn":39},{"ruleId":"925","severity":1,"message":"1055","line":123,"column":22,"nodeType":"927","messageId":"928","endLine":123,"endColumn":35},{"ruleId":"925","severity":1,"message":"1056","line":124,"column":21,"nodeType":"927","messageId":"928","endLine":124,"endColumn":33},{"ruleId":"925","severity":1,"message":"1057","line":125,"column":31,"nodeType":"927","messageId":"928","endLine":125,"endColumn":53},{"ruleId":"925","severity":1,"message":"1058","line":180,"column":11,"nodeType":"927","messageId":"928","endLine":180,"endColumn":19},{"ruleId":"940","severity":1,"message":"941","line":24,"column":1,"nodeType":"942","endLine":28,"endColumn":2},{"ruleId":"925","severity":1,"message":"1059","line":1,"column":17,"nodeType":"927","messageId":"928","endLine":1,"endColumn":26},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":28,"nodeType":"927","messageId":"928","endLine":1,"endColumn":36},{"ruleId":"925","severity":1,"message":"1060","line":5,"column":3,"nodeType":"927","messageId":"928","endLine":5,"endColumn":17},{"ruleId":"925","severity":1,"message":"969","line":8,"column":22,"nodeType":"927","messageId":"928","endLine":8,"endColumn":30},{"ruleId":"940","severity":1,"message":"941","line":62,"column":1,"nodeType":"942","endLine":65,"endColumn":2},{"ruleId":"940","severity":1,"message":"941","line":8,"column":1,"nodeType":"942","endLine":10,"endColumn":2},{"ruleId":"925","severity":1,"message":"1011","line":7,"column":8,"nodeType":"927","messageId":"928","endLine":7,"endColumn":18},{"ruleId":"975","severity":1,"message":"978","line":42,"column":15,"nodeType":"977","messageId":"958","endLine":42,"endColumn":17},{"ruleId":"975","severity":1,"message":"976","line":54,"column":23,"nodeType":"977","messageId":"958","endLine":54,"endColumn":25},{"ruleId":"925","severity":1,"message":"1061","line":5,"column":3,"nodeType":"927","messageId":"928","endLine":5,"endColumn":11},{"ruleId":"925","severity":1,"message":"1009","line":6,"column":3,"nodeType":"927","messageId":"928","endLine":6,"endColumn":13},{"ruleId":"925","severity":1,"message":"1062","line":12,"column":8,"nodeType":"927","messageId":"928","endLine":12,"endColumn":21},{"ruleId":"925","severity":1,"message":"1063","line":2,"column":16,"nodeType":"927","messageId":"928","endLine":2,"endColumn":20},{"ruleId":"925","severity":1,"message":"970","line":34,"column":13,"nodeType":"927","messageId":"928","endLine":34,"endColumn":17},{"ruleId":"925","severity":1,"message":"1061","line":5,"column":3,"nodeType":"927","messageId":"928","endLine":5,"endColumn":11},{"ruleId":"925","severity":1,"message":"1009","line":6,"column":3,"nodeType":"927","messageId":"928","endLine":6,"endColumn":13},{"ruleId":"975","severity":1,"message":"976","line":34,"column":20,"nodeType":"977","messageId":"958","endLine":34,"endColumn":22},{"ruleId":"975","severity":1,"message":"976","line":34,"column":39,"nodeType":"977","messageId":"958","endLine":34,"endColumn":41},{"ruleId":"925","severity":1,"message":"1061","line":5,"column":3,"nodeType":"927","messageId":"928","endLine":5,"endColumn":11},{"ruleId":"925","severity":1,"message":"1009","line":6,"column":3,"nodeType":"927","messageId":"928","endLine":6,"endColumn":13},{"ruleId":"925","severity":1,"message":"1064","line":17,"column":9,"nodeType":"927","messageId":"928","endLine":17,"endColumn":16},{"ruleId":"925","severity":1,"message":"1064","line":17,"column":9,"nodeType":"927","messageId":"928","endLine":17,"endColumn":16},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":3,"column":26,"nodeType":"927","messageId":"928","endLine":3,"endColumn":31},{"ruleId":"925","severity":1,"message":"970","line":17,"column":15,"nodeType":"927","messageId":"928","endLine":17,"endColumn":19},{"ruleId":"940","severity":1,"message":"941","line":15,"column":1,"nodeType":"942","endLine":18,"endColumn":2},{"ruleId":"925","severity":1,"message":"974","line":3,"column":8,"nodeType":"927","messageId":"928","endLine":3,"endColumn":12},{"ruleId":"925","severity":1,"message":"970","line":26,"column":13,"nodeType":"927","messageId":"928","endLine":26,"endColumn":17},{"ruleId":"925","severity":1,"message":"1065","line":1,"column":8,"nodeType":"927","messageId":"928","endLine":1,"endColumn":23},{"ruleId":"925","severity":1,"message":"1066","line":1,"column":15,"nodeType":"927","messageId":"928","endLine":1,"endColumn":24},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":25,"nodeType":"927","messageId":"928","endLine":1,"endColumn":33},{"ruleId":"925","severity":1,"message":"1067","line":3,"column":3,"nodeType":"927","messageId":"928","endLine":3,"endColumn":12},{"ruleId":"925","severity":1,"message":"1068","line":4,"column":3,"nodeType":"927","messageId":"928","endLine":4,"endColumn":13},{"ruleId":"925","severity":1,"message":"1069","line":6,"column":8,"nodeType":"927","messageId":"928","endLine":6,"endColumn":18},{"ruleId":"925","severity":1,"message":"969","line":8,"column":22,"nodeType":"927","messageId":"928","endLine":8,"endColumn":30},{"ruleId":"925","severity":1,"message":"1070","line":9,"column":10,"nodeType":"927","messageId":"928","endLine":9,"endColumn":17},{"ruleId":"925","severity":1,"message":"979","line":12,"column":26,"nodeType":"927","messageId":"928","endLine":12,"endColumn":31},{"ruleId":"925","severity":1,"message":"973","line":15,"column":8,"nodeType":"927","messageId":"928","endLine":15,"endColumn":17},{"ruleId":"925","severity":1,"message":"1009","line":16,"column":10,"nodeType":"927","messageId":"928","endLine":16,"endColumn":20},{"ruleId":"925","severity":1,"message":"1071","line":17,"column":5,"nodeType":"927","messageId":"928","endLine":17,"endColumn":9},{"ruleId":"925","severity":1,"message":"1019","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":11},{"ruleId":"925","severity":1,"message":"1043","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":9},{"ruleId":"925","severity":1,"message":"1044","line":20,"column":5,"nodeType":"927","messageId":"928","endLine":20,"endColumn":8},{"ruleId":"925","severity":1,"message":"1008","line":21,"column":5,"nodeType":"927","messageId":"928","endLine":21,"endColumn":9},{"ruleId":"925","severity":1,"message":"1072","line":33,"column":8,"nodeType":"927","messageId":"928","endLine":33,"endColumn":16},{"ruleId":"925","severity":1,"message":"1073","line":44,"column":8,"nodeType":"927","messageId":"928","endLine":44,"endColumn":16},{"ruleId":"925","severity":1,"message":"1074","line":65,"column":10,"nodeType":"927","messageId":"928","endLine":65,"endColumn":19},{"ruleId":"925","severity":1,"message":"970","line":73,"column":15,"nodeType":"927","messageId":"928","endLine":73,"endColumn":19},{"ruleId":"925","severity":1,"message":"1075","line":76,"column":11,"nodeType":"927","messageId":"928","endLine":76,"endColumn":20},{"ruleId":"925","severity":1,"message":"1076","line":77,"column":11,"nodeType":"927","messageId":"928","endLine":77,"endColumn":21},{"ruleId":"925","severity":1,"message":"1077","line":106,"column":11,"nodeType":"927","messageId":"928","endLine":106,"endColumn":15},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"1078","line":3,"column":19,"nodeType":"927","messageId":"928","endLine":3,"endColumn":29},{"ruleId":"925","severity":1,"message":"979","line":6,"column":26,"nodeType":"927","messageId":"928","endLine":6,"endColumn":31},{"ruleId":"925","severity":1,"message":"1071","line":11,"column":5,"nodeType":"927","messageId":"928","endLine":11,"endColumn":9},{"ruleId":"925","severity":1,"message":"1044","line":12,"column":5,"nodeType":"927","messageId":"928","endLine":12,"endColumn":8},{"ruleId":"925","severity":1,"message":"1017","line":20,"column":12,"nodeType":"927","messageId":"928","endLine":20,"endColumn":13},{"ruleId":"925","severity":1,"message":"970","line":20,"column":15,"nodeType":"927","messageId":"928","endLine":20,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1080","line":30,"column":29,"nodeType":"1027","endLine":30,"endColumn":84},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"953","line":41,"column":8,"nodeType":"927","messageId":"928","endLine":41,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":65,"column":15,"nodeType":"927","messageId":"928","endLine":65,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"983","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"984","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":25},{"ruleId":"925","severity":1,"message":"985","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":26},{"ruleId":"925","severity":1,"message":"986","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"987","line":31,"column":8,"nodeType":"927","messageId":"928","endLine":31,"endColumn":17},{"ruleId":"925","severity":1,"message":"953","line":45,"column":8,"nodeType":"927","messageId":"928","endLine":45,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":70,"column":15,"nodeType":"927","messageId":"928","endLine":70,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"983","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"984","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":25},{"ruleId":"925","severity":1,"message":"985","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":26},{"ruleId":"925","severity":1,"message":"986","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"987","line":31,"column":8,"nodeType":"927","messageId":"928","endLine":31,"endColumn":17},{"ruleId":"925","severity":1,"message":"953","line":45,"column":8,"nodeType":"927","messageId":"928","endLine":45,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":70,"column":15,"nodeType":"927","messageId":"928","endLine":70,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"983","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"984","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":25},{"ruleId":"925","severity":1,"message":"985","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":26},{"ruleId":"925","severity":1,"message":"986","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"987","line":31,"column":8,"nodeType":"927","messageId":"928","endLine":31,"endColumn":17},{"ruleId":"925","severity":1,"message":"953","line":45,"column":8,"nodeType":"927","messageId":"928","endLine":45,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":72,"column":15,"nodeType":"927","messageId":"928","endLine":72,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"980","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":15},{"ruleId":"925","severity":1,"message":"982","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":16},{"ruleId":"925","severity":1,"message":"983","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":21},{"ruleId":"925","severity":1,"message":"984","line":28,"column":8,"nodeType":"927","messageId":"928","endLine":28,"endColumn":25},{"ruleId":"925","severity":1,"message":"985","line":29,"column":8,"nodeType":"927","messageId":"928","endLine":29,"endColumn":26},{"ruleId":"925","severity":1,"message":"986","line":30,"column":8,"nodeType":"927","messageId":"928","endLine":30,"endColumn":20},{"ruleId":"925","severity":1,"message":"987","line":31,"column":8,"nodeType":"927","messageId":"928","endLine":31,"endColumn":17},{"ruleId":"925","severity":1,"message":"953","line":45,"column":8,"nodeType":"927","messageId":"928","endLine":45,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":71,"column":15,"nodeType":"927","messageId":"928","endLine":71,"endColumn":19},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":4,"column":26,"nodeType":"927","messageId":"928","endLine":4,"endColumn":31},{"ruleId":"925","severity":1,"message":"953","line":27,"column":8,"nodeType":"927","messageId":"928","endLine":27,"endColumn":15},{"ruleId":"925","severity":1,"message":"970","line":32,"column":15,"nodeType":"927","messageId":"928","endLine":32,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1080","line":69,"column":21,"nodeType":"1027","endLine":69,"endColumn":39},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":15,"nodeType":"927","messageId":"928","endLine":1,"endColumn":23},{"ruleId":"925","severity":1,"message":"1023","line":1,"column":15,"nodeType":"927","messageId":"928","endLine":1,"endColumn":23},{"ruleId":"925","severity":1,"message":"969","line":2,"column":22,"nodeType":"927","messageId":"928","endLine":2,"endColumn":30},{"ruleId":"925","severity":1,"message":"979","line":9,"column":26,"nodeType":"927","messageId":"928","endLine":9,"endColumn":31},{"ruleId":"925","severity":1,"message":"973","line":12,"column":8,"nodeType":"927","messageId":"928","endLine":12,"endColumn":17},{"ruleId":"925","severity":1,"message":"1009","line":13,"column":10,"nodeType":"927","messageId":"928","endLine":13,"endColumn":20},{"ruleId":"925","severity":1,"message":"1081","line":14,"column":5,"nodeType":"927","messageId":"928","endLine":14,"endColumn":10},{"ruleId":"925","severity":1,"message":"1082","line":15,"column":5,"nodeType":"927","messageId":"928","endLine":15,"endColumn":14},{"ruleId":"925","severity":1,"message":"1083","line":16,"column":5,"nodeType":"927","messageId":"928","endLine":16,"endColumn":14},{"ruleId":"925","severity":1,"message":"1084","line":17,"column":5,"nodeType":"927","messageId":"928","endLine":17,"endColumn":19},{"ruleId":"925","severity":1,"message":"1085","line":18,"column":5,"nodeType":"927","messageId":"928","endLine":18,"endColumn":16},{"ruleId":"925","severity":1,"message":"1086","line":19,"column":5,"nodeType":"927","messageId":"928","endLine":19,"endColumn":20},{"ruleId":"925","severity":1,"message":"1061","line":20,"column":5,"nodeType":"927","messageId":"928","endLine":20,"endColumn":13},{"ruleId":"925","severity":1,"message":"1087","line":21,"column":5,"nodeType":"927","messageId":"928","endLine":21,"endColumn":14},{"ruleId":"925","severity":1,"message":"1018","line":22,"column":5,"nodeType":"927","messageId":"928","endLine":22,"endColumn":10},{"ruleId":"925","severity":1,"message":"980","line":23,"column":5,"nodeType":"927","messageId":"928","endLine":23,"endColumn":14},{"ruleId":"925","severity":1,"message":"981","line":24,"column":5,"nodeType":"927","messageId":"928","endLine":24,"endColumn":15},{"ruleId":"925","severity":1,"message":"1010","line":25,"column":5,"nodeType":"927","messageId":"928","endLine":25,"endColumn":19},{"ruleId":"925","severity":1,"message":"1088","line":26,"column":5,"nodeType":"927","messageId":"928","endLine":26,"endColumn":16},{"ruleId":"925","severity":1,"message":"982","line":27,"column":5,"nodeType":"927","messageId":"928","endLine":27,"endColumn":16},{"ruleId":"925","severity":1,"message":"1089","line":28,"column":5,"nodeType":"927","messageId":"928","endLine":28,"endColumn":18},{"ruleId":"925","severity":1,"message":"1071","line":33,"column":8,"nodeType":"927","messageId":"928","endLine":33,"endColumn":12},{"ruleId":"925","severity":1,"message":"1011","line":34,"column":8,"nodeType":"927","messageId":"928","endLine":34,"endColumn":18},{"ruleId":"925","severity":1,"message":"1090","line":38,"column":8,"nodeType":"927","messageId":"928","endLine":38,"endColumn":17},{"ruleId":"925","severity":1,"message":"1091","line":54,"column":8,"nodeType":"927","messageId":"928","endLine":54,"endColumn":18},{"ruleId":"925","severity":1,"message":"1092","line":55,"column":8,"nodeType":"927","messageId":"928","endLine":55,"endColumn":18},{"ruleId":"925","severity":1,"message":"1093","line":56,"column":8,"nodeType":"927","messageId":"928","endLine":56,"endColumn":14},{"ruleId":"925","severity":1,"message":"970","line":86,"column":15,"nodeType":"927","messageId":"928","endLine":86,"endColumn":19},{"ruleId":"975","severity":1,"message":"976","line":94,"column":23,"nodeType":"977","messageId":"958","endLine":94,"endColumn":25},{"ruleId":"1079","severity":1,"message":"1080","line":163,"column":39,"nodeType":"1027","endLine":163,"endColumn":97},{"ruleId":"925","severity":1,"message":"969","line":3,"column":22,"nodeType":"927","messageId":"928","endLine":3,"endColumn":30},{"ruleId":"925","severity":1,"message":"1043","line":6,"column":9,"nodeType":"927","messageId":"928","endLine":6,"endColumn":13},{"ruleId":"925","severity":1,"message":"1044","line":7,"column":5,"nodeType":"927","messageId":"928","endLine":7,"endColumn":8},"no-native-reassign",["1094"],"no-negated-in-lhs",["1095"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Providers' is defined but never used.","'Staffs' is defined but never used.","'Procedure' is defined but never used.","'Referral' is defined but never used.","'Authentication' is defined but never used.","'Chairs' is defined but never used.","'Schedule' is defined but never used.","'Portal' is defined but never used.","'Drug' is defined but never used.","'Practice' is defined but never used.","'MenuBar' is defined but never used.","'dispatchLoading' is assigned a value but never used.","no-dupe-keys","Duplicate key 'Address'.","ObjectExpression","unexpected","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","no-useless-escape","Unnecessary escape character: \\Y.","unnecessaryEscape",["1096","1097"],"'moment' is defined but never used.","'path' is defined but never used.","'useTheme' is defined but never used.","'i18n' is assigned a value but never used.","'calendarDate' is assigned a value but never used.","'setCalendarDate' is assigned a value but never used.","'Container' is defined but never used.","'clsx' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'Trans' is defined but never used.","'TextField' is defined but never used.","'InputLabel' is defined but never used.","'FilledInput' is defined but never used.","'FirstPageIcon' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'KeyboardArrowRight' is defined but never used.","'LastPageIcon' is defined but never used.","'PropTypes' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'CustomInput' is defined but never used.","'People' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CalendarTodayIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'CustomAvatar' is defined but never used.","'disableClick' is defined but never used.","'strings' is defined but never used.","'logoADC' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'AccountBox' is defined but never used.","'Lock' is defined but never used.","'Footer' is defined but never used.","'t' is assigned a value but never used.","'Paper' is defined but never used.","'AppBar' is defined but never used.","'FormHelperText' is defined but never used.","Duplicate key 'report'.","Duplicate key 'transition'.","'useState' is defined but never used.","'i18next' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'useStyles' is assigned a value but never used.","'Input' is defined but never used.","'setIsSuccess' is assigned a value but never used.","'setResultMsg' is assigned a value but never used.","'loadingState' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useRef' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'makeStyles' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'IntegratedEditing' is defined but never used.","'EditingState' is defined but never used.","'WeekView' is defined but never used.","'DragDropProvider' is defined but never used.","'ViewSwitcher' is defined but never used.","'teal' is defined but never used.","'indigo' is defined but never used.","'numOfPeriods' is assigned a value but never used.","'setCellDuration' is assigned a value but never used.","'setStartDayHour' is assigned a value but never used.","'setEndDayHour' is assigned a value but never used.","'setTimeTable' is assigned a value but never used.","'setTimeTableCellHeight' is assigned a value but never used.","'stateArr' is assigned a value but never used.","'Component' is defined but never used.","'addLinkSnippet' is defined but never used.","'TableRow' is defined but never used.","'EventSeatIcon' is defined but never used.","'memo' is defined but never used.","'classes' is assigned a value but never used.","'loginBackground' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","'routePaths' is defined but never used.","'NavLink' is defined but never used.","'Grid' is defined but never used.","'Document' is defined but never used.","'TabPanel' is defined but never used.","'a11yProps' is defined but never used.","'ArrowLeft' is assigned a value but never used.","'ArrowRight' is assigned a value but never used.","'tabs' is assigned a value but never used.","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableFooter' is defined but never used.","'TablePagination' is defined but never used.","'TableHead' is defined but never used.","'FormControl' is defined but never used.","'OutlinedInput' is defined but never used.","'darkTheme' is defined but never used.","'SearchIcon' is defined but never used.","'FilterList' is defined but never used.","'AddBox' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"1098","fix":"1099","desc":"1100"},{"messageId":"1101","fix":"1102","desc":"1103"},"removeEscape",{"range":"1104","text":"1105"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1106","text":"1107"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2438,2439],"",[2438,2438],"\\"]